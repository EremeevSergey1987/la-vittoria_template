!function(){"use strict";var t=0,s={};function i(e){if(!e)throw new Error("No options passed to Waypoint constructor");if(!e.element)throw new Error("No element option passed to Waypoint constructor");if(!e.handler)throw new Error("No handler option passed to Waypoint constructor");this.key="waypoint-"+t,this.options=i.Adapter.extend({},i.defaults,e),this.element=this.options.element,this.adapter=new i.Adapter(this.element),this.callback=e.handler,this.axis=this.options.horizontal?"horizontal":"vertical",this.enabled=this.options.enabled,this.triggerPoint=null,this.group=i.Group.findOrCreate({name:this.options.group,axis:this.axis}),this.context=i.Context.findOrCreateByElement(this.options.context),i.offsetAliases[this.options.offset]&&(this.options.offset=i.offsetAliases[this.options.offset]),this.group.add(this),this.context.add(this),s[this.key]=this,t+=1}i.prototype.queueTrigger=function(e){this.group.queueTrigger(this,e)},i.prototype.trigger=function(e){this.enabled&&this.callback&&this.callback.apply(this,e)},i.prototype.destroy=function(){this.context.remove(this),this.group.remove(this),delete s[this.key]},i.prototype.disable=function(){return this.enabled=!1,this},i.prototype.enable=function(){return this.context.refresh(),this.enabled=!0,this},i.prototype.next=function(){return this.group.next(this)},i.prototype.previous=function(){return this.group.previous(this)},i.invokeAll=function(e){var t=[];for(var i in s)t.push(s[i]);for(var a=0,n=t.length;a<n;a++)t[a][e]()},i.destroyAll=function(){i.invokeAll("destroy")},i.disableAll=function(){i.invokeAll("disable")},i.enableAll=function(){for(var e in i.Context.refreshAll(),s)s[e].enabled=!0;return this},i.refreshAll=function(){i.Context.refreshAll()},i.viewportHeight=function(){return window.innerHeight||document.documentElement.clientHeight},i.viewportWidth=function(){return document.documentElement.clientWidth},i.adapters=[],i.defaults={context:window,continuous:!0,enabled:!0,group:"default",horizontal:!1,offset:0},i.offsetAliases={"bottom-in-view":function(){return this.context.innerHeight()-this.adapter.outerHeight()},"right-in-view":function(){return this.context.innerWidth()-this.adapter.outerWidth()}},window.Waypoint=i}(),function(){"use strict";function t(e){window.setTimeout(e,1e3/60)}var i=0,a={},g=window.Waypoint,e=window.onload;function n(e){this.element=e,this.Adapter=g.Adapter,this.adapter=new this.Adapter(e),this.key="waypoint-context-"+i,this.didScroll=!1,this.didResize=!1,this.oldScroll={x:this.adapter.scrollLeft(),y:this.adapter.scrollTop()},this.waypoints={vertical:{},horizontal:{}},e.waypointContextKey=this.key,a[e.waypointContextKey]=this,i+=1,g.windowContext||(g.windowContext=!0,g.windowContext=new n(window)),this.createThrottledScrollHandler(),this.createThrottledResizeHandler()}n.prototype.add=function(e){var t=e.options.horizontal?"horizontal":"vertical";this.waypoints[t][e.key]=e,this.refresh()},n.prototype.checkEmpty=function(){var e=this.Adapter.isEmptyObject(this.waypoints.horizontal),t=this.Adapter.isEmptyObject(this.waypoints.vertical),i=this.element==this.element.window;e&&t&&!i&&(this.adapter.off(".waypoints"),delete a[this.key])},n.prototype.createThrottledResizeHandler=function(){var e=this;function t(){e.handleResize(),e.didResize=!1}this.adapter.on("resize.waypoints",function(){e.didResize||(e.didResize=!0,g.requestAnimationFrame(t))})},n.prototype.createThrottledScrollHandler=function(){var e=this;function t(){e.handleScroll(),e.didScroll=!1}this.adapter.on("scroll.waypoints",function(){e.didScroll&&!g.isTouch||(e.didScroll=!0,g.requestAnimationFrame(t))})},n.prototype.handleResize=function(){g.Context.refreshAll()},n.prototype.handleScroll=function(){var e={},t={horizontal:{newScroll:this.adapter.scrollLeft(),oldScroll:this.oldScroll.x,forward:"right",backward:"left"},vertical:{newScroll:this.adapter.scrollTop(),oldScroll:this.oldScroll.y,forward:"down",backward:"up"}};for(var i in t){var a=t[i],n=a.newScroll>a.oldScroll?a.forward:a.backward;for(var s in this.waypoints[i]){var r=this.waypoints[i][s];if(null!==r.triggerPoint){var o=a.oldScroll<r.triggerPoint,l=a.newScroll>=r.triggerPoint;(o&&l||!o&&!l)&&(r.queueTrigger(n),e[r.group.id]=r.group)}}}for(var d in e)e[d].flushTriggers();this.oldScroll={x:t.horizontal.newScroll,y:t.vertical.newScroll}},n.prototype.innerHeight=function(){return this.element==this.element.window?g.viewportHeight():this.adapter.innerHeight()},n.prototype.remove=function(e){delete this.waypoints[e.axis][e.key],this.checkEmpty()},n.prototype.innerWidth=function(){return this.element==this.element.window?g.viewportWidth():this.adapter.innerWidth()},n.prototype.destroy=function(){var e=[];for(var t in this.waypoints)for(var i in this.waypoints[t])e.push(this.waypoints[t][i]);for(var a=0,n=e.length;a<n;a++)e[a].destroy()},n.prototype.refresh=function(){var e,t=this.element==this.element.window,i=t?void 0:this.adapter.offset(),a={};for(var n in this.handleScroll(),e={horizontal:{contextOffset:t?0:i.left,contextScroll:t?0:this.oldScroll.x,contextDimension:this.innerWidth(),oldScroll:this.oldScroll.x,forward:"right",backward:"left",offsetProp:"left"},vertical:{contextOffset:t?0:i.top,contextScroll:t?0:this.oldScroll.y,contextDimension:this.innerHeight(),oldScroll:this.oldScroll.y,forward:"down",backward:"up",offsetProp:"top"}}){var s=e[n];for(var r in this.waypoints[n]){var o,l,d,c,p=this.waypoints[n][r],u=p.options.offset,h=p.triggerPoint,f=0,v=null==h;p.element!==p.element.window&&(f=p.adapter.offset()[s.offsetProp]),"function"==typeof u?u=u.apply(p):"string"==typeof u&&(u=parseFloat(u),-1<p.options.offset.indexOf("%")&&(u=Math.ceil(s.contextDimension*u/100))),o=s.contextScroll-s.contextOffset,p.triggerPoint=Math.floor(f+o-u),l=h<s.oldScroll,d=p.triggerPoint>=s.oldScroll,c=!l&&!d,!v&&(l&&d)?(p.queueTrigger(s.backward),a[p.group.id]=p.group):!v&&c?(p.queueTrigger(s.forward),a[p.group.id]=p.group):v&&s.oldScroll>=p.triggerPoint&&(p.queueTrigger(s.forward),a[p.group.id]=p.group)}}return g.requestAnimationFrame(function(){for(var e in a)a[e].flushTriggers()}),this},n.findOrCreateByElement=function(e){return n.findByElement(e)||new n(e)},n.refreshAll=function(){for(var e in a)a[e].refresh()},n.findByElement=function(e){return a[e.waypointContextKey]},window.onload=function(){e&&e(),n.refreshAll()},g.requestAnimationFrame=function(e){(window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||t).call(window,e)},g.Context=n}(),function(){"use strict";function r(e,t){return e.triggerPoint-t.triggerPoint}function o(e,t){return t.triggerPoint-e.triggerPoint}var t={vertical:{},horizontal:{}},i=window.Waypoint;function a(e){this.name=e.name,this.axis=e.axis,this.id=this.name+"-"+this.axis,this.waypoints=[],this.clearTriggerQueues(),t[this.axis][this.name]=this}a.prototype.add=function(e){this.waypoints.push(e)},a.prototype.clearTriggerQueues=function(){this.triggerQueues={up:[],down:[],left:[],right:[]}},a.prototype.flushTriggers=function(){for(var e in this.triggerQueues){var t=this.triggerQueues[e],i="up"===e||"left"===e;t.sort(i?o:r);for(var a=0,n=t.length;a<n;a+=1){var s=t[a];!s.options.continuous&&a!==t.length-1||s.trigger([e])}}this.clearTriggerQueues()},a.prototype.next=function(e){this.waypoints.sort(r);var t=i.Adapter.inArray(e,this.waypoints);return t===this.waypoints.length-1?null:this.waypoints[t+1]},a.prototype.previous=function(e){this.waypoints.sort(r);var t=i.Adapter.inArray(e,this.waypoints);return t?this.waypoints[t-1]:null},a.prototype.queueTrigger=function(e,t){this.triggerQueues[t].push(e)},a.prototype.remove=function(e){var t=i.Adapter.inArray(e,this.waypoints);-1<t&&this.waypoints.splice(t,1)},a.prototype.first=function(){return this.waypoints[0]},a.prototype.last=function(){return this.waypoints[this.waypoints.length-1]},a.findOrCreate=function(e){return t[e.axis][e.name]||new a(e)},i.Group=a}(),function(){"use strict";var i=window.jQuery,e=window.Waypoint;function a(e){this.$element=i(e)}i.each(["innerHeight","innerWidth","off","offset","on","outerHeight","outerWidth","scrollLeft","scrollTop"],function(e,t){a.prototype[t]=function(){var e=Array.prototype.slice.call(arguments);return this.$element[t].apply(this.$element,e)}}),i.each(["extend","inArray","isEmptyObject"],function(e,t){a[t]=i[t]}),e.adapters.push({name:"jquery",Adapter:a}),e.Adapter=a}(),function(){"use strict";var n=window.Waypoint;function e(a){return function(){var t=[],i=arguments[0];return a.isFunction(arguments[0])&&((i=a.extend({},arguments[1])).handler=arguments[0]),this.each(function(){var e=a.extend({},i,{element:this});"string"==typeof e.context&&(e.context=a(this).closest(e.context)[0]),t.push(new n(e))}),t}}window.jQuery&&(window.jQuery.fn.waypoint=e(window.jQuery)),window.Zepto&&(window.Zepto.fn.waypoint=e(window.Zepto))}(),function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).Swiper=t()}(this,function(){"use strict";var v="undefined"==typeof document?{body:{},addEventListener:function(){},removeEventListener:function(){},activeElement:{blur:function(){},nodeName:""},querySelector:function(){return null},querySelectorAll:function(){return[]},getElementById:function(){return null},createEvent:function(){return{initEvent:function(){}}},createElement:function(){return{children:[],childNodes:[],style:{},setAttribute:function(){},getElementsByTagName:function(){return[]}}},location:{hash:""}}:document,ee="undefined"==typeof window?{document:v,navigator:{userAgent:""},location:{},history:{},CustomEvent:function(){return this},addEventListener:function(){},removeEventListener:function(){},getComputedStyle:function(){return{getPropertyValue:function(){return""}}},Image:function(){},Date:function(){},screen:{},setTimeout:function(){},clearTimeout:function(){}}:window,l=function(e){for(var t=0;t<e.length;t+=1)this[t]=e[t];return this.length=e.length,this};function I(e,t){var i=[],a=0;if(e&&!t&&e instanceof l)return e;if(e)if("string"==typeof e){var n,s,r=e.trim();if(0<=r.indexOf("<")&&0<=r.indexOf(">")){var o="div";for(0===r.indexOf("<li")&&(o="ul"),0===r.indexOf("<tr")&&(o="tbody"),0!==r.indexOf("<td")&&0!==r.indexOf("<th")||(o="tr"),0===r.indexOf("<tbody")&&(o="table"),0===r.indexOf("<option")&&(o="select"),(s=v.createElement(o)).innerHTML=r,a=0;a<s.childNodes.length;a+=1)i.push(s.childNodes[a])}else for(n=t||"#"!==e[0]||e.match(/[ .<>:~]/)?(t||v).querySelectorAll(e.trim()):[v.getElementById(e.trim().split("#")[1])],a=0;a<n.length;a+=1)n[a]&&i.push(n[a])}else if(e.nodeType||e===ee||e===v)i.push(e);else if(0<e.length&&e[0].nodeType)for(a=0;a<e.length;a+=1)i.push(e[a]);return new l(i)}function s(e){for(var t=[],i=0;i<e.length;i+=1)-1===t.indexOf(e[i])&&t.push(e[i]);return t}I.fn=l.prototype,I.Class=l,I.Dom7=l;var t={addClass:function(e){if(void 0===e)return this;for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var a=0;a<this.length;a+=1)void 0!==this[a]&&void 0!==this[a].classList&&this[a].classList.add(t[i]);return this},removeClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var a=0;a<this.length;a+=1)void 0!==this[a]&&void 0!==this[a].classList&&this[a].classList.remove(t[i]);return this},hasClass:function(e){return!!this[0]&&this[0].classList.contains(e)},toggleClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var a=0;a<this.length;a+=1)void 0!==this[a]&&void 0!==this[a].classList&&this[a].classList.toggle(t[i]);return this},attr:function(e,t){var i=arguments;if(1===arguments.length&&"string"==typeof e)return this[0]?this[0].getAttribute(e):void 0;for(var a=0;a<this.length;a+=1)if(2===i.length)this[a].setAttribute(e,t);else for(var n in e)this[a][n]=e[n],this[a].setAttribute(n,e[n]);return this},removeAttr:function(e){for(var t=0;t<this.length;t+=1)this[t].removeAttribute(e);return this},data:function(e,t){var i;if(void 0!==t){for(var a=0;a<this.length;a+=1)(i=this[a]).dom7ElementDataStorage||(i.dom7ElementDataStorage={}),i.dom7ElementDataStorage[e]=t;return this}if(i=this[0]){if(i.dom7ElementDataStorage&&e in i.dom7ElementDataStorage)return i.dom7ElementDataStorage[e];var n=i.getAttribute("data-"+e);return n||void 0}},transform:function(e){for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransform=e,i.transform=e}return this},transition:function(e){"string"!=typeof e&&(e+="ms");for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransitionDuration=e,i.transitionDuration=e}return this},on:function(){for(var e,t=[],i=arguments.length;i--;)t[i]=arguments[i];var a=t[0],s=t[1],r=t[2],n=t[3];function o(e){var t=e.target;if(t){var i=e.target.dom7EventData||[];if(i.indexOf(e)<0&&i.unshift(e),I(t).is(s))r.apply(t,i);else for(var a=I(t).parents(),n=0;n<a.length;n+=1)I(a[n]).is(s)&&r.apply(a[n],i)}}function l(e){var t=e&&e.target&&e.target.dom7EventData||[];t.indexOf(e)<0&&t.unshift(e),r.apply(this,t)}"function"==typeof t[1]&&(a=(e=t)[0],r=e[1],n=e[2],s=void 0),n=n||!1;for(var d,c=a.split(" "),p=0;p<this.length;p+=1){var u=this[p];if(s)for(d=0;d<c.length;d+=1){var h=c[d];u.dom7LiveListeners||(u.dom7LiveListeners={}),u.dom7LiveListeners[h]||(u.dom7LiveListeners[h]=[]),u.dom7LiveListeners[h].push({listener:r,proxyListener:o}),u.addEventListener(h,o,n)}else for(d=0;d<c.length;d+=1){var f=c[d];u.dom7Listeners||(u.dom7Listeners={}),u.dom7Listeners[f]||(u.dom7Listeners[f]=[]),u.dom7Listeners[f].push({listener:r,proxyListener:l}),u.addEventListener(f,l,n)}}return this},off:function(){for(var e,t=[],i=arguments.length;i--;)t[i]=arguments[i];var a=t[0],n=t[1],s=t[2],r=t[3];"function"==typeof t[1]&&(a=(e=t)[0],s=e[1],r=e[2],n=void 0),r=r||!1;for(var o=a.split(" "),l=0;l<o.length;l+=1)for(var d=o[l],c=0;c<this.length;c+=1){var p=this[c],u=void 0;if(!n&&p.dom7Listeners?u=p.dom7Listeners[d]:n&&p.dom7LiveListeners&&(u=p.dom7LiveListeners[d]),u&&u.length)for(var h=u.length-1;0<=h;h-=1){var f=u[h];s&&f.listener===s?(p.removeEventListener(d,f.proxyListener,r),u.splice(h,1)):s&&f.listener&&f.listener.dom7proxy&&f.listener.dom7proxy===s?(p.removeEventListener(d,f.proxyListener,r),u.splice(h,1)):s||(p.removeEventListener(d,f.proxyListener,r),u.splice(h,1))}}return this},trigger:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var i=e[0].split(" "),a=e[1],n=0;n<i.length;n+=1)for(var s=i[n],r=0;r<this.length;r+=1){var o=this[r],l=void 0;try{l=new ee.CustomEvent(s,{detail:a,bubbles:!0,cancelable:!0})}catch(e){(l=v.createEvent("Event")).initEvent(s,!0,!0),l.detail=a}o.dom7EventData=e.filter(function(e,t){return 0<t}),o.dispatchEvent(l),o.dom7EventData=[],delete o.dom7EventData}return this},transitionEnd:function(t){var i,a=["webkitTransitionEnd","transitionend"],n=this;function s(e){if(e.target===this)for(t.call(this,e),i=0;i<a.length;i+=1)n.off(a[i],s)}if(t)for(i=0;i<a.length;i+=1)n.on(a[i],s);return this},outerWidth:function(e){if(0<this.length){if(e){var t=this.styles();return this[0].offsetWidth+parseFloat(t.getPropertyValue("margin-right"))+parseFloat(t.getPropertyValue("margin-left"))}return this[0].offsetWidth}return null},outerHeight:function(e){if(0<this.length){if(e){var t=this.styles();return this[0].offsetHeight+parseFloat(t.getPropertyValue("margin-top"))+parseFloat(t.getPropertyValue("margin-bottom"))}return this[0].offsetHeight}return null},offset:function(){if(0<this.length){var e=this[0],t=e.getBoundingClientRect(),i=v.body,a=e.clientTop||i.clientTop||0,n=e.clientLeft||i.clientLeft||0,s=e===ee?ee.scrollY:e.scrollTop,r=e===ee?ee.scrollX:e.scrollLeft;return{top:t.top+s-a,left:t.left+r-n}}return null},css:function(e,t){var i;if(1===arguments.length){if("string"!=typeof e){for(i=0;i<this.length;i+=1)for(var a in e)this[i].style[a]=e[a];return this}if(this[0])return ee.getComputedStyle(this[0],null).getPropertyValue(e)}if(2!==arguments.length||"string"!=typeof e)return this;for(i=0;i<this.length;i+=1)this[i].style[e]=t;return this},each:function(e){if(!e)return this;for(var t=0;t<this.length;t+=1)if(!1===e.call(this[t],t,this[t]))return this;return this},html:function(e){if(void 0===e)return this[0]?this[0].innerHTML:void 0;for(var t=0;t<this.length;t+=1)this[t].innerHTML=e;return this},text:function(e){if(void 0===e)return this[0]?this[0].textContent.trim():null;for(var t=0;t<this.length;t+=1)this[t].textContent=e;return this},is:function(e){var t,i,a=this[0];if(!a||void 0===e)return!1;if("string"==typeof e){if(a.matches)return a.matches(e);if(a.webkitMatchesSelector)return a.webkitMatchesSelector(e);if(a.msMatchesSelector)return a.msMatchesSelector(e);for(t=I(e),i=0;i<t.length;i+=1)if(t[i]===a)return!0;return!1}if(e===v)return a===v;if(e===ee)return a===ee;if(e.nodeType||e instanceof l){for(t=e.nodeType?[e]:e,i=0;i<t.length;i+=1)if(t[i]===a)return!0;return!1}return!1},index:function(){var e,t=this[0];if(t){for(e=0;null!==(t=t.previousSibling);)1===t.nodeType&&(e+=1);return e}},eq:function(e){if(void 0===e)return this;var t,i=this.length;return new l(i-1<e?[]:e<0?(t=i+e)<0?[]:[this[t]]:[this[e]])},append:function(){for(var e,t=[],i=arguments.length;i--;)t[i]=arguments[i];for(var a=0;a<t.length;a+=1){e=t[a];for(var n=0;n<this.length;n+=1)if("string"==typeof e){var s=v.createElement("div");for(s.innerHTML=e;s.firstChild;)this[n].appendChild(s.firstChild)}else if(e instanceof l)for(var r=0;r<e.length;r+=1)this[n].appendChild(e[r]);else this[n].appendChild(e)}return this},prepend:function(e){var t,i;for(t=0;t<this.length;t+=1)if("string"==typeof e){var a=v.createElement("div");for(a.innerHTML=e,i=a.childNodes.length-1;0<=i;i-=1)this[t].insertBefore(a.childNodes[i],this[t].childNodes[0])}else if(e instanceof l)for(i=0;i<e.length;i+=1)this[t].insertBefore(e[i],this[t].childNodes[0]);else this[t].insertBefore(e,this[t].childNodes[0]);return this},next:function(e){return 0<this.length?e?this[0].nextElementSibling&&I(this[0].nextElementSibling).is(e)?new l([this[0].nextElementSibling]):new l([]):this[0].nextElementSibling?new l([this[0].nextElementSibling]):new l([]):new l([])},nextAll:function(e){var t=[],i=this[0];if(!i)return new l([]);for(;i.nextElementSibling;){var a=i.nextElementSibling;e?I(a).is(e)&&t.push(a):t.push(a),i=a}return new l(t)},prev:function(e){if(0<this.length){var t=this[0];return e?t.previousElementSibling&&I(t.previousElementSibling).is(e)?new l([t.previousElementSibling]):new l([]):t.previousElementSibling?new l([t.previousElementSibling]):new l([])}return new l([])},prevAll:function(e){var t=[],i=this[0];if(!i)return new l([]);for(;i.previousElementSibling;){var a=i.previousElementSibling;e?I(a).is(e)&&t.push(a):t.push(a),i=a}return new l(t)},parent:function(e){for(var t=[],i=0;i<this.length;i+=1)null!==this[i].parentNode&&(e?I(this[i].parentNode).is(e)&&t.push(this[i].parentNode):t.push(this[i].parentNode));return I(s(t))},parents:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var a=this[i].parentNode;a;)e?I(a).is(e)&&t.push(a):t.push(a),a=a.parentNode;return I(s(t))},closest:function(e){var t=this;return void 0===e?new l([]):(t.is(e)||(t=t.parents(e).eq(0)),t)},find:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var a=this[i].querySelectorAll(e),n=0;n<a.length;n+=1)t.push(a[n]);return new l(t)},children:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var a=this[i].childNodes,n=0;n<a.length;n+=1)e?1===a[n].nodeType&&I(a[n]).is(e)&&t.push(a[n]):1===a[n].nodeType&&t.push(a[n]);return new l(s(t))},remove:function(){for(var e=0;e<this.length;e+=1)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this},add:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,a;for(i=0;i<e.length;i+=1){var n=I(e[i]);for(a=0;a<n.length;a+=1)this[this.length]=n[a],this.length+=1}return this},styles:function(){return this[0]?ee.getComputedStyle(this[0],null):{}}};Object.keys(t).forEach(function(e){I.fn[e]=I.fn[e]||t[e]});function e(e){void 0===e&&(e={});var t=this;t.params=e,t.eventsListeners={},t.params&&t.params.on&&Object.keys(t.params.on).forEach(function(e){t.on(e,t.params.on[e])})}var i,a,n,r,te={deleteProps:function(e){var t=e;Object.keys(t).forEach(function(e){try{t[e]=null}catch(e){}try{delete t[e]}catch(e){}})},nextTick:function(e,t){return void 0===t&&(t=0),setTimeout(e,t)},now:function(){return Date.now()},getTranslate:function(e,t){var i,a,n;void 0===t&&(t="x");var s=ee.getComputedStyle(e,null);return ee.WebKitCSSMatrix?(6<(a=s.transform||s.webkitTransform).split(",").length&&(a=a.split(", ").map(function(e){return e.replace(",",".")}).join(", ")),n=new ee.WebKitCSSMatrix("none"===a?"":a)):i=(n=s.MozTransform||s.OTransform||s.MsTransform||s.msTransform||s.transform||s.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,")).toString().split(","),"x"===t&&(a=ee.WebKitCSSMatrix?n.m41:16===i.length?parseFloat(i[12]):parseFloat(i[4])),"y"===t&&(a=ee.WebKitCSSMatrix?n.m42:16===i.length?parseFloat(i[13]):parseFloat(i[5])),a||0},parseUrlQuery:function(e){var t,i,a,n,s={},r=e||ee.location.href;if("string"==typeof r&&r.length)for(n=(i=(r=-1<r.indexOf("?")?r.replace(/\S*\?/,""):"").split("&").filter(function(e){return""!==e})).length,t=0;t<n;t+=1)a=i[t].replace(/#\S+/g,"").split("="),s[decodeURIComponent(a[0])]=void 0===a[1]?void 0:decodeURIComponent(a[1])||"";return s},isObject:function(e){return"object"==typeof e&&null!==e&&e.constructor&&e.constructor===Object},extend:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var i=Object(e[0]),a=1;a<e.length;a+=1){var n=e[a];if(null!=n)for(var s=Object.keys(Object(n)),r=0,o=s.length;r<o;r+=1){var l=s[r],d=Object.getOwnPropertyDescriptor(n,l);void 0!==d&&d.enumerable&&(te.isObject(i[l])&&te.isObject(n[l])?te.extend(i[l],n[l]):!te.isObject(i[l])&&te.isObject(n[l])?(i[l]={},te.extend(i[l],n[l])):i[l]=n[l])}}return i}},ie=(n=v.createElement("div"),{touch:ee.Modernizr&&!0===ee.Modernizr.touch||!!(0<ee.navigator.maxTouchPoints||"ontouchstart"in ee||ee.DocumentTouch&&v instanceof ee.DocumentTouch),pointerEvents:!!(ee.navigator.pointerEnabled||ee.PointerEvent||"maxTouchPoints"in ee.navigator&&0<ee.navigator.maxTouchPoints),prefixedPointerEvents:!!ee.navigator.msPointerEnabled,transition:(a=n.style,"transition"in a||"webkitTransition"in a||"MozTransition"in a),transforms3d:ee.Modernizr&&!0===ee.Modernizr.csstransforms3d||(i=n.style,"webkitPerspective"in i||"MozPerspective"in i||"OPerspective"in i||"MsPerspective"in i||"perspective"in i),flexbox:function(){for(var e=n.style,t="alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient".split(" "),i=0;i<t.length;i+=1)if(t[i]in e)return!0;return!1}(),observer:"MutationObserver"in ee||"WebkitMutationObserver"in ee,passiveListener:function(){var e=!1;try{var t=Object.defineProperty({},"passive",{get:function(){e=!0}});ee.addEventListener("testPassiveListener",null,t)}catch(e){}return e}(),gestures:"ongesturestart"in ee}),ae={isIE:!!ee.navigator.userAgent.match(/Trident/g)||!!ee.navigator.userAgent.match(/MSIE/g),isEdge:!!ee.navigator.userAgent.match(/Edge/g),isSafari:(r=ee.navigator.userAgent.toLowerCase(),0<=r.indexOf("safari")&&r.indexOf("chrome")<0&&r.indexOf("android")<0),isUiWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(ee.navigator.userAgent)},o={components:{configurable:!0}};e.prototype.on=function(e,t,i){var a=this;if("function"!=typeof t)return a;var n=i?"unshift":"push";return e.split(" ").forEach(function(e){a.eventsListeners[e]||(a.eventsListeners[e]=[]),a.eventsListeners[e][n](t)}),a},e.prototype.once=function(i,a,e){var n=this;if("function"!=typeof a)return n;function s(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];a.apply(n,e),n.off(i,s),s.f7proxy&&delete s.f7proxy}return s.f7proxy=a,n.on(i,s,e)},e.prototype.off=function(e,a){var n=this;return n.eventsListeners&&e.split(" ").forEach(function(i){void 0===a?n.eventsListeners[i]=[]:n.eventsListeners[i]&&n.eventsListeners[i].length&&n.eventsListeners[i].forEach(function(e,t){(e===a||e.f7proxy&&e.f7proxy===a)&&n.eventsListeners[i].splice(t,1)})}),n},e.prototype.emit=function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,a,n,s=this;return s.eventsListeners&&(n="string"==typeof e[0]||Array.isArray(e[0])?(i=e[0],a=e.slice(1,e.length),s):(i=e[0].events,a=e[0].data,e[0].context||s),(Array.isArray(i)?i:i.split(" ")).forEach(function(e){if(s.eventsListeners&&s.eventsListeners[e]){var t=[];s.eventsListeners[e].forEach(function(e){t.push(e)}),t.forEach(function(e){e.apply(n,a)})}})),s},e.prototype.useModulesParams=function(i){var a=this;a.modules&&Object.keys(a.modules).forEach(function(e){var t=a.modules[e];t.params&&te.extend(i,t.params)})},e.prototype.useModules=function(a){void 0===a&&(a={});var n=this;n.modules&&Object.keys(n.modules).forEach(function(e){var i=n.modules[e],t=a[e]||{};i.instance&&Object.keys(i.instance).forEach(function(e){var t=i.instance[e];n[e]="function"==typeof t?t.bind(n):t}),i.on&&n.on&&Object.keys(i.on).forEach(function(e){n.on(e,i.on[e])}),i.create&&i.create.bind(n)(t)})},o.components.set=function(e){this.use&&this.use(e)},e.installModule=function(t){for(var e=[],i=arguments.length-1;0<i--;)e[i]=arguments[i+1];var a=this;a.prototype.modules||(a.prototype.modules={});var n=t.name||Object.keys(a.prototype.modules).length+"_"+te.now();return(a.prototype.modules[n]=t).proto&&Object.keys(t.proto).forEach(function(e){a.prototype[e]=t.proto[e]}),t.static&&Object.keys(t.static).forEach(function(e){a[e]=t.static[e]}),t.install&&t.install.apply(a,e),a},e.use=function(e){for(var t=[],i=arguments.length-1;0<i--;)t[i]=arguments[i+1];var a=this;return Array.isArray(e)?(e.forEach(function(e){return a.installModule(e)}),a):a.installModule.apply(a,[e].concat(t))},Object.defineProperties(e,o);var d={updateSize:function(){var e,t,i=this,a=i.$el;e=void 0!==i.params.width?i.params.width:a[0].clientWidth,t=void 0!==i.params.height?i.params.height:a[0].clientHeight,0===e&&i.isHorizontal()||0===t&&i.isVertical()||(e=e-parseInt(a.css("padding-left"),10)-parseInt(a.css("padding-right"),10),t=t-parseInt(a.css("padding-top"),10)-parseInt(a.css("padding-bottom"),10),te.extend(i,{width:e,height:t,size:i.isHorizontal()?e:t}))},updateSlides:function(){var e=this,t=e.params,i=e.$wrapperEl,a=e.size,n=e.rtlTranslate,s=e.wrongRTL,r=e.virtual&&t.virtual.enabled,o=r?e.virtual.slides.length:e.slides.length,l=i.children("."+e.params.slideClass),d=r?e.virtual.slides.length:l.length,c=[],p=[],u=[],h=t.slidesOffsetBefore;"function"==typeof h&&(h=t.slidesOffsetBefore.call(e));var f=t.slidesOffsetAfter;"function"==typeof f&&(f=t.slidesOffsetAfter.call(e));var v=e.snapGrid.length,g=e.snapGrid.length,m=t.spaceBetween,b=-h,y=0,w=0;if(void 0!==a){var x,S;"string"==typeof m&&0<=m.indexOf("%")&&(m=parseFloat(m.replace("%",""))/100*a),e.virtualSize=-m,n?l.css({marginLeft:"",marginTop:""}):l.css({marginRight:"",marginBottom:""}),1<t.slidesPerColumn&&(x=Math.floor(d/t.slidesPerColumn)===d/e.params.slidesPerColumn?d:Math.ceil(d/t.slidesPerColumn)*t.slidesPerColumn,"auto"!==t.slidesPerView&&"row"===t.slidesPerColumnFill&&(x=Math.max(x,t.slidesPerView*t.slidesPerColumn)));for(var T,C=t.slidesPerColumn,E=x/C,$=Math.floor(d/t.slidesPerColumn),P=0;P<d;P+=1){S=0;var M=l.eq(P);if(1<t.slidesPerColumn){var k=void 0,z=void 0,I=void 0;if("column"===t.slidesPerColumnFill||"row"===t.slidesPerColumnFill&&1<t.slidesPerGroup){if("column"===t.slidesPerColumnFill)I=P-(z=Math.floor(P/C))*C,($<z||z===$&&I===C-1)&&C<=(I+=1)&&(I=0,z+=1);else{var L=Math.floor(P/t.slidesPerGroup);z=P-(I=Math.floor(P/t.slidesPerView)-L*t.slidesPerColumn)*t.slidesPerView-L*t.slidesPerView}k=z+I*x/C,M.css({"-webkit-box-ordinal-group":k,"-moz-box-ordinal-group":k,"-ms-flex-order":k,"-webkit-order":k,order:k})}else z=P-(I=Math.floor(P/E))*E;M.css("margin-"+(e.isHorizontal()?"top":"left"),0!==I&&t.spaceBetween&&t.spaceBetween+"px").attr("data-swiper-column",z).attr("data-swiper-row",I)}if("none"!==M.css("display")){if("auto"===t.slidesPerView){var A=ee.getComputedStyle(M[0],null),D=M[0].style.transform,O=M[0].style.webkitTransform;if(D&&(M[0].style.transform="none"),O&&(M[0].style.webkitTransform="none"),t.roundLengths)S=e.isHorizontal()?M.outerWidth(!0):M.outerHeight(!0);else if(e.isHorizontal()){var H=parseFloat(A.getPropertyValue("width")),F=parseFloat(A.getPropertyValue("padding-left")),B=parseFloat(A.getPropertyValue("padding-right")),R=parseFloat(A.getPropertyValue("margin-left")),X=parseFloat(A.getPropertyValue("margin-right")),Y=A.getPropertyValue("box-sizing");S=Y&&"border-box"===Y&&!ae.isIE?H+R+X:H+F+B+R+X}else{var j=parseFloat(A.getPropertyValue("height")),V=parseFloat(A.getPropertyValue("padding-top")),N=parseFloat(A.getPropertyValue("padding-bottom")),G=parseFloat(A.getPropertyValue("margin-top")),q=parseFloat(A.getPropertyValue("margin-bottom")),W=A.getPropertyValue("box-sizing");S=W&&"border-box"===W&&!ae.isIE?j+G+q:j+V+N+G+q}D&&(M[0].style.transform=D),O&&(M[0].style.webkitTransform=O),t.roundLengths&&(S=Math.floor(S))}else S=(a-(t.slidesPerView-1)*m)/t.slidesPerView,t.roundLengths&&(S=Math.floor(S)),l[P]&&(e.isHorizontal()?l[P].style.width=S+"px":l[P].style.height=S+"px");l[P]&&(l[P].swiperSlideSize=S),u.push(S),t.centeredSlides?(b=b+S/2+y/2+m,0===y&&0!==P&&(b=b-a/2-m),0===P&&(b=b-a/2-m),Math.abs(b)<.001&&(b=0),t.roundLengths&&(b=Math.floor(b)),w%t.slidesPerGroup==0&&c.push(b),p.push(b)):(t.roundLengths&&(b=Math.floor(b)),w%t.slidesPerGroup==0&&c.push(b),p.push(b),b=b+S+m),e.virtualSize+=S+m,y=S,w+=1}}if(e.virtualSize=Math.max(e.virtualSize,a)+f,n&&s&&("slide"===t.effect||"coverflow"===t.effect)&&i.css({width:e.virtualSize+t.spaceBetween+"px"}),ie.flexbox&&!t.setWrapperSize||(e.isHorizontal()?i.css({width:e.virtualSize+t.spaceBetween+"px"}):i.css({height:e.virtualSize+t.spaceBetween+"px"})),1<t.slidesPerColumn&&(e.virtualSize=(S+t.spaceBetween)*x,e.virtualSize=Math.ceil(e.virtualSize/t.slidesPerColumn)-t.spaceBetween,e.isHorizontal()?i.css({width:e.virtualSize+t.spaceBetween+"px"}):i.css({height:e.virtualSize+t.spaceBetween+"px"}),t.centeredSlides)){T=[];for(var _=0;_<c.length;_+=1){var U=c[_];t.roundLengths&&(U=Math.floor(U)),c[_]<e.virtualSize+c[0]&&T.push(U)}c=T}if(!t.centeredSlides){T=[];for(var K=0;K<c.length;K+=1){var Z=c[K];t.roundLengths&&(Z=Math.floor(Z)),c[K]<=e.virtualSize-a&&T.push(Z)}c=T,1<Math.floor(e.virtualSize-a)-Math.floor(c[c.length-1])&&c.push(e.virtualSize-a)}if(0===c.length&&(c=[0]),0!==t.spaceBetween&&(e.isHorizontal()?n?l.css({marginLeft:m+"px"}):l.css({marginRight:m+"px"}):l.css({marginBottom:m+"px"})),t.centerInsufficientSlides){var Q=0;if(u.forEach(function(e){Q+=e+(t.spaceBetween?t.spaceBetween:0)}),(Q-=t.spaceBetween)<a){var J=(a-Q)/2;c.forEach(function(e,t){c[t]=e-J}),p.forEach(function(e,t){p[t]=e+J})}}te.extend(e,{slides:l,snapGrid:c,slidesGrid:p,slidesSizesGrid:u}),d!==o&&e.emit("slidesLengthChange"),c.length!==v&&(e.params.watchOverflow&&e.checkOverflow(),e.emit("snapGridLengthChange")),p.length!==g&&e.emit("slidesGridLengthChange"),(t.watchSlidesProgress||t.watchSlidesVisibility)&&e.updateSlidesOffset()}},updateAutoHeight:function(e){var t,i=this,a=[],n=0;if("number"==typeof e?i.setTransition(e):!0===e&&i.setTransition(i.params.speed),"auto"!==i.params.slidesPerView&&1<i.params.slidesPerView)for(t=0;t<Math.ceil(i.params.slidesPerView);t+=1){var s=i.activeIndex+t;if(s>i.slides.length)break;a.push(i.slides.eq(s)[0])}else a.push(i.slides.eq(i.activeIndex)[0]);for(t=0;t<a.length;t+=1)if(void 0!==a[t]){var r=a[t].offsetHeight;n=n<r?r:n}n&&i.$wrapperEl.css("height",n+"px")},updateSlidesOffset:function(){for(var e=this.slides,t=0;t<e.length;t+=1)e[t].swiperSlideOffset=this.isHorizontal()?e[t].offsetLeft:e[t].offsetTop},updateSlidesProgress:function(e){void 0===e&&(e=this&&this.translate||0);var t=this,i=t.params,a=t.slides,n=t.rtlTranslate;if(0!==a.length){void 0===a[0].swiperSlideOffset&&t.updateSlidesOffset();var s=-e;n&&(s=e),a.removeClass(i.slideVisibleClass),t.visibleSlidesIndexes=[],t.visibleSlides=[];for(var r=0;r<a.length;r+=1){var o=a[r],l=(s+(i.centeredSlides?t.minTranslate():0)-o.swiperSlideOffset)/(o.swiperSlideSize+i.spaceBetween);if(i.watchSlidesVisibility){var d=-(s-o.swiperSlideOffset),c=d+t.slidesSizesGrid[r];(0<=d&&d<t.size-1||1<c&&c<=t.size||d<=0&&c>=t.size)&&(t.visibleSlides.push(o),t.visibleSlidesIndexes.push(r),a.eq(r).addClass(i.slideVisibleClass))}o.progress=n?-l:l}t.visibleSlides=I(t.visibleSlides)}},updateProgress:function(e){void 0===e&&(e=this&&this.translate||0);var t=this,i=t.params,a=t.maxTranslate()-t.minTranslate(),n=t.progress,s=t.isBeginning,r=t.isEnd,o=s,l=r;r=0==a?s=!(n=0):(s=(n=(e-t.minTranslate())/a)<=0,1<=n),te.extend(t,{progress:n,isBeginning:s,isEnd:r}),(i.watchSlidesProgress||i.watchSlidesVisibility)&&t.updateSlidesProgress(e),s&&!o&&t.emit("reachBeginning toEdge"),r&&!l&&t.emit("reachEnd toEdge"),(o&&!s||l&&!r)&&t.emit("fromEdge"),t.emit("progress",n)},updateSlidesClasses:function(){var e,t=this,i=t.slides,a=t.params,n=t.$wrapperEl,s=t.activeIndex,r=t.realIndex,o=t.virtual&&a.virtual.enabled;i.removeClass(a.slideActiveClass+" "+a.slideNextClass+" "+a.slidePrevClass+" "+a.slideDuplicateActiveClass+" "+a.slideDuplicateNextClass+" "+a.slideDuplicatePrevClass),(e=o?t.$wrapperEl.find("."+a.slideClass+'[data-swiper-slide-index="'+s+'"]'):i.eq(s)).addClass(a.slideActiveClass),a.loop&&(e.hasClass(a.slideDuplicateClass)?n.children("."+a.slideClass+":not(."+a.slideDuplicateClass+')[data-swiper-slide-index="'+r+'"]').addClass(a.slideDuplicateActiveClass):n.children("."+a.slideClass+"."+a.slideDuplicateClass+'[data-swiper-slide-index="'+r+'"]').addClass(a.slideDuplicateActiveClass));var l=e.nextAll("."+a.slideClass).eq(0).addClass(a.slideNextClass);a.loop&&0===l.length&&(l=i.eq(0)).addClass(a.slideNextClass);var d=e.prevAll("."+a.slideClass).eq(0).addClass(a.slidePrevClass);a.loop&&0===d.length&&(d=i.eq(-1)).addClass(a.slidePrevClass),a.loop&&(l.hasClass(a.slideDuplicateClass)?n.children("."+a.slideClass+":not(."+a.slideDuplicateClass+')[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(a.slideDuplicateNextClass):n.children("."+a.slideClass+"."+a.slideDuplicateClass+'[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(a.slideDuplicateNextClass),d.hasClass(a.slideDuplicateClass)?n.children("."+a.slideClass+":not(."+a.slideDuplicateClass+')[data-swiper-slide-index="'+d.attr("data-swiper-slide-index")+'"]').addClass(a.slideDuplicatePrevClass):n.children("."+a.slideClass+"."+a.slideDuplicateClass+'[data-swiper-slide-index="'+d.attr("data-swiper-slide-index")+'"]').addClass(a.slideDuplicatePrevClass))},updateActiveIndex:function(e){var t,i=this,a=i.rtlTranslate?i.translate:-i.translate,n=i.slidesGrid,s=i.snapGrid,r=i.params,o=i.activeIndex,l=i.realIndex,d=i.snapIndex,c=e;if(void 0===c){for(var p=0;p<n.length;p+=1)void 0!==n[p+1]?a>=n[p]&&a<n[p+1]-(n[p+1]-n[p])/2?c=p:a>=n[p]&&a<n[p+1]&&(c=p+1):a>=n[p]&&(c=p);r.normalizeSlideIndex&&(c<0||void 0===c)&&(c=0)}if((t=0<=s.indexOf(a)?s.indexOf(a):Math.floor(c/r.slidesPerGroup))>=s.length&&(t=s.length-1),c!==o){var u=parseInt(i.slides.eq(c).attr("data-swiper-slide-index")||c,10);te.extend(i,{snapIndex:t,realIndex:u,previousIndex:o,activeIndex:c}),i.emit("activeIndexChange"),i.emit("snapIndexChange"),l!==u&&i.emit("realIndexChange"),(i.initialized||i.runCallbacksOnInit)&&i.emit("slideChange")}else t!==d&&(i.snapIndex=t,i.emit("snapIndexChange"))},updateClickedSlide:function(e){var t=this,i=t.params,a=I(e.target).closest("."+i.slideClass)[0],n=!1;if(a)for(var s=0;s<t.slides.length;s+=1)t.slides[s]===a&&(n=!0);if(!a||!n)return t.clickedSlide=void 0,void(t.clickedIndex=void 0);t.clickedSlide=a,t.virtual&&t.params.virtual.enabled?t.clickedIndex=parseInt(I(a).attr("data-swiper-slide-index"),10):t.clickedIndex=I(a).index(),i.slideToClickedSlide&&void 0!==t.clickedIndex&&t.clickedIndex!==t.activeIndex&&t.slideToClickedSlide()}};var c={getTranslate:function(e){void 0===e&&(e=this.isHorizontal()?"x":"y");var t=this.params,i=this.rtlTranslate,a=this.translate,n=this.$wrapperEl;if(t.virtualTranslate)return i?-a:a;var s=te.getTranslate(n[0],e);return i&&(s=-s),s||0},setTranslate:function(e,t){var i=this,a=i.rtlTranslate,n=i.params,s=i.$wrapperEl,r=i.progress,o=0,l=0;i.isHorizontal()?o=a?-e:e:l=e,n.roundLengths&&(o=Math.floor(o),l=Math.floor(l)),n.virtualTranslate||(ie.transforms3d?s.transform("translate3d("+o+"px, "+l+"px, 0px)"):s.transform("translate("+o+"px, "+l+"px)")),i.previousTranslate=i.translate,i.translate=i.isHorizontal()?o:l;var d=i.maxTranslate()-i.minTranslate();(0==d?0:(e-i.minTranslate())/d)!==r&&i.updateProgress(e),i.emit("setTranslate",i.translate,t)},minTranslate:function(){return-this.snapGrid[0]},maxTranslate:function(){return-this.snapGrid[this.snapGrid.length-1]}};var p={setTransition:function(e,t){this.$wrapperEl.transition(e),this.emit("setTransition",e,t)},transitionStart:function(e,t){void 0===e&&(e=!0);var i=this,a=i.activeIndex,n=i.params,s=i.previousIndex;n.autoHeight&&i.updateAutoHeight();var r=t;if(r=r||(s<a?"next":a<s?"prev":"reset"),i.emit("transitionStart"),e&&a!==s){if("reset"===r)return void i.emit("slideResetTransitionStart");i.emit("slideChangeTransitionStart"),"next"===r?i.emit("slideNextTransitionStart"):i.emit("slidePrevTransitionStart")}},transitionEnd:function(e,t){void 0===e&&(e=!0);var i=this,a=i.activeIndex,n=i.previousIndex;i.animating=!1,i.setTransition(0);var s=t;if(s=s||(n<a?"next":a<n?"prev":"reset"),i.emit("transitionEnd"),e&&a!==n){if("reset"===s)return void i.emit("slideResetTransitionEnd");i.emit("slideChangeTransitionEnd"),"next"===s?i.emit("slideNextTransitionEnd"):i.emit("slidePrevTransitionEnd")}}};var u={slideTo:function(e,t,i,a){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var n=this,s=e;s<0&&(s=0);var r=n.params,o=n.snapGrid,l=n.slidesGrid,d=n.previousIndex,c=n.activeIndex,p=n.rtlTranslate;if(n.animating&&r.preventInteractionOnTransition)return!1;var u=Math.floor(s/r.slidesPerGroup);u>=o.length&&(u=o.length-1),(c||r.initialSlide||0)===(d||0)&&i&&n.emit("beforeSlideChangeStart");var h,f=-o[u];if(n.updateProgress(f),r.normalizeSlideIndex)for(var v=0;v<l.length;v+=1)-Math.floor(100*f)>=Math.floor(100*l[v])&&(s=v);if(n.initialized&&s!==c){if(!n.allowSlideNext&&f<n.translate&&f<n.minTranslate())return!1;if(!n.allowSlidePrev&&f>n.translate&&f>n.maxTranslate()&&(c||0)!==s)return!1}return h=c<s?"next":s<c?"prev":"reset",p&&-f===n.translate||!p&&f===n.translate?(n.updateActiveIndex(s),r.autoHeight&&n.updateAutoHeight(),n.updateSlidesClasses(),"slide"!==r.effect&&n.setTranslate(f),"reset"!==h&&(n.transitionStart(i,h),n.transitionEnd(i,h)),!1):(0!==t&&ie.transition?(n.setTransition(t),n.setTranslate(f),n.updateActiveIndex(s),n.updateSlidesClasses(),n.emit("beforeTransitionStart",t,a),n.transitionStart(i,h),n.animating||(n.animating=!0,n.onSlideToWrapperTransitionEnd||(n.onSlideToWrapperTransitionEnd=function(e){n&&!n.destroyed&&e.target===this&&(n.$wrapperEl[0].removeEventListener("transitionend",n.onSlideToWrapperTransitionEnd),n.$wrapperEl[0].removeEventListener("webkitTransitionEnd",n.onSlideToWrapperTransitionEnd),n.onSlideToWrapperTransitionEnd=null,delete n.onSlideToWrapperTransitionEnd,n.transitionEnd(i,h))}),n.$wrapperEl[0].addEventListener("transitionend",n.onSlideToWrapperTransitionEnd),n.$wrapperEl[0].addEventListener("webkitTransitionEnd",n.onSlideToWrapperTransitionEnd))):(n.setTransition(0),n.setTranslate(f),n.updateActiveIndex(s),n.updateSlidesClasses(),n.emit("beforeTransitionStart",t,a),n.transitionStart(i,h),n.transitionEnd(i,h)),!0)},slideToLoop:function(e,t,i,a){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var n=e;return this.params.loop&&(n+=this.loopedSlides),this.slideTo(n,t,i,a)},slideNext:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var a=this,n=a.params,s=a.animating;return n.loop?!s&&(a.loopFix(),a._clientLeft=a.$wrapperEl[0].clientLeft,a.slideTo(a.activeIndex+n.slidesPerGroup,e,t,i)):a.slideTo(a.activeIndex+n.slidesPerGroup,e,t,i)},slidePrev:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var a=this,n=a.params,s=a.animating,r=a.snapGrid,o=a.slidesGrid,l=a.rtlTranslate;if(n.loop){if(s)return!1;a.loopFix(),a._clientLeft=a.$wrapperEl[0].clientLeft}function d(e){return e<0?-Math.floor(Math.abs(e)):Math.floor(e)}var c,p=d(l?a.translate:-a.translate),u=r.map(function(e){return d(e)}),h=(o.map(function(e){return d(e)}),r[u.indexOf(p)],r[u.indexOf(p)-1]);return void 0!==h&&(c=o.indexOf(h))<0&&(c=a.activeIndex-1),a.slideTo(c,e,t,i)},slideReset:function(e,t,i){return void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),this.slideTo(this.activeIndex,e,t,i)},slideToClosest:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var a=this,n=a.activeIndex,s=Math.floor(n/a.params.slidesPerGroup);if(s<a.snapGrid.length-1){var r=a.rtlTranslate?a.translate:-a.translate,o=a.snapGrid[s];(a.snapGrid[s+1]-o)/2<r-o&&(n=a.params.slidesPerGroup)}return a.slideTo(n,e,t,i)},slideToClickedSlide:function(){var e,t=this,i=t.params,a=t.$wrapperEl,n="auto"===i.slidesPerView?t.slidesPerViewDynamic():i.slidesPerView,s=t.clickedIndex;if(i.loop){if(t.animating)return;e=parseInt(I(t.clickedSlide).attr("data-swiper-slide-index"),10),i.centeredSlides?s<t.loopedSlides-n/2||s>t.slides.length-t.loopedSlides+n/2?(t.loopFix(),s=a.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),te.nextTick(function(){t.slideTo(s)})):t.slideTo(s):s>t.slides.length-n?(t.loopFix(),s=a.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),te.nextTick(function(){t.slideTo(s)})):t.slideTo(s)}else t.slideTo(s)}};var h={loopCreate:function(){var a=this,e=a.params,t=a.$wrapperEl;t.children("."+e.slideClass+"."+e.slideDuplicateClass).remove();var n=t.children("."+e.slideClass);if(e.loopFillGroupWithBlank){var i=e.slidesPerGroup-n.length%e.slidesPerGroup;if(i!==e.slidesPerGroup){for(var s=0;s<i;s+=1){var r=I(v.createElement("div")).addClass(e.slideClass+" "+e.slideBlankClass);t.append(r)}n=t.children("."+e.slideClass)}}"auto"!==e.slidesPerView||e.loopedSlides||(e.loopedSlides=n.length),a.loopedSlides=parseInt(e.loopedSlides||e.slidesPerView,10),a.loopedSlides+=e.loopAdditionalSlides,a.loopedSlides>n.length&&(a.loopedSlides=n.length);var o=[],l=[];n.each(function(e,t){var i=I(t);e<a.loopedSlides&&l.push(t),e<n.length&&e>=n.length-a.loopedSlides&&o.push(t),i.attr("data-swiper-slide-index",e)});for(var d=0;d<l.length;d+=1)t.append(I(l[d].cloneNode(!0)).addClass(e.slideDuplicateClass));for(var c=o.length-1;0<=c;c-=1)t.prepend(I(o[c].cloneNode(!0)).addClass(e.slideDuplicateClass))},loopFix:function(){var e,t=this,i=t.params,a=t.activeIndex,n=t.slides,s=t.loopedSlides,r=t.allowSlidePrev,o=t.allowSlideNext,l=t.snapGrid,d=t.rtlTranslate;t.allowSlidePrev=!0,t.allowSlideNext=!0;var c=-l[a]-t.getTranslate();if(a<s)e=n.length-3*s+a,e+=s,t.slideTo(e,0,!1,!0)&&0!=c&&t.setTranslate((d?-t.translate:t.translate)-c);else if("auto"===i.slidesPerView&&2*s<=a||a>=n.length-s){e=-n.length+a+s,e+=s,t.slideTo(e,0,!1,!0)&&0!=c&&t.setTranslate((d?-t.translate:t.translate)-c)}t.allowSlidePrev=r,t.allowSlideNext=o},loopDestroy:function(){var e=this.$wrapperEl,t=this.params,i=this.slides;e.children("."+t.slideClass+"."+t.slideDuplicateClass+",."+t.slideClass+"."+t.slideBlankClass).remove(),i.removeAttr("data-swiper-slide-index")}};var f={setGrabCursor:function(e){if(!(ie.touch||!this.params.simulateTouch||this.params.watchOverflow&&this.isLocked)){var t=this.el;t.style.cursor="move",t.style.cursor=e?"-webkit-grabbing":"-webkit-grab",t.style.cursor=e?"-moz-grabbin":"-moz-grab",t.style.cursor=e?"grabbing":"grab"}},unsetGrabCursor:function(){ie.touch||this.params.watchOverflow&&this.isLocked||(this.el.style.cursor="")}};var g={appendSlide:function(e){var t=this,i=t.$wrapperEl,a=t.params;if(a.loop&&t.loopDestroy(),"object"==typeof e&&"length"in e)for(var n=0;n<e.length;n+=1)e[n]&&i.append(e[n]);else i.append(e);a.loop&&t.loopCreate(),a.observer&&ie.observer||t.update()},prependSlide:function(e){var t=this,i=t.params,a=t.$wrapperEl,n=t.activeIndex;i.loop&&t.loopDestroy();var s=n+1;if("object"==typeof e&&"length"in e){for(var r=0;r<e.length;r+=1)e[r]&&a.prepend(e[r]);s=n+e.length}else a.prepend(e);i.loop&&t.loopCreate(),i.observer&&ie.observer||t.update(),t.slideTo(s,0,!1)},addSlide:function(e,t){var i=this,a=i.$wrapperEl,n=i.params,s=i.activeIndex;n.loop&&(s-=i.loopedSlides,i.loopDestroy(),i.slides=a.children("."+n.slideClass));var r=i.slides.length;if(e<=0)i.prependSlide(t);else if(r<=e)i.appendSlide(t);else{for(var o=e<s?s+1:s,l=[],d=r-1;e<=d;d-=1){var c=i.slides.eq(d);c.remove(),l.unshift(c)}if("object"==typeof t&&"length"in t){for(var p=0;p<t.length;p+=1)t[p]&&a.append(t[p]);o=e<s?s+t.length:s}else a.append(t);for(var u=0;u<l.length;u+=1)a.append(l[u]);n.loop&&i.loopCreate(),n.observer&&ie.observer||i.update(),n.loop?i.slideTo(o+i.loopedSlides,0,!1):i.slideTo(o,0,!1)}},removeSlide:function(e){var t=this,i=t.params,a=t.$wrapperEl,n=t.activeIndex;i.loop&&(n-=t.loopedSlides,t.loopDestroy(),t.slides=a.children("."+i.slideClass));var s,r=n;if("object"==typeof e&&"length"in e){for(var o=0;o<e.length;o+=1)s=e[o],t.slides[s]&&t.slides.eq(s).remove(),s<r&&(r-=1);r=Math.max(r,0)}else s=e,t.slides[s]&&t.slides.eq(s).remove(),s<r&&(r-=1),r=Math.max(r,0);i.loop&&t.loopCreate(),i.observer&&ie.observer||t.update(),i.loop?t.slideTo(r+t.loopedSlides,0,!1):t.slideTo(r,0,!1)},removeAllSlides:function(){for(var e=[],t=0;t<this.slides.length;t+=1)e.push(t);this.removeSlide(e)}},m=function(){var e=ee.navigator.userAgent,t={ios:!1,android:!1,androidChrome:!1,desktop:!1,windows:!1,iphone:!1,ipod:!1,ipad:!1,cordova:ee.cordova||ee.phonegap,phonegap:ee.cordova||ee.phonegap},i=e.match(/(Windows Phone);?[\s\/]+([\d.]+)?/),a=e.match(/(Android);?[\s\/]+([\d.]+)?/),n=e.match(/(iPad).*OS\s([\d_]+)/),s=e.match(/(iPod)(.*OS\s([\d_]+))?/),r=!n&&e.match(/(iPhone\sOS|iOS)\s([\d_]+)/);if(i&&(t.os="windows",t.osVersion=i[2],t.windows=!0),a&&!i&&(t.os="android",t.osVersion=a[2],t.android=!0,t.androidChrome=0<=e.toLowerCase().indexOf("chrome")),(n||r||s)&&(t.os="ios",t.ios=!0),r&&!s&&(t.osVersion=r[2].replace(/_/g,"."),t.iphone=!0),n&&(t.osVersion=n[2].replace(/_/g,"."),t.ipad=!0),s&&(t.osVersion=s[3]?s[3].replace(/_/g,"."):null,t.iphone=!0),t.ios&&t.osVersion&&0<=e.indexOf("Version/")&&"10"===t.osVersion.split(".")[0]&&(t.osVersion=e.toLowerCase().split("version/")[1].split(" ")[0]),t.desktop=!(t.os||t.android||t.webView),t.webView=(r||n||s)&&e.match(/.*AppleWebKit(?!.*Safari)/i),t.os&&"ios"===t.os){var o=t.osVersion.split("."),l=v.querySelector('meta[name="viewport"]');t.minimalUi=!t.webView&&(s||r)&&(1*o[0]==7?1<=1*o[1]:7<1*o[0])&&l&&0<=l.getAttribute("content").indexOf("minimal-ui")}return t.pixelRatio=ee.devicePixelRatio||1,t}();function b(){var e=this,t=e.params,i=e.el;if(!i||0!==i.offsetWidth){t.breakpoints&&e.setBreakpoint();var a=e.allowSlideNext,n=e.allowSlidePrev,s=e.snapGrid;if(e.allowSlideNext=!0,e.allowSlidePrev=!0,e.updateSize(),e.updateSlides(),t.freeMode){var r=Math.min(Math.max(e.translate,e.maxTranslate()),e.minTranslate());e.setTranslate(r),e.updateActiveIndex(),e.updateSlidesClasses(),t.autoHeight&&e.updateAutoHeight()}else e.updateSlidesClasses(),("auto"===t.slidesPerView||1<t.slidesPerView)&&e.isEnd&&!e.params.centeredSlides?e.slideTo(e.slides.length-1,0,!1,!0):e.slideTo(e.activeIndex,0,!1,!0);e.autoplay&&e.autoplay.running&&e.autoplay.paused&&e.autoplay.run(),e.allowSlidePrev=n,e.allowSlideNext=a,e.params.watchOverflow&&s!==e.snapGrid&&e.checkOverflow()}}var y={init:!0,direction:"horizontal",touchEventsTarget:"container",initialSlide:0,speed:300,preventInteractionOnTransition:!1,edgeSwipeDetection:!1,edgeSwipeThreshold:20,freeMode:!1,freeModeMomentum:!0,freeModeMomentumRatio:1,freeModeMomentumBounce:!0,freeModeMomentumBounceRatio:1,freeModeMomentumVelocityRatio:1,freeModeSticky:!1,freeModeMinimumVelocity:.02,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",breakpoints:void 0,breakpointsInverse:!1,spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:"column",slidesPerGroup:1,centeredSlides:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,normalizeSlideIndex:!0,centerInsufficientSlides:!1,watchOverflow:!1,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,allowTouchMove:!0,threshold:0,touchMoveStopPropagation:!0,touchStartPreventDefault:!0,touchStartForcePreventDefault:!1,touchReleaseOnEdges:!1,uniqueNavElements:!0,resistance:!0,resistanceRatio:.85,watchSlidesProgress:!1,watchSlidesVisibility:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,loopFillGroupWithBlank:!1,allowSlidePrev:!0,allowSlideNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",noSwipingSelector:null,passiveListeners:!0,containerModifierClass:"swiper-container-",slideClass:"swiper-slide",slideBlankClass:"swiper-slide-invisible-blank",slideActiveClass:"swiper-slide-active",slideDuplicateActiveClass:"swiper-slide-duplicate-active",slideVisibleClass:"swiper-slide-visible",slideDuplicateClass:"swiper-slide-duplicate",slideNextClass:"swiper-slide-next",slideDuplicateNextClass:"swiper-slide-duplicate-next",slidePrevClass:"swiper-slide-prev",slideDuplicatePrevClass:"swiper-slide-duplicate-prev",wrapperClass:"swiper-wrapper",runCallbacksOnInit:!0},w={update:d,translate:c,transition:p,slide:u,loop:h,grabCursor:f,manipulation:g,events:{attachEvents:function(){var e=this,t=e.params,i=e.touchEvents,a=e.el,n=e.wrapperEl;e.onTouchStart=function(e){var t=this,i=t.touchEventsData,a=t.params,n=t.touches;if(!t.animating||!a.preventInteractionOnTransition){var s=e;if(s.originalEvent&&(s=s.originalEvent),i.isTouchEvent="touchstart"===s.type,(i.isTouchEvent||!("which"in s)||3!==s.which)&&!(!i.isTouchEvent&&"button"in s&&0<s.button||i.isTouched&&i.isMoved))if(a.noSwiping&&I(s.target).closest(a.noSwipingSelector?a.noSwipingSelector:"."+a.noSwipingClass)[0])t.allowClick=!0;else if(!a.swipeHandler||I(s).closest(a.swipeHandler)[0]){n.currentX="touchstart"===s.type?s.targetTouches[0].pageX:s.pageX,n.currentY="touchstart"===s.type?s.targetTouches[0].pageY:s.pageY;var r=n.currentX,o=n.currentY,l=a.edgeSwipeDetection||a.iOSEdgeSwipeDetection,d=a.edgeSwipeThreshold||a.iOSEdgeSwipeThreshold;if(!l||!(r<=d||r>=ee.screen.width-d)){if(te.extend(i,{isTouched:!0,isMoved:!1,allowTouchCallbacks:!0,isScrolling:void 0,startMoving:void 0}),n.startX=r,n.startY=o,i.touchStartTime=te.now(),t.allowClick=!0,t.updateSize(),t.swipeDirection=void 0,0<a.threshold&&(i.allowThresholdMove=!1),"touchstart"!==s.type){var c=!0;I(s.target).is(i.formElements)&&(c=!1),v.activeElement&&I(v.activeElement).is(i.formElements)&&v.activeElement!==s.target&&v.activeElement.blur();var p=c&&t.allowTouchMove&&a.touchStartPreventDefault;(a.touchStartForcePreventDefault||p)&&s.preventDefault()}t.emit("touchStart",s)}}}}.bind(e),e.onTouchMove=function(e){var t=this,i=t.touchEventsData,a=t.params,n=t.touches,s=t.rtlTranslate,r=e;if(r.originalEvent&&(r=r.originalEvent),i.isTouched){if(!i.isTouchEvent||"mousemove"!==r.type){var o="touchmove"===r.type?r.targetTouches[0].pageX:r.pageX,l="touchmove"===r.type?r.targetTouches[0].pageY:r.pageY;if(r.preventedByNestedSwiper)return n.startX=o,void(n.startY=l);if(!t.allowTouchMove)return t.allowClick=!1,void(i.isTouched&&(te.extend(n,{startX:o,startY:l,currentX:o,currentY:l}),i.touchStartTime=te.now()));if(i.isTouchEvent&&a.touchReleaseOnEdges&&!a.loop)if(t.isVertical()){if(l<n.startY&&t.translate<=t.maxTranslate()||l>n.startY&&t.translate>=t.minTranslate())return i.isTouched=!1,void(i.isMoved=!1)}else if(o<n.startX&&t.translate<=t.maxTranslate()||o>n.startX&&t.translate>=t.minTranslate())return;if(i.isTouchEvent&&v.activeElement&&r.target===v.activeElement&&I(r.target).is(i.formElements))return i.isMoved=!0,void(t.allowClick=!1);if(i.allowTouchCallbacks&&t.emit("touchMove",r),!(r.targetTouches&&1<r.targetTouches.length)){n.currentX=o,n.currentY=l;var d=n.currentX-n.startX,c=n.currentY-n.startY;if(!(t.params.threshold&&Math.sqrt(Math.pow(d,2)+Math.pow(c,2))<t.params.threshold)){var p;if(void 0===i.isScrolling)t.isHorizontal()&&n.currentY===n.startY||t.isVertical()&&n.currentX===n.startX?i.isScrolling=!1:25<=d*d+c*c&&(p=180*Math.atan2(Math.abs(c),Math.abs(d))/Math.PI,i.isScrolling=t.isHorizontal()?p>a.touchAngle:90-p>a.touchAngle);if(i.isScrolling&&t.emit("touchMoveOpposite",r),void 0===i.startMoving&&(n.currentX===n.startX&&n.currentY===n.startY||(i.startMoving=!0)),i.isScrolling)i.isTouched=!1;else if(i.startMoving){t.allowClick=!1,r.preventDefault(),a.touchMoveStopPropagation&&!a.nested&&r.stopPropagation(),i.isMoved||(a.loop&&t.loopFix(),i.startTranslate=t.getTranslate(),t.setTransition(0),t.animating&&t.$wrapperEl.trigger("webkitTransitionEnd transitionend"),i.allowMomentumBounce=!1,!a.grabCursor||!0!==t.allowSlideNext&&!0!==t.allowSlidePrev||t.setGrabCursor(!0),t.emit("sliderFirstMove",r)),t.emit("sliderMove",r),i.isMoved=!0;var u=t.isHorizontal()?d:c;n.diff=u,u*=a.touchRatio,s&&(u=-u),t.swipeDirection=0<u?"prev":"next",i.currentTranslate=u+i.startTranslate;var h=!0,f=a.resistanceRatio;if(a.touchReleaseOnEdges&&(f=0),0<u&&i.currentTranslate>t.minTranslate()?(h=!1,a.resistance&&(i.currentTranslate=t.minTranslate()-1+Math.pow(-t.minTranslate()+i.startTranslate+u,f))):u<0&&i.currentTranslate<t.maxTranslate()&&(h=!1,a.resistance&&(i.currentTranslate=t.maxTranslate()+1-Math.pow(t.maxTranslate()-i.startTranslate-u,f))),h&&(r.preventedByNestedSwiper=!0),!t.allowSlideNext&&"next"===t.swipeDirection&&i.currentTranslate<i.startTranslate&&(i.currentTranslate=i.startTranslate),!t.allowSlidePrev&&"prev"===t.swipeDirection&&i.currentTranslate>i.startTranslate&&(i.currentTranslate=i.startTranslate),0<a.threshold){if(!(Math.abs(u)>a.threshold||i.allowThresholdMove))return void(i.currentTranslate=i.startTranslate);if(!i.allowThresholdMove)return i.allowThresholdMove=!0,n.startX=n.currentX,n.startY=n.currentY,i.currentTranslate=i.startTranslate,void(n.diff=t.isHorizontal()?n.currentX-n.startX:n.currentY-n.startY)}a.followFinger&&((a.freeMode||a.watchSlidesProgress||a.watchSlidesVisibility)&&(t.updateActiveIndex(),t.updateSlidesClasses()),a.freeMode&&(0===i.velocities.length&&i.velocities.push({position:n[t.isHorizontal()?"startX":"startY"],time:i.touchStartTime}),i.velocities.push({position:n[t.isHorizontal()?"currentX":"currentY"],time:te.now()})),t.updateProgress(i.currentTranslate),t.setTranslate(i.currentTranslate))}}}}}else i.startMoving&&i.isScrolling&&t.emit("touchMoveOpposite",r)}.bind(e),e.onTouchEnd=function(e){var t=this,i=t.touchEventsData,a=t.params,n=t.touches,s=t.rtlTranslate,r=t.$wrapperEl,o=t.slidesGrid,l=t.snapGrid,d=e;if(d.originalEvent&&(d=d.originalEvent),i.allowTouchCallbacks&&t.emit("touchEnd",d),i.allowTouchCallbacks=!1,!i.isTouched)return i.isMoved&&a.grabCursor&&t.setGrabCursor(!1),i.isMoved=!1,void(i.startMoving=!1);a.grabCursor&&i.isMoved&&i.isTouched&&(!0===t.allowSlideNext||!0===t.allowSlidePrev)&&t.setGrabCursor(!1);var c,p=te.now(),u=p-i.touchStartTime;if(t.allowClick&&(t.updateClickedSlide(d),t.emit("tap",d),u<300&&300<p-i.lastClickTime&&(i.clickTimeout&&clearTimeout(i.clickTimeout),i.clickTimeout=te.nextTick(function(){t&&!t.destroyed&&t.emit("click",d)},300)),u<300&&p-i.lastClickTime<300&&(i.clickTimeout&&clearTimeout(i.clickTimeout),t.emit("doubleTap",d))),i.lastClickTime=te.now(),te.nextTick(function(){t.destroyed||(t.allowClick=!0)}),!i.isTouched||!i.isMoved||!t.swipeDirection||0===n.diff||i.currentTranslate===i.startTranslate)return i.isTouched=!1,i.isMoved=!1,void(i.startMoving=!1);if(i.isTouched=!1,i.isMoved=!1,i.startMoving=!1,c=a.followFinger?s?t.translate:-t.translate:-i.currentTranslate,a.freeMode){if(c<-t.minTranslate())return void t.slideTo(t.activeIndex);if(c>-t.maxTranslate())return void(t.slides.length<l.length?t.slideTo(l.length-1):t.slideTo(t.slides.length-1));if(a.freeModeMomentum){if(1<i.velocities.length){var h=i.velocities.pop(),f=i.velocities.pop(),v=h.position-f.position,g=h.time-f.time;t.velocity=v/g,t.velocity/=2,Math.abs(t.velocity)<a.freeModeMinimumVelocity&&(t.velocity=0),(150<g||300<te.now()-h.time)&&(t.velocity=0)}else t.velocity=0;t.velocity*=a.freeModeMomentumVelocityRatio,i.velocities.length=0;var m=1e3*a.freeModeMomentumRatio,b=t.velocity*m,y=t.translate+b;s&&(y=-y);var w,x,S=!1,T=20*Math.abs(t.velocity)*a.freeModeMomentumBounceRatio;if(y<t.maxTranslate())a.freeModeMomentumBounce?(y+t.maxTranslate()<-T&&(y=t.maxTranslate()-T),w=t.maxTranslate(),S=!0,i.allowMomentumBounce=!0):y=t.maxTranslate(),a.loop&&a.centeredSlides&&(x=!0);else if(y>t.minTranslate())a.freeModeMomentumBounce?(y-t.minTranslate()>T&&(y=t.minTranslate()+T),w=t.minTranslate(),S=!0,i.allowMomentumBounce=!0):y=t.minTranslate(),a.loop&&a.centeredSlides&&(x=!0);else if(a.freeModeSticky){for(var C,E=0;E<l.length;E+=1)if(l[E]>-y){C=E;break}y=-(y=Math.abs(l[C]-y)<Math.abs(l[C-1]-y)||"next"===t.swipeDirection?l[C]:l[C-1])}if(x&&t.once("transitionEnd",function(){t.loopFix()}),0!==t.velocity)m=s?Math.abs((-y-t.translate)/t.velocity):Math.abs((y-t.translate)/t.velocity);else if(a.freeModeSticky)return void t.slideToClosest();a.freeModeMomentumBounce&&S?(t.updateProgress(w),t.setTransition(m),t.setTranslate(y),t.transitionStart(!0,t.swipeDirection),t.animating=!0,r.transitionEnd(function(){t&&!t.destroyed&&i.allowMomentumBounce&&(t.emit("momentumBounce"),t.setTransition(a.speed),t.setTranslate(w),r.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))})):t.velocity?(t.updateProgress(y),t.setTransition(m),t.setTranslate(y),t.transitionStart(!0,t.swipeDirection),t.animating||(t.animating=!0,r.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))):t.updateProgress(y),t.updateActiveIndex(),t.updateSlidesClasses()}else if(a.freeModeSticky)return void t.slideToClosest();(!a.freeModeMomentum||u>=a.longSwipesMs)&&(t.updateProgress(),t.updateActiveIndex(),t.updateSlidesClasses())}else{for(var $=0,P=t.slidesSizesGrid[0],M=0;M<o.length;M+=a.slidesPerGroup)void 0!==o[M+a.slidesPerGroup]?c>=o[M]&&c<o[M+a.slidesPerGroup]&&(P=o[($=M)+a.slidesPerGroup]-o[M]):c>=o[M]&&($=M,P=o[o.length-1]-o[o.length-2]);var k=(c-o[$])/P;if(u>a.longSwipesMs){if(!a.longSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&(k>=a.longSwipesRatio?t.slideTo($+a.slidesPerGroup):t.slideTo($)),"prev"===t.swipeDirection&&(k>1-a.longSwipesRatio?t.slideTo($+a.slidesPerGroup):t.slideTo($))}else{if(!a.shortSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&t.slideTo($+a.slidesPerGroup),"prev"===t.swipeDirection&&t.slideTo($)}}}.bind(e),e.onClick=function(e){this.allowClick||(this.params.preventClicks&&e.preventDefault(),this.params.preventClicksPropagation&&this.animating&&(e.stopPropagation(),e.stopImmediatePropagation()))}.bind(e);var s="container"===t.touchEventsTarget?a:n,r=!!t.nested;if(ie.touch||!ie.pointerEvents&&!ie.prefixedPointerEvents){if(ie.touch){var o=!("touchstart"!==i.start||!ie.passiveListener||!t.passiveListeners)&&{passive:!0,capture:!1};s.addEventListener(i.start,e.onTouchStart,o),s.addEventListener(i.move,e.onTouchMove,ie.passiveListener?{passive:!1,capture:r}:r),s.addEventListener(i.end,e.onTouchEnd,o)}(t.simulateTouch&&!m.ios&&!m.android||t.simulateTouch&&!ie.touch&&m.ios)&&(s.addEventListener("mousedown",e.onTouchStart,!1),v.addEventListener("mousemove",e.onTouchMove,r),v.addEventListener("mouseup",e.onTouchEnd,!1))}else s.addEventListener(i.start,e.onTouchStart,!1),v.addEventListener(i.move,e.onTouchMove,r),v.addEventListener(i.end,e.onTouchEnd,!1);(t.preventClicks||t.preventClicksPropagation)&&s.addEventListener("click",e.onClick,!0),e.on(m.ios||m.android?"resize orientationchange observerUpdate":"resize observerUpdate",b,!0)},detachEvents:function(){var e=this,t=e.params,i=e.touchEvents,a=e.el,n=e.wrapperEl,s="container"===t.touchEventsTarget?a:n,r=!!t.nested;if(ie.touch||!ie.pointerEvents&&!ie.prefixedPointerEvents){if(ie.touch){var o=!("onTouchStart"!==i.start||!ie.passiveListener||!t.passiveListeners)&&{passive:!0,capture:!1};s.removeEventListener(i.start,e.onTouchStart,o),s.removeEventListener(i.move,e.onTouchMove,r),s.removeEventListener(i.end,e.onTouchEnd,o)}(t.simulateTouch&&!m.ios&&!m.android||t.simulateTouch&&!ie.touch&&m.ios)&&(s.removeEventListener("mousedown",e.onTouchStart,!1),v.removeEventListener("mousemove",e.onTouchMove,r),v.removeEventListener("mouseup",e.onTouchEnd,!1))}else s.removeEventListener(i.start,e.onTouchStart,!1),v.removeEventListener(i.move,e.onTouchMove,r),v.removeEventListener(i.end,e.onTouchEnd,!1);(t.preventClicks||t.preventClicksPropagation)&&s.removeEventListener("click",e.onClick,!0),e.off(m.ios||m.android?"resize orientationchange observerUpdate":"resize observerUpdate",b)}},breakpoints:{setBreakpoint:function(){var e=this,t=e.activeIndex,i=e.initialized,a=e.loopedSlides;void 0===a&&(a=0);var n=e.params,s=n.breakpoints;if(s&&(!s||0!==Object.keys(s).length)){var r=e.getBreakpoint(s);if(r&&e.currentBreakpoint!==r){var o=r in s?s[r]:void 0;o&&["slidesPerView","spaceBetween","slidesPerGroup"].forEach(function(e){var t=o[e];void 0!==t&&(o[e]="slidesPerView"!==e||"AUTO"!==t&&"auto"!==t?"slidesPerView"===e?parseFloat(t):parseInt(t,10):"auto")});var l=o||e.originalParams,d=l.direction&&l.direction!==n.direction,c=n.loop&&(l.slidesPerView!==n.slidesPerView||d);d&&i&&e.changeDirection(),te.extend(e.params,l),te.extend(e,{allowTouchMove:e.params.allowTouchMove,allowSlideNext:e.params.allowSlideNext,allowSlidePrev:e.params.allowSlidePrev}),e.currentBreakpoint=r,c&&i&&(e.loopDestroy(),e.loopCreate(),e.updateSlides(),e.slideTo(t-a+e.loopedSlides,0,!1)),e.emit("breakpoint",l)}}},getBreakpoint:function(e){if(e){var t=!1,i=[];Object.keys(e).forEach(function(e){i.push(e)}),i.sort(function(e,t){return parseInt(e,10)-parseInt(t,10)});for(var a=0;a<i.length;a+=1){var n=i[a];this.params.breakpointsInverse?n<=ee.innerWidth&&(t=n):n>=ee.innerWidth&&!t&&(t=n)}return t||"max"}}},checkOverflow:{checkOverflow:function(){var e=this,t=e.isLocked;e.isLocked=1===e.snapGrid.length,e.allowSlideNext=!e.isLocked,e.allowSlidePrev=!e.isLocked,t!==e.isLocked&&e.emit(e.isLocked?"lock":"unlock"),t&&t!==e.isLocked&&(e.isEnd=!1,e.navigation.update())}},classes:{addClasses:function(){var t=this.classNames,i=this.params,e=this.rtl,a=this.$el,n=[];n.push("initialized"),n.push(i.direction),i.freeMode&&n.push("free-mode"),ie.flexbox||n.push("no-flexbox"),i.autoHeight&&n.push("autoheight"),e&&n.push("rtl"),1<i.slidesPerColumn&&n.push("multirow"),m.android&&n.push("android"),m.ios&&n.push("ios"),(ae.isIE||ae.isEdge)&&(ie.pointerEvents||ie.prefixedPointerEvents)&&n.push("wp8-"+i.direction),n.forEach(function(e){t.push(i.containerModifierClass+e)}),a.addClass(t.join(" "))},removeClasses:function(){var e=this.$el,t=this.classNames;e.removeClass(t.join(" "))}},images:{loadImage:function(e,t,i,a,n,s){var r;function o(){s&&s()}e.complete&&n?o():t?((r=new ee.Image).onload=o,r.onerror=o,a&&(r.sizes=a),i&&(r.srcset=i),t&&(r.src=t)):o()},preloadImages:function(){var e=this;function t(){null!=e&&e&&!e.destroyed&&(void 0!==e.imagesLoaded&&(e.imagesLoaded+=1),e.imagesLoaded===e.imagesToLoad.length&&(e.params.updateOnImagesReady&&e.update(),e.emit("imagesReady")))}e.imagesToLoad=e.$el.find("img");for(var i=0;i<e.imagesToLoad.length;i+=1){var a=e.imagesToLoad[i];e.loadImage(a,a.currentSrc||a.getAttribute("src"),a.srcset||a.getAttribute("srcset"),a.sizes||a.getAttribute("sizes"),!0,t)}}}},x={},S=function(u){function h(){for(var e,t,n,i=[],a=arguments.length;a--;)i[a]=arguments[a];n=(n=1===i.length&&i[0].constructor&&i[0].constructor===Object?i[0]:(t=(e=i)[0],e[1]))||{},n=te.extend({},n),t&&!n.el&&(n.el=t),u.call(this,n),Object.keys(w).forEach(function(t){Object.keys(w[t]).forEach(function(e){h.prototype[e]||(h.prototype[e]=w[t][e])})});var s=this;void 0===s.modules&&(s.modules={}),Object.keys(s.modules).forEach(function(e){var t=s.modules[e];if(t.params){var i=Object.keys(t.params)[0],a=t.params[i];if("object"!=typeof a||null===a)return;if(!(i in n&&"enabled"in a))return;!0===n[i]&&(n[i]={enabled:!0}),"object"!=typeof n[i]||"enabled"in n[i]||(n[i].enabled=!0),n[i]||(n[i]={enabled:!1})}});var r=te.extend({},y);s.useModulesParams(r),s.params=te.extend({},r,x,n),s.originalParams=te.extend({},s.params),s.passedParams=te.extend({},n);var o=(s.$=I)(s.params.el);if(t=o[0]){if(1<o.length){var l=[];return o.each(function(e,t){var i=te.extend({},n,{el:t});l.push(new h(i))}),l}t.swiper=s,o.data("swiper",s);var d,c,p=o.children("."+s.params.wrapperClass);return te.extend(s,{$el:o,el:t,$wrapperEl:p,wrapperEl:p[0],classNames:[],slides:I(),slidesGrid:[],snapGrid:[],slidesSizesGrid:[],isHorizontal:function(){return"horizontal"===s.params.direction},isVertical:function(){return"vertical"===s.params.direction},rtl:"rtl"===t.dir.toLowerCase()||"rtl"===o.css("direction"),rtlTranslate:"horizontal"===s.params.direction&&("rtl"===t.dir.toLowerCase()||"rtl"===o.css("direction")),wrongRTL:"-webkit-box"===p.css("display"),activeIndex:0,realIndex:0,isBeginning:!0,isEnd:!1,translate:0,previousTranslate:0,progress:0,velocity:0,animating:!1,allowSlideNext:s.params.allowSlideNext,allowSlidePrev:s.params.allowSlidePrev,touchEvents:(d=["touchstart","touchmove","touchend"],c=["mousedown","mousemove","mouseup"],ie.pointerEvents?c=["pointerdown","pointermove","pointerup"]:ie.prefixedPointerEvents&&(c=["MSPointerDown","MSPointerMove","MSPointerUp"]),s.touchEventsTouch={start:d[0],move:d[1],end:d[2]},s.touchEventsDesktop={start:c[0],move:c[1],end:c[2]},ie.touch||!s.params.simulateTouch?s.touchEventsTouch:s.touchEventsDesktop),touchEventsData:{isTouched:void 0,isMoved:void 0,allowTouchCallbacks:void 0,touchStartTime:void 0,isScrolling:void 0,currentTranslate:void 0,startTranslate:void 0,allowThresholdMove:void 0,formElements:"input, select, option, textarea, button, video",lastClickTime:te.now(),clickTimeout:void 0,velocities:[],allowMomentumBounce:void 0,isTouchEvent:void 0,startMoving:void 0},allowClick:!0,allowTouchMove:s.params.allowTouchMove,touches:{startX:0,startY:0,currentX:0,currentY:0,diff:0},imagesToLoad:[],imagesLoaded:0}),s.useModules(),s.params.init&&s.init(),s}}u&&(h.__proto__=u);var e={extendedDefaults:{configurable:!0},defaults:{configurable:!0},Class:{configurable:!0},$:{configurable:!0}};return((h.prototype=Object.create(u&&u.prototype)).constructor=h).prototype.slidesPerViewDynamic=function(){var e=this,t=e.params,i=e.slides,a=e.slidesGrid,n=e.size,s=e.activeIndex,r=1;if(t.centeredSlides){for(var o,l=i[s].swiperSlideSize,d=s+1;d<i.length;d+=1)i[d]&&!o&&(r+=1,n<(l+=i[d].swiperSlideSize)&&(o=!0));for(var c=s-1;0<=c;c-=1)i[c]&&!o&&(r+=1,n<(l+=i[c].swiperSlideSize)&&(o=!0))}else for(var p=s+1;p<i.length;p+=1)a[p]-a[s]<n&&(r+=1);return r},h.prototype.update=function(){var i=this;if(i&&!i.destroyed){var e=i.snapGrid,t=i.params;t.breakpoints&&i.setBreakpoint(),i.updateSize(),i.updateSlides(),i.updateProgress(),i.updateSlidesClasses(),i.params.freeMode?(a(),i.params.autoHeight&&i.updateAutoHeight()):(("auto"===i.params.slidesPerView||1<i.params.slidesPerView)&&i.isEnd&&!i.params.centeredSlides?i.slideTo(i.slides.length-1,0,!1,!0):i.slideTo(i.activeIndex,0,!1,!0))||a(),t.watchOverflow&&e!==i.snapGrid&&i.checkOverflow(),i.emit("update")}function a(){var e=i.rtlTranslate?-1*i.translate:i.translate,t=Math.min(Math.max(e,i.maxTranslate()),i.minTranslate());i.setTranslate(t),i.updateActiveIndex(),i.updateSlidesClasses()}},h.prototype.changeDirection=function(i,e){void 0===e&&(e=!0);var t=this,a=t.params.direction;return(i=i||("horizontal"===a?"vertical":"horizontal"))===a||"horizontal"!==i&&"vertical"!==i||(t.$el.removeClass(""+t.params.containerModifierClass+a+" wp8-"+a).addClass(""+t.params.containerModifierClass+i),(ae.isIE||ae.isEdge)&&(ie.pointerEvents||ie.prefixedPointerEvents)&&t.$el.addClass(t.params.containerModifierClass+"wp8-"+i),t.params.direction=i,t.slides.each(function(e,t){"vertical"===i?t.style.width="":t.style.height=""}),t.emit("changeDirection"),e&&t.update()),t},h.prototype.init=function(){var e=this;e.initialized||(e.emit("beforeInit"),e.params.breakpoints&&e.setBreakpoint(),e.addClasses(),e.params.loop&&e.loopCreate(),e.updateSize(),e.updateSlides(),e.params.watchOverflow&&e.checkOverflow(),e.params.grabCursor&&e.setGrabCursor(),e.params.preloadImages&&e.preloadImages(),e.params.loop?e.slideTo(e.params.initialSlide+e.loopedSlides,0,e.params.runCallbacksOnInit):e.slideTo(e.params.initialSlide,0,e.params.runCallbacksOnInit),e.attachEvents(),e.initialized=!0,e.emit("init"))},h.prototype.destroy=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0);var i=this,a=i.params,n=i.$el,s=i.$wrapperEl,r=i.slides;return void 0===i.params||i.destroyed||(i.emit("beforeDestroy"),i.initialized=!1,i.detachEvents(),a.loop&&i.loopDestroy(),t&&(i.removeClasses(),n.removeAttr("style"),s.removeAttr("style"),r&&r.length&&r.removeClass([a.slideVisibleClass,a.slideActiveClass,a.slideNextClass,a.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index").removeAttr("data-swiper-column").removeAttr("data-swiper-row")),i.emit("destroy"),Object.keys(i.eventsListeners).forEach(function(e){i.off(e)}),!1!==e&&(i.$el[0].swiper=null,i.$el.data("swiper",null),te.deleteProps(i)),i.destroyed=!0),null},h.extendDefaults=function(e){te.extend(x,e)},e.extendedDefaults.get=function(){return x},e.defaults.get=function(){return y},e.Class.get=function(){return u},e.$.get=function(){return I},Object.defineProperties(h,e),h}(e),T={name:"device",proto:{device:m},static:{device:m}},C={name:"support",proto:{support:ie},static:{support:ie}},E={name:"browser",proto:{browser:ae},static:{browser:ae}},$={name:"resize",create:function(){var e=this;te.extend(e,{resize:{resizeHandler:function(){e&&!e.destroyed&&e.initialized&&(e.emit("beforeResize"),e.emit("resize"))},orientationChangeHandler:function(){e&&!e.destroyed&&e.initialized&&e.emit("orientationchange")}}})},on:{init:function(){ee.addEventListener("resize",this.resize.resizeHandler),ee.addEventListener("orientationchange",this.resize.orientationChangeHandler)},destroy:function(){ee.removeEventListener("resize",this.resize.resizeHandler),ee.removeEventListener("orientationchange",this.resize.orientationChangeHandler)}}},P={func:ee.MutationObserver||ee.WebkitMutationObserver,attach:function(e,t){void 0===t&&(t={});var i=this,a=new P.func(function(e){if(1!==e.length){var t=function(){i.emit("observerUpdate",e[0])};ee.requestAnimationFrame?ee.requestAnimationFrame(t):ee.setTimeout(t,0)}else i.emit("observerUpdate",e[0])});a.observe(e,{attributes:void 0===t.attributes||t.attributes,childList:void 0===t.childList||t.childList,characterData:void 0===t.characterData||t.characterData}),i.observer.observers.push(a)},init:function(){var e=this;if(ie.observer&&e.params.observer){if(e.params.observeParents)for(var t=e.$el.parents(),i=0;i<t.length;i+=1)e.observer.attach(t[i]);e.observer.attach(e.$el[0],{childList:e.params.observeSlideChildren}),e.observer.attach(e.$wrapperEl[0],{attributes:!1})}},destroy:function(){this.observer.observers.forEach(function(e){e.disconnect()}),this.observer.observers=[]}},M={name:"observer",params:{observer:!1,observeParents:!1,observeSlideChildren:!1},create:function(){te.extend(this,{observer:{init:P.init.bind(this),attach:P.attach.bind(this),destroy:P.destroy.bind(this),observers:[]}})},on:{init:function(){this.observer.init()},destroy:function(){this.observer.destroy()}}},k={update:function(e){var t=this,i=t.params,a=i.slidesPerView,n=i.slidesPerGroup,s=i.centeredSlides,r=t.params.virtual,o=r.addSlidesBefore,l=r.addSlidesAfter,d=t.virtual,c=d.from,p=d.to,u=d.slides,h=d.slidesGrid,f=d.renderSlide,v=d.offset;t.updateActiveIndex();var g,m,b,y=t.activeIndex||0;g=t.rtlTranslate?"right":t.isHorizontal()?"left":"top",b=s?(m=Math.floor(a/2)+n+o,Math.floor(a/2)+n+l):(m=a+(n-1)+o,n+l);var w=Math.max((y||0)-b,0),x=Math.min((y||0)+m,u.length-1),S=(t.slidesGrid[w]||0)-(t.slidesGrid[0]||0);function T(){t.updateSlides(),t.updateProgress(),t.updateSlidesClasses(),t.lazy&&t.params.lazy.enabled&&t.lazy.load()}if(te.extend(t.virtual,{from:w,to:x,offset:S,slidesGrid:t.slidesGrid}),c===w&&p===x&&!e)return t.slidesGrid!==h&&S!==v&&t.slides.css(g,S+"px"),void t.updateProgress();if(t.params.virtual.renderExternal)return t.params.virtual.renderExternal.call(t,{offset:S,from:w,to:x,slides:function(){for(var e=[],t=w;t<=x;t+=1)e.push(u[t]);return e}()}),void T();var C=[],E=[];if(e)t.$wrapperEl.find("."+t.params.slideClass).remove();else for(var $=c;$<=p;$+=1)($<w||x<$)&&t.$wrapperEl.find("."+t.params.slideClass+'[data-swiper-slide-index="'+$+'"]').remove();for(var P=0;P<u.length;P+=1)w<=P&&P<=x&&(void 0===p||e?E.push(P):(p<P&&E.push(P),P<c&&C.push(P)));E.forEach(function(e){t.$wrapperEl.append(f(u[e],e))}),C.sort(function(e,t){return t-e}).forEach(function(e){t.$wrapperEl.prepend(f(u[e],e))}),t.$wrapperEl.children(".swiper-slide").css(g,S+"px"),T()},renderSlide:function(e,t){var i=this,a=i.params.virtual;if(a.cache&&i.virtual.cache[t])return i.virtual.cache[t];var n=a.renderSlide?I(a.renderSlide.call(i,e,t)):I('<div class="'+i.params.slideClass+'" data-swiper-slide-index="'+t+'">'+e+"</div>");return n.attr("data-swiper-slide-index")||n.attr("data-swiper-slide-index",t),a.cache&&(i.virtual.cache[t]=n),n},appendSlide:function(e){if("object"==typeof e&&"length"in e)for(var t=0;t<e.length;t+=1)e[t]&&this.virtual.slides.push(e[t]);else this.virtual.slides.push(e);this.virtual.update(!0)},prependSlide:function(e){var t=this,i=t.activeIndex,a=i+1,n=1;if(Array.isArray(e)){for(var s=0;s<e.length;s+=1)e[s]&&t.virtual.slides.unshift(e[s]);a=i+e.length,n=e.length}else t.virtual.slides.unshift(e);if(t.params.virtual.cache){var r=t.virtual.cache,o={};Object.keys(r).forEach(function(e){o[parseInt(e,10)+n]=r[e]}),t.virtual.cache=o}t.virtual.update(!0),t.slideTo(a,0)},removeSlide:function(e){var t=this;if(null!=e){var i=t.activeIndex;if(Array.isArray(e))for(var a=e.length-1;0<=a;a-=1)t.virtual.slides.splice(e[a],1),t.params.virtual.cache&&delete t.virtual.cache[e[a]],e[a]<i&&(i-=1),i=Math.max(i,0);else t.virtual.slides.splice(e,1),t.params.virtual.cache&&delete t.virtual.cache[e],e<i&&(i-=1),i=Math.max(i,0);t.virtual.update(!0),t.slideTo(i,0)}},removeAllSlides:function(){var e=this;e.virtual.slides=[],e.params.virtual.cache&&(e.virtual.cache={}),e.virtual.update(!0),e.slideTo(0,0)}},z={name:"virtual",params:{virtual:{enabled:!1,slides:[],cache:!0,renderSlide:null,renderExternal:null,addSlidesBefore:0,addSlidesAfter:0}},create:function(){var e=this;te.extend(e,{virtual:{update:k.update.bind(e),appendSlide:k.appendSlide.bind(e),prependSlide:k.prependSlide.bind(e),removeSlide:k.removeSlide.bind(e),removeAllSlides:k.removeAllSlides.bind(e),renderSlide:k.renderSlide.bind(e),slides:e.params.virtual.slides,cache:{}}})},on:{beforeInit:function(){var e=this;if(e.params.virtual.enabled){e.classNames.push(e.params.containerModifierClass+"virtual");var t={watchSlidesProgress:!0};te.extend(e.params,t),te.extend(e.originalParams,t),e.params.initialSlide||e.virtual.update()}},setTranslate:function(){this.params.virtual.enabled&&this.virtual.update()}}},L={handle:function(e){var t=this,i=t.rtlTranslate,a=e;a.originalEvent&&(a=a.originalEvent);var n=a.keyCode||a.charCode;if(!t.allowSlideNext&&(t.isHorizontal()&&39===n||t.isVertical()&&40===n||34===n))return!1;if(!t.allowSlidePrev&&(t.isHorizontal()&&37===n||t.isVertical()&&38===n||33===n))return!1;if(!(a.shiftKey||a.altKey||a.ctrlKey||a.metaKey||v.activeElement&&v.activeElement.nodeName&&("input"===v.activeElement.nodeName.toLowerCase()||"textarea"===v.activeElement.nodeName.toLowerCase()))){if(t.params.keyboard.onlyInViewport&&(33===n||34===n||37===n||39===n||38===n||40===n)){var s=!1;if(0<t.$el.parents("."+t.params.slideClass).length&&0===t.$el.parents("."+t.params.slideActiveClass).length)return;var r=ee.innerWidth,o=ee.innerHeight,l=t.$el.offset();i&&(l.left-=t.$el[0].scrollLeft);for(var d=[[l.left,l.top],[l.left+t.width,l.top],[l.left,l.top+t.height],[l.left+t.width,l.top+t.height]],c=0;c<d.length;c+=1){var p=d[c];0<=p[0]&&p[0]<=r&&0<=p[1]&&p[1]<=o&&(s=!0)}if(!s)return}t.isHorizontal()?(33!==n&&34!==n&&37!==n&&39!==n||(a.preventDefault?a.preventDefault():a.returnValue=!1),(34!==n&&39!==n||i)&&(33!==n&&37!==n||!i)||t.slideNext(),(33!==n&&37!==n||i)&&(34!==n&&39!==n||!i)||t.slidePrev()):(33!==n&&34!==n&&38!==n&&40!==n||(a.preventDefault?a.preventDefault():a.returnValue=!1),34!==n&&40!==n||t.slideNext(),33!==n&&38!==n||t.slidePrev()),t.emit("keyPress",n)}},enable:function(){this.keyboard.enabled||(I(v).on("keydown",this.keyboard.handle),this.keyboard.enabled=!0)},disable:function(){this.keyboard.enabled&&(I(v).off("keydown",this.keyboard.handle),this.keyboard.enabled=!1)}},A={name:"keyboard",params:{keyboard:{enabled:!1,onlyInViewport:!0}},create:function(){te.extend(this,{keyboard:{enabled:!1,enable:L.enable.bind(this),disable:L.disable.bind(this),handle:L.handle.bind(this)}})},on:{init:function(){this.params.keyboard.enabled&&this.keyboard.enable()},destroy:function(){this.keyboard.enabled&&this.keyboard.disable()}}};var D={lastScrollTime:te.now(),event:-1<ee.navigator.userAgent.indexOf("firefox")?"DOMMouseScroll":function(){var e="onwheel",t=e in v;if(!t){var i=v.createElement("div");i.setAttribute(e,"return;"),t="function"==typeof i[e]}return!t&&v.implementation&&v.implementation.hasFeature&&!0!==v.implementation.hasFeature("","")&&(t=v.implementation.hasFeature("Events.wheel","3.0")),t}()?"wheel":"mousewheel",normalize:function(e){var t=0,i=0,a=0,n=0;return"detail"in e&&(i=e.detail),"wheelDelta"in e&&(i=-e.wheelDelta/120),"wheelDeltaY"in e&&(i=-e.wheelDeltaY/120),"wheelDeltaX"in e&&(t=-e.wheelDeltaX/120),"axis"in e&&e.axis===e.HORIZONTAL_AXIS&&(t=i,i=0),a=10*t,n=10*i,"deltaY"in e&&(n=e.deltaY),"deltaX"in e&&(a=e.deltaX),(a||n)&&e.deltaMode&&(1===e.deltaMode?(a*=40,n*=40):(a*=800,n*=800)),a&&!t&&(t=a<1?-1:1),n&&!i&&(i=n<1?-1:1),{spinX:t,spinY:i,pixelX:a,pixelY:n}},handleMouseEnter:function(){this.mouseEntered=!0},handleMouseLeave:function(){this.mouseEntered=!1},handle:function(e){var t=e,i=this,a=i.params.mousewheel;if(!i.mouseEntered&&!a.releaseOnEdges)return!0;t.originalEvent&&(t=t.originalEvent);var n=0,s=i.rtlTranslate?-1:1,r=D.normalize(t);if(a.forceToAxis)if(i.isHorizontal()){if(!(Math.abs(r.pixelX)>Math.abs(r.pixelY)))return!0;n=r.pixelX*s}else{if(!(Math.abs(r.pixelY)>Math.abs(r.pixelX)))return!0;n=r.pixelY}else n=Math.abs(r.pixelX)>Math.abs(r.pixelY)?-r.pixelX*s:-r.pixelY;if(0===n)return!0;if(a.invert&&(n=-n),i.params.freeMode){i.params.loop&&i.loopFix();var o=i.getTranslate()+n*a.sensitivity,l=i.isBeginning,d=i.isEnd;if(o>=i.minTranslate()&&(o=i.minTranslate()),o<=i.maxTranslate()&&(o=i.maxTranslate()),i.setTransition(0),i.setTranslate(o),i.updateProgress(),i.updateActiveIndex(),i.updateSlidesClasses(),(!l&&i.isBeginning||!d&&i.isEnd)&&i.updateSlidesClasses(),i.params.freeModeSticky&&(clearTimeout(i.mousewheel.timeout),i.mousewheel.timeout=te.nextTick(function(){i.slideToClosest()},300)),i.emit("scroll",t),i.params.autoplay&&i.params.autoplayDisableOnInteraction&&i.autoplay.stop(),o===i.minTranslate()||o===i.maxTranslate())return!0}else{if(60<te.now()-i.mousewheel.lastScrollTime)if(n<0)if(i.isEnd&&!i.params.loop||i.animating){if(a.releaseOnEdges)return!0}else i.slideNext(),i.emit("scroll",t);else if(i.isBeginning&&!i.params.loop||i.animating){if(a.releaseOnEdges)return!0}else i.slidePrev(),i.emit("scroll",t);i.mousewheel.lastScrollTime=(new ee.Date).getTime()}return t.preventDefault?t.preventDefault():t.returnValue=!1,!1},enable:function(){var e=this;if(!D.event)return!1;if(e.mousewheel.enabled)return!1;var t=e.$el;return"container"!==e.params.mousewheel.eventsTarged&&(t=I(e.params.mousewheel.eventsTarged)),t.on("mouseenter",e.mousewheel.handleMouseEnter),t.on("mouseleave",e.mousewheel.handleMouseLeave),t.on(D.event,e.mousewheel.handle),e.mousewheel.enabled=!0},disable:function(){var e=this;if(!D.event)return!1;if(!e.mousewheel.enabled)return!1;var t=e.$el;return"container"!==e.params.mousewheel.eventsTarged&&(t=I(e.params.mousewheel.eventsTarged)),t.off(D.event,e.mousewheel.handle),!(e.mousewheel.enabled=!1)}},O={update:function(){var e=this,t=e.params.navigation;if(!e.params.loop){var i=e.navigation,a=i.$nextEl,n=i.$prevEl;n&&0<n.length&&(e.isBeginning?n.addClass(t.disabledClass):n.removeClass(t.disabledClass),n[e.params.watchOverflow&&e.isLocked?"addClass":"removeClass"](t.lockClass)),a&&0<a.length&&(e.isEnd?a.addClass(t.disabledClass):a.removeClass(t.disabledClass),a[e.params.watchOverflow&&e.isLocked?"addClass":"removeClass"](t.lockClass))}},onPrevClick:function(e){e.preventDefault(),this.isBeginning&&!this.params.loop||this.slidePrev()},onNextClick:function(e){e.preventDefault(),this.isEnd&&!this.params.loop||this.slideNext()},init:function(){var e,t,i=this,a=i.params.navigation;(a.nextEl||a.prevEl)&&(a.nextEl&&(e=I(a.nextEl),i.params.uniqueNavElements&&"string"==typeof a.nextEl&&1<e.length&&1===i.$el.find(a.nextEl).length&&(e=i.$el.find(a.nextEl))),a.prevEl&&(t=I(a.prevEl),i.params.uniqueNavElements&&"string"==typeof a.prevEl&&1<t.length&&1===i.$el.find(a.prevEl).length&&(t=i.$el.find(a.prevEl))),e&&0<e.length&&e.on("click",i.navigation.onNextClick),t&&0<t.length&&t.on("click",i.navigation.onPrevClick),te.extend(i.navigation,{$nextEl:e,nextEl:e&&e[0],$prevEl:t,prevEl:t&&t[0]}))},destroy:function(){var e=this,t=e.navigation,i=t.$nextEl,a=t.$prevEl;i&&i.length&&(i.off("click",e.navigation.onNextClick),i.removeClass(e.params.navigation.disabledClass)),a&&a.length&&(a.off("click",e.navigation.onPrevClick),a.removeClass(e.params.navigation.disabledClass))}},H={update:function(){var e=this,t=e.rtl,n=e.params.pagination;if(n.el&&e.pagination.el&&e.pagination.$el&&0!==e.pagination.$el.length){var s,i=e.virtual&&e.params.virtual.enabled?e.virtual.slides.length:e.slides.length,a=e.pagination.$el,r=e.params.loop?Math.ceil((i-2*e.loopedSlides)/e.params.slidesPerGroup):e.snapGrid.length;if(e.params.loop?((s=Math.ceil((e.activeIndex-e.loopedSlides)/e.params.slidesPerGroup))>i-1-2*e.loopedSlides&&(s-=i-2*e.loopedSlides),r-1<s&&(s-=r),s<0&&"bullets"!==e.params.paginationType&&(s=r+s)):s=void 0!==e.snapIndex?e.snapIndex:e.activeIndex||0,"bullets"===n.type&&e.pagination.bullets&&0<e.pagination.bullets.length){var o,l,d,c=e.pagination.bullets;if(n.dynamicBullets&&(e.pagination.bulletSize=c.eq(0)[e.isHorizontal()?"outerWidth":"outerHeight"](!0),a.css(e.isHorizontal()?"width":"height",e.pagination.bulletSize*(n.dynamicMainBullets+4)+"px"),1<n.dynamicMainBullets&&void 0!==e.previousIndex&&(e.pagination.dynamicBulletIndex+=s-e.previousIndex,e.pagination.dynamicBulletIndex>n.dynamicMainBullets-1?e.pagination.dynamicBulletIndex=n.dynamicMainBullets-1:e.pagination.dynamicBulletIndex<0&&(e.pagination.dynamicBulletIndex=0)),o=s-e.pagination.dynamicBulletIndex,d=((l=o+(Math.min(c.length,n.dynamicMainBullets)-1))+o)/2),c.removeClass(n.bulletActiveClass+" "+n.bulletActiveClass+"-next "+n.bulletActiveClass+"-next-next "+n.bulletActiveClass+"-prev "+n.bulletActiveClass+"-prev-prev "+n.bulletActiveClass+"-main"),1<a.length)c.each(function(e,t){var i=I(t),a=i.index();a===s&&i.addClass(n.bulletActiveClass),n.dynamicBullets&&(o<=a&&a<=l&&i.addClass(n.bulletActiveClass+"-main"),a===o&&i.prev().addClass(n.bulletActiveClass+"-prev").prev().addClass(n.bulletActiveClass+"-prev-prev"),a===l&&i.next().addClass(n.bulletActiveClass+"-next").next().addClass(n.bulletActiveClass+"-next-next"))});else if(c.eq(s).addClass(n.bulletActiveClass),n.dynamicBullets){for(var p=c.eq(o),u=c.eq(l),h=o;h<=l;h+=1)c.eq(h).addClass(n.bulletActiveClass+"-main");p.prev().addClass(n.bulletActiveClass+"-prev").prev().addClass(n.bulletActiveClass+"-prev-prev"),u.next().addClass(n.bulletActiveClass+"-next").next().addClass(n.bulletActiveClass+"-next-next")}if(n.dynamicBullets){var f=Math.min(c.length,n.dynamicMainBullets+4),v=(e.pagination.bulletSize*f-e.pagination.bulletSize)/2-d*e.pagination.bulletSize,g=t?"right":"left";c.css(e.isHorizontal()?g:"top",v+"px")}}if("fraction"===n.type&&(a.find("."+n.currentClass).text(n.formatFractionCurrent(s+1)),a.find("."+n.totalClass).text(n.formatFractionTotal(r))),"progressbar"===n.type){var m;m=n.progressbarOpposite?e.isHorizontal()?"vertical":"horizontal":e.isHorizontal()?"horizontal":"vertical";var b=(s+1)/r,y=1,w=1;"horizontal"===m?y=b:w=b,a.find("."+n.progressbarFillClass).transform("translate3d(0,0,0) scaleX("+y+") scaleY("+w+")").transition(e.params.speed)}"custom"===n.type&&n.renderCustom?(a.html(n.renderCustom(e,s+1,r)),e.emit("paginationRender",e,a[0])):e.emit("paginationUpdate",e,a[0]),a[e.params.watchOverflow&&e.isLocked?"addClass":"removeClass"](n.lockClass)}},render:function(){var e=this,t=e.params.pagination;if(t.el&&e.pagination.el&&e.pagination.$el&&0!==e.pagination.$el.length){var i=e.virtual&&e.params.virtual.enabled?e.virtual.slides.length:e.slides.length,a=e.pagination.$el,n="";if("bullets"===t.type){for(var s=e.params.loop?Math.ceil((i-2*e.loopedSlides)/e.params.slidesPerGroup):e.snapGrid.length,r=0;r<s;r+=1)t.renderBullet?n+=t.renderBullet.call(e,r,t.bulletClass):n+="<"+t.bulletElement+' class="'+t.bulletClass+'"></'+t.bulletElement+">";a.html(n),e.pagination.bullets=a.find("."+t.bulletClass)}"fraction"===t.type&&(n=t.renderFraction?t.renderFraction.call(e,t.currentClass,t.totalClass):'<span class="'+t.currentClass+'"></span> / <span class="'+t.totalClass+'"></span>',a.html(n)),"progressbar"===t.type&&(n=t.renderProgressbar?t.renderProgressbar.call(e,t.progressbarFillClass):'<span class="'+t.progressbarFillClass+'"></span>',a.html(n)),"custom"!==t.type&&e.emit("paginationRender",e.pagination.$el[0])}},init:function(){var i=this,e=i.params.pagination;if(e.el){var t=I(e.el);0!==t.length&&(i.params.uniqueNavElements&&"string"==typeof e.el&&1<t.length&&1===i.$el.find(e.el).length&&(t=i.$el.find(e.el)),"bullets"===e.type&&e.clickable&&t.addClass(e.clickableClass),t.addClass(e.modifierClass+e.type),"bullets"===e.type&&e.dynamicBullets&&(t.addClass(""+e.modifierClass+e.type+"-dynamic"),i.pagination.dynamicBulletIndex=0,e.dynamicMainBullets<1&&(e.dynamicMainBullets=1)),"progressbar"===e.type&&e.progressbarOpposite&&t.addClass(e.progressbarOppositeClass),e.clickable&&t.on("click","."+e.bulletClass,function(e){e.preventDefault();var t=I(this).index()*i.params.slidesPerGroup;i.params.loop&&(t+=i.loopedSlides),i.slideTo(t)}),te.extend(i.pagination,{$el:t,el:t[0]}))}},destroy:function(){var e=this,t=e.params.pagination;if(t.el&&e.pagination.el&&e.pagination.$el&&0!==e.pagination.$el.length){var i=e.pagination.$el;i.removeClass(t.hiddenClass),i.removeClass(t.modifierClass+t.type),e.pagination.bullets&&e.pagination.bullets.removeClass(t.bulletActiveClass),t.clickable&&i.off("click","."+t.bulletClass)}}},F={setTranslate:function(){var e=this;if(e.params.scrollbar.el&&e.scrollbar.el){var t=e.scrollbar,i=e.rtlTranslate,a=e.progress,n=t.dragSize,s=t.trackSize,r=t.$dragEl,o=t.$el,l=e.params.scrollbar,d=n,c=(s-n)*a;i?0<(c=-c)?(d=n-c,c=0):s<-c+n&&(d=s+c):c<0?(d=n+c,c=0):s<c+n&&(d=s-c),e.isHorizontal()?(ie.transforms3d?r.transform("translate3d("+c+"px, 0, 0)"):r.transform("translateX("+c+"px)"),r[0].style.width=d+"px"):(ie.transforms3d?r.transform("translate3d(0px, "+c+"px, 0)"):r.transform("translateY("+c+"px)"),r[0].style.height=d+"px"),l.hide&&(clearTimeout(e.scrollbar.timeout),o[0].style.opacity=1,e.scrollbar.timeout=setTimeout(function(){o[0].style.opacity=0,o.transition(400)},1e3))}},setTransition:function(e){this.params.scrollbar.el&&this.scrollbar.el&&this.scrollbar.$dragEl.transition(e)},updateSize:function(){var e=this;if(e.params.scrollbar.el&&e.scrollbar.el){var t=e.scrollbar,i=t.$dragEl,a=t.$el;i[0].style.width="",i[0].style.height="";var n,s=e.isHorizontal()?a[0].offsetWidth:a[0].offsetHeight,r=e.size/e.virtualSize,o=r*(s/e.size);n="auto"===e.params.scrollbar.dragSize?s*r:parseInt(e.params.scrollbar.dragSize,10),e.isHorizontal()?i[0].style.width=n+"px":i[0].style.height=n+"px",a[0].style.display=1<=r?"none":"",e.params.scrollbar.hide&&(a[0].style.opacity=0),te.extend(t,{trackSize:s,divider:r,moveDivider:o,dragSize:n}),t.$el[e.params.watchOverflow&&e.isLocked?"addClass":"removeClass"](e.params.scrollbar.lockClass)}},getPointerPosition:function(e){return this.isHorizontal()?"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageX:e.pageX||e.clientX:"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageY:e.pageY||e.clientY},setDragPosition:function(e){var t,i=this,a=i.scrollbar,n=i.rtlTranslate,s=a.$el,r=a.dragSize,o=a.trackSize,l=a.dragStartPos;t=(a.getPointerPosition(e)-s.offset()[i.isHorizontal()?"left":"top"]-(null!==l?l:r/2))/(o-r),t=Math.max(Math.min(t,1),0),n&&(t=1-t);var d=i.minTranslate()+(i.maxTranslate()-i.minTranslate())*t;i.updateProgress(d),i.setTranslate(d),i.updateActiveIndex(),i.updateSlidesClasses()},onDragStart:function(e){var t=this,i=t.params.scrollbar,a=t.scrollbar,n=t.$wrapperEl,s=a.$el,r=a.$dragEl;t.scrollbar.isTouched=!0,t.scrollbar.dragStartPos=e.target===r[0]||e.target===r?a.getPointerPosition(e)-e.target.getBoundingClientRect()[t.isHorizontal()?"left":"top"]:null,e.preventDefault(),e.stopPropagation(),n.transition(100),r.transition(100),a.setDragPosition(e),clearTimeout(t.scrollbar.dragTimeout),s.transition(0),i.hide&&s.css("opacity",1),t.emit("scrollbarDragStart",e)},onDragMove:function(e){var t=this.scrollbar,i=this.$wrapperEl,a=t.$el,n=t.$dragEl;this.scrollbar.isTouched&&(e.preventDefault?e.preventDefault():e.returnValue=!1,t.setDragPosition(e),i.transition(0),a.transition(0),n.transition(0),this.emit("scrollbarDragMove",e))},onDragEnd:function(e){var t=this,i=t.params.scrollbar,a=t.scrollbar.$el;t.scrollbar.isTouched&&(t.scrollbar.isTouched=!1,i.hide&&(clearTimeout(t.scrollbar.dragTimeout),t.scrollbar.dragTimeout=te.nextTick(function(){a.css("opacity",0),a.transition(400)},1e3)),t.emit("scrollbarDragEnd",e),i.snapOnRelease&&t.slideToClosest())},enableDraggable:function(){var e=this;if(e.params.scrollbar.el){var t=e.scrollbar,i=e.touchEventsTouch,a=e.touchEventsDesktop,n=e.params,s=t.$el[0],r=!(!ie.passiveListener||!n.passiveListeners)&&{passive:!1,capture:!1},o=!(!ie.passiveListener||!n.passiveListeners)&&{passive:!0,capture:!1};ie.touch?(s.addEventListener(i.start,e.scrollbar.onDragStart,r),s.addEventListener(i.move,e.scrollbar.onDragMove,r),s.addEventListener(i.end,e.scrollbar.onDragEnd,o)):(s.addEventListener(a.start,e.scrollbar.onDragStart,r),v.addEventListener(a.move,e.scrollbar.onDragMove,r),v.addEventListener(a.end,e.scrollbar.onDragEnd,o))}},disableDraggable:function(){var e=this;if(e.params.scrollbar.el){var t=e.scrollbar,i=e.touchEventsTouch,a=e.touchEventsDesktop,n=e.params,s=t.$el[0],r=!(!ie.passiveListener||!n.passiveListeners)&&{passive:!1,capture:!1},o=!(!ie.passiveListener||!n.passiveListeners)&&{passive:!0,capture:!1};ie.touch?(s.removeEventListener(i.start,e.scrollbar.onDragStart,r),s.removeEventListener(i.move,e.scrollbar.onDragMove,r),s.removeEventListener(i.end,e.scrollbar.onDragEnd,o)):(s.removeEventListener(a.start,e.scrollbar.onDragStart,r),v.removeEventListener(a.move,e.scrollbar.onDragMove,r),v.removeEventListener(a.end,e.scrollbar.onDragEnd,o))}},init:function(){var e=this;if(e.params.scrollbar.el){var t=e.scrollbar,i=e.$el,a=e.params.scrollbar,n=I(a.el);e.params.uniqueNavElements&&"string"==typeof a.el&&1<n.length&&1===i.find(a.el).length&&(n=i.find(a.el));var s=n.find("."+e.params.scrollbar.dragClass);0===s.length&&(s=I('<div class="'+e.params.scrollbar.dragClass+'"></div>'),n.append(s)),te.extend(t,{$el:n,el:n[0],$dragEl:s,dragEl:s[0]}),a.draggable&&t.enableDraggable()}},destroy:function(){this.scrollbar.disableDraggable()}},B={setTransform:function(e,t){var i=this.rtl,a=I(e),n=i?-1:1,s=a.attr("data-swiper-parallax")||"0",r=a.attr("data-swiper-parallax-x"),o=a.attr("data-swiper-parallax-y"),l=a.attr("data-swiper-parallax-scale"),d=a.attr("data-swiper-parallax-opacity");if(r||o?(r=r||"0",o=o||"0"):this.isHorizontal()?(r=s,o="0"):(o=s,r="0"),r=0<=r.indexOf("%")?parseInt(r,10)*t*n+"%":r*t*n+"px",o=0<=o.indexOf("%")?parseInt(o,10)*t+"%":o*t+"px",null!=d){var c=d-(d-1)*(1-Math.abs(t));a[0].style.opacity=c}if(null==l)a.transform("translate3d("+r+", "+o+", 0px)");else{var p=l-(l-1)*(1-Math.abs(t));a.transform("translate3d("+r+", "+o+", 0px) scale("+p+")")}},setTranslate:function(){var a=this,e=a.$el,t=a.slides,n=a.progress,s=a.snapGrid;e.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(e,t){a.parallax.setTransform(t,n)}),t.each(function(e,t){var i=t.progress;1<a.params.slidesPerGroup&&"auto"!==a.params.slidesPerView&&(i+=Math.ceil(e/2)-n*(s.length-1)),i=Math.min(Math.max(i,-1),1),I(t).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(e,t){a.parallax.setTransform(t,i)})})},setTransition:function(n){void 0===n&&(n=this.params.speed);this.$el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(e,t){var i=I(t),a=parseInt(i.attr("data-swiper-parallax-duration"),10)||n;0===n&&(a=0),i.transition(a)})}},R={getDistanceBetweenTouches:function(e){if(e.targetTouches.length<2)return 1;var t=e.targetTouches[0].pageX,i=e.targetTouches[0].pageY,a=e.targetTouches[1].pageX,n=e.targetTouches[1].pageY;return Math.sqrt(Math.pow(a-t,2)+Math.pow(n-i,2))},onGestureStart:function(e){var t=this,i=t.params.zoom,a=t.zoom,n=a.gesture;if(a.fakeGestureTouched=!1,a.fakeGestureMoved=!1,!ie.gestures){if("touchstart"!==e.type||"touchstart"===e.type&&e.targetTouches.length<2)return;a.fakeGestureTouched=!0,n.scaleStart=R.getDistanceBetweenTouches(e)}n.$slideEl&&n.$slideEl.length||(n.$slideEl=I(e.target).closest(".swiper-slide"),0===n.$slideEl.length&&(n.$slideEl=t.slides.eq(t.activeIndex)),n.$imageEl=n.$slideEl.find("img, svg, canvas"),n.$imageWrapEl=n.$imageEl.parent("."+i.containerClass),n.maxRatio=n.$imageWrapEl.attr("data-swiper-zoom")||i.maxRatio,0!==n.$imageWrapEl.length)?(n.$imageEl.transition(0),t.zoom.isScaling=!0):n.$imageEl=void 0},onGestureChange:function(e){var t=this.params.zoom,i=this.zoom,a=i.gesture;if(!ie.gestures){if("touchmove"!==e.type||"touchmove"===e.type&&e.targetTouches.length<2)return;i.fakeGestureMoved=!0,a.scaleMove=R.getDistanceBetweenTouches(e)}a.$imageEl&&0!==a.$imageEl.length&&(i.scale=ie.gestures?e.scale*i.currentScale:a.scaleMove/a.scaleStart*i.currentScale,i.scale>a.maxRatio&&(i.scale=a.maxRatio-1+Math.pow(i.scale-a.maxRatio+1,.5)),i.scale<t.minRatio&&(i.scale=t.minRatio+1-Math.pow(t.minRatio-i.scale+1,.5)),a.$imageEl.transform("translate3d(0,0,0) scale("+i.scale+")"))},onGestureEnd:function(e){var t=this.params.zoom,i=this.zoom,a=i.gesture;if(!ie.gestures){if(!i.fakeGestureTouched||!i.fakeGestureMoved)return;if("touchend"!==e.type||"touchend"===e.type&&e.changedTouches.length<2&&!m.android)return;i.fakeGestureTouched=!1,i.fakeGestureMoved=!1}a.$imageEl&&0!==a.$imageEl.length&&(i.scale=Math.max(Math.min(i.scale,a.maxRatio),t.minRatio),a.$imageEl.transition(this.params.speed).transform("translate3d(0,0,0) scale("+i.scale+")"),i.currentScale=i.scale,i.isScaling=!1,1===i.scale&&(a.$slideEl=void 0))},onTouchStart:function(e){var t=this.zoom,i=t.gesture,a=t.image;i.$imageEl&&0!==i.$imageEl.length&&(a.isTouched||(m.android&&e.preventDefault(),a.isTouched=!0,a.touchesStart.x="touchstart"===e.type?e.targetTouches[0].pageX:e.pageX,a.touchesStart.y="touchstart"===e.type?e.targetTouches[0].pageY:e.pageY))},onTouchMove:function(e){var t=this,i=t.zoom,a=i.gesture,n=i.image,s=i.velocity;if(a.$imageEl&&0!==a.$imageEl.length&&(t.allowClick=!1,n.isTouched&&a.$slideEl)){n.isMoved||(n.width=a.$imageEl[0].offsetWidth,n.height=a.$imageEl[0].offsetHeight,n.startX=te.getTranslate(a.$imageWrapEl[0],"x")||0,n.startY=te.getTranslate(a.$imageWrapEl[0],"y")||0,a.slideWidth=a.$slideEl[0].offsetWidth,a.slideHeight=a.$slideEl[0].offsetHeight,a.$imageWrapEl.transition(0),t.rtl&&(n.startX=-n.startX,n.startY=-n.startY));var r=n.width*i.scale,o=n.height*i.scale;if(!(r<a.slideWidth&&o<a.slideHeight)){if(n.minX=Math.min(a.slideWidth/2-r/2,0),n.maxX=-n.minX,n.minY=Math.min(a.slideHeight/2-o/2,0),n.maxY=-n.minY,n.touchesCurrent.x="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,n.touchesCurrent.y="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY,!n.isMoved&&!i.isScaling){if(t.isHorizontal()&&(Math.floor(n.minX)===Math.floor(n.startX)&&n.touchesCurrent.x<n.touchesStart.x||Math.floor(n.maxX)===Math.floor(n.startX)&&n.touchesCurrent.x>n.touchesStart.x))return void(n.isTouched=!1);if(!t.isHorizontal()&&(Math.floor(n.minY)===Math.floor(n.startY)&&n.touchesCurrent.y<n.touchesStart.y||Math.floor(n.maxY)===Math.floor(n.startY)&&n.touchesCurrent.y>n.touchesStart.y))return void(n.isTouched=!1)}e.preventDefault(),e.stopPropagation(),n.isMoved=!0,n.currentX=n.touchesCurrent.x-n.touchesStart.x+n.startX,n.currentY=n.touchesCurrent.y-n.touchesStart.y+n.startY,n.currentX<n.minX&&(n.currentX=n.minX+1-Math.pow(n.minX-n.currentX+1,.8)),n.currentX>n.maxX&&(n.currentX=n.maxX-1+Math.pow(n.currentX-n.maxX+1,.8)),n.currentY<n.minY&&(n.currentY=n.minY+1-Math.pow(n.minY-n.currentY+1,.8)),n.currentY>n.maxY&&(n.currentY=n.maxY-1+Math.pow(n.currentY-n.maxY+1,.8)),s.prevPositionX||(s.prevPositionX=n.touchesCurrent.x),s.prevPositionY||(s.prevPositionY=n.touchesCurrent.y),s.prevTime||(s.prevTime=Date.now()),s.x=(n.touchesCurrent.x-s.prevPositionX)/(Date.now()-s.prevTime)/2,s.y=(n.touchesCurrent.y-s.prevPositionY)/(Date.now()-s.prevTime)/2,Math.abs(n.touchesCurrent.x-s.prevPositionX)<2&&(s.x=0),Math.abs(n.touchesCurrent.y-s.prevPositionY)<2&&(s.y=0),s.prevPositionX=n.touchesCurrent.x,s.prevPositionY=n.touchesCurrent.y,s.prevTime=Date.now(),a.$imageWrapEl.transform("translate3d("+n.currentX+"px, "+n.currentY+"px,0)")}}},onTouchEnd:function(){var e=this.zoom,t=e.gesture,i=e.image,a=e.velocity;if(t.$imageEl&&0!==t.$imageEl.length){if(!i.isTouched||!i.isMoved)return i.isTouched=!1,void(i.isMoved=!1);i.isTouched=!1,i.isMoved=!1;var n=300,s=300,r=a.x*n,o=i.currentX+r,l=a.y*s,d=i.currentY+l;0!==a.x&&(n=Math.abs((o-i.currentX)/a.x)),0!==a.y&&(s=Math.abs((d-i.currentY)/a.y));var c=Math.max(n,s);i.currentX=o,i.currentY=d;var p=i.width*e.scale,u=i.height*e.scale;i.minX=Math.min(t.slideWidth/2-p/2,0),i.maxX=-i.minX,i.minY=Math.min(t.slideHeight/2-u/2,0),i.maxY=-i.minY,i.currentX=Math.max(Math.min(i.currentX,i.maxX),i.minX),i.currentY=Math.max(Math.min(i.currentY,i.maxY),i.minY),t.$imageWrapEl.transition(c).transform("translate3d("+i.currentX+"px, "+i.currentY+"px,0)")}},onTransitionEnd:function(){var e=this.zoom,t=e.gesture;t.$slideEl&&this.previousIndex!==this.activeIndex&&(t.$imageEl.transform("translate3d(0,0,0) scale(1)"),t.$imageWrapEl.transform("translate3d(0,0,0)"),e.scale=1,e.currentScale=1,t.$slideEl=void 0,t.$imageEl=void 0,t.$imageWrapEl=void 0)},toggle:function(e){var t=this.zoom;t.scale&&1!==t.scale?t.out():t.in(e)},in:function(e){var t,i,a,n,s,r,o,l,d,c,p,u,h,f,v,g,m=this,b=m.zoom,y=m.params.zoom,w=b.gesture,x=b.image;w.$slideEl||(w.$slideEl=m.clickedSlide?I(m.clickedSlide):m.slides.eq(m.activeIndex),w.$imageEl=w.$slideEl.find("img, svg, canvas"),w.$imageWrapEl=w.$imageEl.parent("."+y.containerClass)),w.$imageEl&&0!==w.$imageEl.length&&(w.$slideEl.addClass(""+y.zoomedSlideClass),i=void 0===x.touchesStart.x&&e?(t="touchend"===e.type?e.changedTouches[0].pageX:e.pageX,"touchend"===e.type?e.changedTouches[0].pageY:e.pageY):(t=x.touchesStart.x,x.touchesStart.y),b.scale=w.$imageWrapEl.attr("data-swiper-zoom")||y.maxRatio,b.currentScale=w.$imageWrapEl.attr("data-swiper-zoom")||y.maxRatio,e?(v=w.$slideEl[0].offsetWidth,g=w.$slideEl[0].offsetHeight,a=w.$slideEl.offset().left+v/2-t,n=w.$slideEl.offset().top+g/2-i,o=w.$imageEl[0].offsetWidth,l=w.$imageEl[0].offsetHeight,d=o*b.scale,c=l*b.scale,h=-(p=Math.min(v/2-d/2,0)),f=-(u=Math.min(g/2-c/2,0)),(s=a*b.scale)<p&&(s=p),h<s&&(s=h),(r=n*b.scale)<u&&(r=u),f<r&&(r=f)):r=s=0,w.$imageWrapEl.transition(300).transform("translate3d("+s+"px, "+r+"px,0)"),w.$imageEl.transition(300).transform("translate3d(0,0,0) scale("+b.scale+")"))},out:function(){var e=this,t=e.zoom,i=e.params.zoom,a=t.gesture;a.$slideEl||(a.$slideEl=e.clickedSlide?I(e.clickedSlide):e.slides.eq(e.activeIndex),a.$imageEl=a.$slideEl.find("img, svg, canvas"),a.$imageWrapEl=a.$imageEl.parent("."+i.containerClass)),a.$imageEl&&0!==a.$imageEl.length&&(t.scale=1,t.currentScale=1,a.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"),a.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"),a.$slideEl.removeClass(""+i.zoomedSlideClass),a.$slideEl=void 0)},enable:function(){var e=this,t=e.zoom;if(!t.enabled){t.enabled=!0;var i=!("touchstart"!==e.touchEvents.start||!ie.passiveListener||!e.params.passiveListeners)&&{passive:!0,capture:!1};ie.gestures?(e.$wrapperEl.on("gesturestart",".swiper-slide",t.onGestureStart,i),e.$wrapperEl.on("gesturechange",".swiper-slide",t.onGestureChange,i),e.$wrapperEl.on("gestureend",".swiper-slide",t.onGestureEnd,i)):"touchstart"===e.touchEvents.start&&(e.$wrapperEl.on(e.touchEvents.start,".swiper-slide",t.onGestureStart,i),e.$wrapperEl.on(e.touchEvents.move,".swiper-slide",t.onGestureChange,i),e.$wrapperEl.on(e.touchEvents.end,".swiper-slide",t.onGestureEnd,i)),e.$wrapperEl.on(e.touchEvents.move,"."+e.params.zoom.containerClass,t.onTouchMove)}},disable:function(){var e=this,t=e.zoom;if(t.enabled){e.zoom.enabled=!1;var i=!("touchstart"!==e.touchEvents.start||!ie.passiveListener||!e.params.passiveListeners)&&{passive:!0,capture:!1};ie.gestures?(e.$wrapperEl.off("gesturestart",".swiper-slide",t.onGestureStart,i),e.$wrapperEl.off("gesturechange",".swiper-slide",t.onGestureChange,i),e.$wrapperEl.off("gestureend",".swiper-slide",t.onGestureEnd,i)):"touchstart"===e.touchEvents.start&&(e.$wrapperEl.off(e.touchEvents.start,".swiper-slide",t.onGestureStart,i),e.$wrapperEl.off(e.touchEvents.move,".swiper-slide",t.onGestureChange,i),e.$wrapperEl.off(e.touchEvents.end,".swiper-slide",t.onGestureEnd,i)),e.$wrapperEl.off(e.touchEvents.move,"."+e.params.zoom.containerClass,t.onTouchMove)}}},X={loadInSlide:function(e,l){void 0===l&&(l=!0);var d=this,c=d.params.lazy;if(void 0!==e&&0!==d.slides.length){var p=d.virtual&&d.params.virtual.enabled?d.$wrapperEl.children("."+d.params.slideClass+'[data-swiper-slide-index="'+e+'"]'):d.slides.eq(e),t=p.find("."+c.elementClass+":not(."+c.loadedClass+"):not(."+c.loadingClass+")");!p.hasClass(c.elementClass)||p.hasClass(c.loadedClass)||p.hasClass(c.loadingClass)||(t=t.add(p[0])),0!==t.length&&t.each(function(e,t){var a=I(t);a.addClass(c.loadingClass);var n=a.attr("data-background"),s=a.attr("data-src"),r=a.attr("data-srcset"),o=a.attr("data-sizes");d.loadImage(a[0],s||n,r,o,!1,function(){if(null!=d&&d&&(!d||d.params)&&!d.destroyed){if(n?(a.css("background-image",'url("'+n+'")'),a.removeAttr("data-background")):(r&&(a.attr("srcset",r),a.removeAttr("data-srcset")),o&&(a.attr("sizes",o),a.removeAttr("data-sizes")),s&&(a.attr("src",s),a.removeAttr("data-src"))),a.addClass(c.loadedClass).removeClass(c.loadingClass),p.find("."+c.preloaderClass).remove(),d.params.loop&&l){var e=p.attr("data-swiper-slide-index");if(p.hasClass(d.params.slideDuplicateClass)){var t=d.$wrapperEl.children('[data-swiper-slide-index="'+e+'"]:not(.'+d.params.slideDuplicateClass+")");d.lazy.loadInSlide(t.index(),!1)}else{var i=d.$wrapperEl.children("."+d.params.slideDuplicateClass+'[data-swiper-slide-index="'+e+'"]');d.lazy.loadInSlide(i.index(),!1)}}d.emit("lazyImageReady",p[0],a[0])}}),d.emit("lazyImageLoad",p[0],a[0])})}},load:function(){var a=this,t=a.$wrapperEl,i=a.params,n=a.slides,e=a.activeIndex,s=a.virtual&&i.virtual.enabled,r=i.lazy,o=i.slidesPerView;function l(e){if(s){if(t.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]').length)return!0}else if(n[e])return!0;return!1}function d(e){return s?I(e).attr("data-swiper-slide-index"):I(e).index()}if("auto"===o&&(o=0),a.lazy.initialImageLoaded||(a.lazy.initialImageLoaded=!0),a.params.watchSlidesVisibility)t.children("."+i.slideVisibleClass).each(function(e,t){var i=s?I(t).attr("data-swiper-slide-index"):I(t).index();a.lazy.loadInSlide(i)});else if(1<o)for(var c=e;c<e+o;c+=1)l(c)&&a.lazy.loadInSlide(c);else a.lazy.loadInSlide(e);if(r.loadPrevNext)if(1<o||r.loadPrevNextAmount&&1<r.loadPrevNextAmount){for(var p=r.loadPrevNextAmount,u=o,h=Math.min(e+u+Math.max(p,u),n.length),f=Math.max(e-Math.max(u,p),0),v=e+o;v<h;v+=1)l(v)&&a.lazy.loadInSlide(v);for(var g=f;g<e;g+=1)l(g)&&a.lazy.loadInSlide(g)}else{var m=t.children("."+i.slideNextClass);0<m.length&&a.lazy.loadInSlide(d(m));var b=t.children("."+i.slidePrevClass);0<b.length&&a.lazy.loadInSlide(d(b))}}},Y={LinearSpline:function(e,t){var i,a,n,s,r,o=function(e,t){for(a=-1,i=e.length;1<i-a;)e[n=i+a>>1]<=t?a=n:i=n;return i};return this.x=e,this.y=t,this.lastIndex=e.length-1,this.interpolate=function(e){return e?(r=o(this.x,e),s=r-1,(e-this.x[s])*(this.y[r]-this.y[s])/(this.x[r]-this.x[s])+this.y[s]):0},this},getInterpolateFunction:function(e){var t=this;t.controller.spline||(t.controller.spline=t.params.loop?new Y.LinearSpline(t.slidesGrid,e.slidesGrid):new Y.LinearSpline(t.snapGrid,e.snapGrid))},setTranslate:function(e,t){var i,a,n=this,s=n.controller.control;function r(e){var t=n.rtlTranslate?-n.translate:n.translate;"slide"===n.params.controller.by&&(n.controller.getInterpolateFunction(e),a=-n.controller.spline.interpolate(-t)),a&&"container"!==n.params.controller.by||(i=(e.maxTranslate()-e.minTranslate())/(n.maxTranslate()-n.minTranslate()),a=(t-n.minTranslate())*i+e.minTranslate()),n.params.controller.inverse&&(a=e.maxTranslate()-a),e.updateProgress(a),e.setTranslate(a,n),e.updateActiveIndex(),e.updateSlidesClasses()}if(Array.isArray(s))for(var o=0;o<s.length;o+=1)s[o]!==t&&s[o]instanceof S&&r(s[o]);else s instanceof S&&t!==s&&r(s)},setTransition:function(t,e){var i,a=this,n=a.controller.control;function s(e){e.setTransition(t,a),0!==t&&(e.transitionStart(),e.params.autoHeight&&te.nextTick(function(){e.updateAutoHeight()}),e.$wrapperEl.transitionEnd(function(){n&&(e.params.loop&&"slide"===a.params.controller.by&&e.loopFix(),e.transitionEnd())}))}if(Array.isArray(n))for(i=0;i<n.length;i+=1)n[i]!==e&&n[i]instanceof S&&s(n[i]);else n instanceof S&&e!==n&&s(n)}},j={makeElFocusable:function(e){return e.attr("tabIndex","0"),e},addElRole:function(e,t){return e.attr("role",t),e},addElLabel:function(e,t){return e.attr("aria-label",t),e},disableEl:function(e){return e.attr("aria-disabled",!0),e},enableEl:function(e){return e.attr("aria-disabled",!1),e},onEnterKey:function(e){var t=this,i=t.params.a11y;if(13===e.keyCode){var a=I(e.target);t.navigation&&t.navigation.$nextEl&&a.is(t.navigation.$nextEl)&&(t.isEnd&&!t.params.loop||t.slideNext(),t.isEnd?t.a11y.notify(i.lastSlideMessage):t.a11y.notify(i.nextSlideMessage)),t.navigation&&t.navigation.$prevEl&&a.is(t.navigation.$prevEl)&&(t.isBeginning&&!t.params.loop||t.slidePrev(),t.isBeginning?t.a11y.notify(i.firstSlideMessage):t.a11y.notify(i.prevSlideMessage)),t.pagination&&a.is("."+t.params.pagination.bulletClass)&&a[0].click()}},notify:function(e){var t=this.a11y.liveRegion;0!==t.length&&(t.html(""),t.html(e))},updateNavigation:function(){var e=this;if(!e.params.loop){var t=e.navigation,i=t.$nextEl,a=t.$prevEl;a&&0<a.length&&(e.isBeginning?e.a11y.disableEl(a):e.a11y.enableEl(a)),i&&0<i.length&&(e.isEnd?e.a11y.disableEl(i):e.a11y.enableEl(i))}},updatePagination:function(){var a=this,n=a.params.a11y;a.pagination&&a.params.pagination.clickable&&a.pagination.bullets&&a.pagination.bullets.length&&a.pagination.bullets.each(function(e,t){var i=I(t);a.a11y.makeElFocusable(i),a.a11y.addElRole(i,"button"),a.a11y.addElLabel(i,n.paginationBulletMessage.replace(/{{index}}/,i.index()+1))})},init:function(){var e=this;e.$el.append(e.a11y.liveRegion);var t,i,a=e.params.a11y;e.navigation&&e.navigation.$nextEl&&(t=e.navigation.$nextEl),e.navigation&&e.navigation.$prevEl&&(i=e.navigation.$prevEl),t&&(e.a11y.makeElFocusable(t),e.a11y.addElRole(t,"button"),e.a11y.addElLabel(t,a.nextSlideMessage),t.on("keydown",e.a11y.onEnterKey)),i&&(e.a11y.makeElFocusable(i),e.a11y.addElRole(i,"button"),e.a11y.addElLabel(i,a.prevSlideMessage),i.on("keydown",e.a11y.onEnterKey)),e.pagination&&e.params.pagination.clickable&&e.pagination.bullets&&e.pagination.bullets.length&&e.pagination.$el.on("keydown","."+e.params.pagination.bulletClass,e.a11y.onEnterKey)},destroy:function(){var e,t,i=this;i.a11y.liveRegion&&0<i.a11y.liveRegion.length&&i.a11y.liveRegion.remove(),i.navigation&&i.navigation.$nextEl&&(e=i.navigation.$nextEl),i.navigation&&i.navigation.$prevEl&&(t=i.navigation.$prevEl),e&&e.off("keydown",i.a11y.onEnterKey),t&&t.off("keydown",i.a11y.onEnterKey),i.pagination&&i.params.pagination.clickable&&i.pagination.bullets&&i.pagination.bullets.length&&i.pagination.$el.off("keydown","."+i.params.pagination.bulletClass,i.a11y.onEnterKey)}},V={init:function(){var e=this;if(e.params.history){if(!ee.history||!ee.history.pushState)return e.params.history.enabled=!1,void(e.params.hashNavigation.enabled=!0);var t=e.history;t.initialized=!0,t.paths=V.getPathValues(),(t.paths.key||t.paths.value)&&(t.scrollToSlide(0,t.paths.value,e.params.runCallbacksOnInit),e.params.history.replaceState||ee.addEventListener("popstate",e.history.setHistoryPopState))}},destroy:function(){this.params.history.replaceState||ee.removeEventListener("popstate",this.history.setHistoryPopState)},setHistoryPopState:function(){this.history.paths=V.getPathValues(),this.history.scrollToSlide(this.params.speed,this.history.paths.value,!1)},getPathValues:function(){var e=ee.location.pathname.slice(1).split("/").filter(function(e){return""!==e}),t=e.length;return{key:e[t-2],value:e[t-1]}},setHistory:function(e,t){if(this.history.initialized&&this.params.history.enabled){var i=this.slides.eq(t),a=V.slugify(i.attr("data-history"));ee.location.pathname.includes(e)||(a=e+"/"+a);var n=ee.history.state;n&&n.value===a||(this.params.history.replaceState?ee.history.replaceState({value:a},null,a):ee.history.pushState({value:a},null,a))}},slugify:function(e){return e.toString().replace(/\s+/g,"-").replace(/[^\w-]+/g,"").replace(/--+/g,"-").replace(/^-+/,"").replace(/-+$/,"")},scrollToSlide:function(e,t,i){var a=this;if(t)for(var n=0,s=a.slides.length;n<s;n+=1){var r=a.slides.eq(n);if(V.slugify(r.attr("data-history"))===t&&!r.hasClass(a.params.slideDuplicateClass)){var o=r.index();a.slideTo(o,e,i)}}else a.slideTo(0,e,i)}},N={onHashCange:function(){var e=this,t=v.location.hash.replace("#","");if(t!==e.slides.eq(e.activeIndex).attr("data-hash")){var i=e.$wrapperEl.children("."+e.params.slideClass+'[data-hash="'+t+'"]').index();if(void 0===i)return;e.slideTo(i)}},setHash:function(){var e=this;if(e.hashNavigation.initialized&&e.params.hashNavigation.enabled)if(e.params.hashNavigation.replaceState&&ee.history&&ee.history.replaceState)ee.history.replaceState(null,null,"#"+e.slides.eq(e.activeIndex).attr("data-hash")||"");else{var t=e.slides.eq(e.activeIndex),i=t.attr("data-hash")||t.attr("data-history");v.location.hash=i||""}},init:function(){var e=this;if(!(!e.params.hashNavigation.enabled||e.params.history&&e.params.history.enabled)){e.hashNavigation.initialized=!0;var t=v.location.hash.replace("#","");if(t)for(var i=0,a=e.slides.length;i<a;i+=1){var n=e.slides.eq(i);if((n.attr("data-hash")||n.attr("data-history"))===t&&!n.hasClass(e.params.slideDuplicateClass)){var s=n.index();e.slideTo(s,0,e.params.runCallbacksOnInit,!0)}}e.params.hashNavigation.watchState&&I(ee).on("hashchange",e.hashNavigation.onHashCange)}},destroy:function(){this.params.hashNavigation.watchState&&I(ee).off("hashchange",this.hashNavigation.onHashCange)}},G={run:function(){var e=this,t=e.slides.eq(e.activeIndex),i=e.params.autoplay.delay;t.attr("data-swiper-autoplay")&&(i=t.attr("data-swiper-autoplay")||e.params.autoplay.delay),clearTimeout(e.autoplay.timeout),e.autoplay.timeout=te.nextTick(function(){e.params.autoplay.reverseDirection?e.params.loop?(e.loopFix(),e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.isBeginning?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(e.slides.length-1,e.params.speed,!0,!0),e.emit("autoplay")):(e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.params.loop?(e.loopFix(),e.slideNext(e.params.speed,!0,!0),e.emit("autoplay")):e.isEnd?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(0,e.params.speed,!0,!0),e.emit("autoplay")):(e.slideNext(e.params.speed,!0,!0),e.emit("autoplay"))},i)},start:function(){var e=this;return void 0===e.autoplay.timeout&&(!e.autoplay.running&&(e.autoplay.running=!0,e.emit("autoplayStart"),e.autoplay.run(),!0))},stop:function(){var e=this;return!!e.autoplay.running&&(void 0!==e.autoplay.timeout&&(e.autoplay.timeout&&(clearTimeout(e.autoplay.timeout),e.autoplay.timeout=void 0),e.autoplay.running=!1,e.emit("autoplayStop"),!0))},pause:function(e){var t=this;t.autoplay.running&&(t.autoplay.paused||(t.autoplay.timeout&&clearTimeout(t.autoplay.timeout),t.autoplay.paused=!0,0!==e&&t.params.autoplay.waitForTransition?(t.$wrapperEl[0].addEventListener("transitionend",t.autoplay.onTransitionEnd),t.$wrapperEl[0].addEventListener("webkitTransitionEnd",t.autoplay.onTransitionEnd)):(t.autoplay.paused=!1,t.autoplay.run())))}},q={setTranslate:function(){for(var e=this,t=e.slides,i=0;i<t.length;i+=1){var a=e.slides.eq(i),n=-a[0].swiperSlideOffset;e.params.virtualTranslate||(n-=e.translate);var s=0;e.isHorizontal()||(s=n,n=0);var r=e.params.fadeEffect.crossFade?Math.max(1-Math.abs(a[0].progress),0):1+Math.min(Math.max(a[0].progress,-1),0);a.css({opacity:r}).transform("translate3d("+n+"px, "+s+"px, 0px)")}},setTransition:function(e){var i=this,t=i.slides,a=i.$wrapperEl;if(t.transition(e),i.params.virtualTranslate&&0!==e){var n=!1;t.transitionEnd(function(){if(!n&&i&&!i.destroyed){n=!0,i.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)a.trigger(e[t])}})}}},W={setTranslate:function(){var e,t=this,i=t.$el,a=t.$wrapperEl,n=t.slides,s=t.width,r=t.height,o=t.rtlTranslate,l=t.size,d=t.params.cubeEffect,c=t.isHorizontal(),p=t.virtual&&t.params.virtual.enabled,u=0;d.shadow&&(c?(0===(e=a.find(".swiper-cube-shadow")).length&&(e=I('<div class="swiper-cube-shadow"></div>'),a.append(e)),e.css({height:s+"px"})):0===(e=i.find(".swiper-cube-shadow")).length&&(e=I('<div class="swiper-cube-shadow"></div>'),i.append(e)));for(var h=0;h<n.length;h+=1){var f=n.eq(h),v=h;p&&(v=parseInt(f.attr("data-swiper-slide-index"),10));var g=90*v,m=Math.floor(g/360);o&&(g=-g,m=Math.floor(-g/360));var b=Math.max(Math.min(f[0].progress,1),-1),y=0,w=0,x=0;v%4==0?(y=4*-m*l,x=0):(v-1)%4==0?(y=0,x=4*-m*l):(v-2)%4==0?(y=l+4*m*l,x=l):(v-3)%4==0&&(y=-l,x=3*l+4*l*m),o&&(y=-y),c||(w=y,y=0);var S="rotateX("+(c?0:-g)+"deg) rotateY("+(c?g:0)+"deg) translate3d("+y+"px, "+w+"px, "+x+"px)";if(b<=1&&-1<b&&(u=90*v+90*b,o&&(u=90*-v-90*b)),f.transform(S),d.slideShadows){var T=c?f.find(".swiper-slide-shadow-left"):f.find(".swiper-slide-shadow-top"),C=c?f.find(".swiper-slide-shadow-right"):f.find(".swiper-slide-shadow-bottom");0===T.length&&(T=I('<div class="swiper-slide-shadow-'+(c?"left":"top")+'"></div>'),f.append(T)),0===C.length&&(C=I('<div class="swiper-slide-shadow-'+(c?"right":"bottom")+'"></div>'),f.append(C)),T.length&&(T[0].style.opacity=Math.max(-b,0)),C.length&&(C[0].style.opacity=Math.max(b,0))}}if(a.css({"-webkit-transform-origin":"50% 50% -"+l/2+"px","-moz-transform-origin":"50% 50% -"+l/2+"px","-ms-transform-origin":"50% 50% -"+l/2+"px","transform-origin":"50% 50% -"+l/2+"px"}),d.shadow)if(c)e.transform("translate3d(0px, "+(s/2+d.shadowOffset)+"px, "+-s/2+"px) rotateX(90deg) rotateZ(0deg) scale("+d.shadowScale+")");else{var E=Math.abs(u)-90*Math.floor(Math.abs(u)/90),$=1.5-(Math.sin(2*E*Math.PI/360)/2+Math.cos(2*E*Math.PI/360)/2),P=d.shadowScale,M=d.shadowScale/$,k=d.shadowOffset;e.transform("scale3d("+P+", 1, "+M+") translate3d(0px, "+(r/2+k)+"px, "+-r/2/M+"px) rotateX(-90deg)")}var z=ae.isSafari||ae.isUiWebView?-l/2:0;a.transform("translate3d(0px,0,"+z+"px) rotateX("+(t.isHorizontal()?0:u)+"deg) rotateY("+(t.isHorizontal()?-u:0)+"deg)")},setTransition:function(e){var t=this.$el;this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),this.params.cubeEffect.shadow&&!this.isHorizontal()&&t.find(".swiper-cube-shadow").transition(e)}},_={setTranslate:function(){for(var e=this,t=e.slides,i=e.rtlTranslate,a=0;a<t.length;a+=1){var n=t.eq(a),s=n[0].progress;e.params.flipEffect.limitRotation&&(s=Math.max(Math.min(n[0].progress,1),-1));var r=-180*s,o=0,l=-n[0].swiperSlideOffset,d=0;if(e.isHorizontal()?i&&(r=-r):(d=l,o=-r,r=l=0),n[0].style.zIndex=-Math.abs(Math.round(s))+t.length,e.params.flipEffect.slideShadows){var c=e.isHorizontal()?n.find(".swiper-slide-shadow-left"):n.find(".swiper-slide-shadow-top"),p=e.isHorizontal()?n.find(".swiper-slide-shadow-right"):n.find(".swiper-slide-shadow-bottom");0===c.length&&(c=I('<div class="swiper-slide-shadow-'+(e.isHorizontal()?"left":"top")+'"></div>'),n.append(c)),0===p.length&&(p=I('<div class="swiper-slide-shadow-'+(e.isHorizontal()?"right":"bottom")+'"></div>'),n.append(p)),c.length&&(c[0].style.opacity=Math.max(-s,0)),p.length&&(p[0].style.opacity=Math.max(s,0))}n.transform("translate3d("+l+"px, "+d+"px, 0px) rotateX("+o+"deg) rotateY("+r+"deg)")}},setTransition:function(e){var i=this,t=i.slides,a=i.activeIndex,n=i.$wrapperEl;if(t.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),i.params.virtualTranslate&&0!==e){var s=!1;t.eq(a).transitionEnd(function(){if(!s&&i&&!i.destroyed){s=!0,i.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)n.trigger(e[t])}})}}},U={setTranslate:function(){for(var e=this,t=e.width,i=e.height,a=e.slides,n=e.$wrapperEl,s=e.slidesSizesGrid,r=e.params.coverflowEffect,o=e.isHorizontal(),l=e.translate,d=o?t/2-l:i/2-l,c=o?r.rotate:-r.rotate,p=r.depth,u=0,h=a.length;u<h;u+=1){var f=a.eq(u),v=s[u],g=(d-f[0].swiperSlideOffset-v/2)/v*r.modifier,m=o?c*g:0,b=o?0:c*g,y=-p*Math.abs(g),w=o?0:r.stretch*g,x=o?r.stretch*g:0;Math.abs(x)<.001&&(x=0),Math.abs(w)<.001&&(w=0),Math.abs(y)<.001&&(y=0),Math.abs(m)<.001&&(m=0),Math.abs(b)<.001&&(b=0);var S="translate3d("+x+"px,"+w+"px,"+y+"px)  rotateX("+b+"deg) rotateY("+m+"deg)";if(f.transform(S),f[0].style.zIndex=1-Math.abs(Math.round(g)),r.slideShadows){var T=o?f.find(".swiper-slide-shadow-left"):f.find(".swiper-slide-shadow-top"),C=o?f.find(".swiper-slide-shadow-right"):f.find(".swiper-slide-shadow-bottom");0===T.length&&(T=I('<div class="swiper-slide-shadow-'+(o?"left":"top")+'"></div>'),f.append(T)),0===C.length&&(C=I('<div class="swiper-slide-shadow-'+(o?"right":"bottom")+'"></div>'),f.append(C)),T.length&&(T[0].style.opacity=0<g?g:0),C.length&&(C[0].style.opacity=0<-g?-g:0)}}(ie.pointerEvents||ie.prefixedPointerEvents)&&(n[0].style.perspectiveOrigin=d+"px 50%")},setTransition:function(e){this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e)}},K={init:function(){var e=this,t=e.params.thumbs,i=e.constructor;t.swiper instanceof i?(e.thumbs.swiper=t.swiper,te.extend(e.thumbs.swiper.originalParams,{watchSlidesProgress:!0,slideToClickedSlide:!1}),te.extend(e.thumbs.swiper.params,{watchSlidesProgress:!0,slideToClickedSlide:!1})):te.isObject(t.swiper)&&(e.thumbs.swiper=new i(te.extend({},t.swiper,{watchSlidesVisibility:!0,watchSlidesProgress:!0,slideToClickedSlide:!1})),e.thumbs.swiperCreated=!0),e.thumbs.swiper.$el.addClass(e.params.thumbs.thumbsContainerClass),e.thumbs.swiper.on("tap",e.thumbs.onThumbClick)},onThumbClick:function(){var e=this,t=e.thumbs.swiper;if(t){var i=t.clickedIndex,a=t.clickedSlide;if(!(a&&I(a).hasClass(e.params.thumbs.slideThumbActiveClass)||null==i)){var n;if(n=t.params.loop?parseInt(I(t.clickedSlide).attr("data-swiper-slide-index"),10):i,e.params.loop){var s=e.activeIndex;e.slides.eq(s).hasClass(e.params.slideDuplicateClass)&&(e.loopFix(),e._clientLeft=e.$wrapperEl[0].clientLeft,s=e.activeIndex);var r=e.slides.eq(s).prevAll('[data-swiper-slide-index="'+n+'"]').eq(0).index(),o=e.slides.eq(s).nextAll('[data-swiper-slide-index="'+n+'"]').eq(0).index();n=void 0===r?o:void 0===o?r:o-s<s-r?o:r}e.slideTo(n)}}},update:function(e){var t=this,i=t.thumbs.swiper;if(i){var a="auto"===i.params.slidesPerView?i.slidesPerViewDynamic():i.params.slidesPerView;if(t.realIndex!==i.realIndex){var n,s=i.activeIndex;if(i.params.loop){i.slides.eq(s).hasClass(i.params.slideDuplicateClass)&&(i.loopFix(),i._clientLeft=i.$wrapperEl[0].clientLeft,s=i.activeIndex);var r=i.slides.eq(s).prevAll('[data-swiper-slide-index="'+t.realIndex+'"]').eq(0).index(),o=i.slides.eq(s).nextAll('[data-swiper-slide-index="'+t.realIndex+'"]').eq(0).index();n=void 0===r?o:void 0===o?r:o-s==s-r?s:o-s<s-r?o:r}else n=t.realIndex;i.visibleSlidesIndexes&&i.visibleSlidesIndexes.indexOf(n)<0&&(i.params.centeredSlides?n=s<n?n-Math.floor(a/2)+1:n+Math.floor(a/2)-1:s<n&&(n=n-a+1),i.slideTo(n,e?0:void 0))}var l=1,d=t.params.thumbs.slideThumbActiveClass;if(1<t.params.slidesPerView&&!t.params.centeredSlides&&(l=t.params.slidesPerView),i.slides.removeClass(d),i.params.loop||i.params.virtual)for(var c=0;c<l;c+=1)i.$wrapperEl.children('[data-swiper-slide-index="'+(t.realIndex+c)+'"]').addClass(d);else for(var p=0;p<l;p+=1)i.slides.eq(t.realIndex+p).addClass(d)}}},Z=[T,C,E,$,M,z,A,{name:"mousewheel",params:{mousewheel:{enabled:!1,releaseOnEdges:!1,invert:!1,forceToAxis:!1,sensitivity:1,eventsTarged:"container"}},create:function(){var e=this;te.extend(e,{mousewheel:{enabled:!1,enable:D.enable.bind(e),disable:D.disable.bind(e),handle:D.handle.bind(e),handleMouseEnter:D.handleMouseEnter.bind(e),handleMouseLeave:D.handleMouseLeave.bind(e),lastScrollTime:te.now()}})},on:{init:function(){this.params.mousewheel.enabled&&this.mousewheel.enable()},destroy:function(){this.mousewheel.enabled&&this.mousewheel.disable()}}},{name:"navigation",params:{navigation:{nextEl:null,prevEl:null,hideOnClick:!1,disabledClass:"swiper-button-disabled",hiddenClass:"swiper-button-hidden",lockClass:"swiper-button-lock"}},create:function(){var e=this;te.extend(e,{navigation:{init:O.init.bind(e),update:O.update.bind(e),destroy:O.destroy.bind(e),onNextClick:O.onNextClick.bind(e),onPrevClick:O.onPrevClick.bind(e)}})},on:{init:function(){this.navigation.init(),this.navigation.update()},toEdge:function(){this.navigation.update()},fromEdge:function(){this.navigation.update()},destroy:function(){this.navigation.destroy()},click:function(e){var t,i=this,a=i.navigation,n=a.$nextEl,s=a.$prevEl;!i.params.navigation.hideOnClick||I(e.target).is(s)||I(e.target).is(n)||(n?t=n.hasClass(i.params.navigation.hiddenClass):s&&(t=s.hasClass(i.params.navigation.hiddenClass)),!0===t?i.emit("navigationShow",i):i.emit("navigationHide",i),n&&n.toggleClass(i.params.navigation.hiddenClass),s&&s.toggleClass(i.params.navigation.hiddenClass))}}},{name:"pagination",params:{pagination:{el:null,bulletElement:"span",clickable:!1,hideOnClick:!1,renderBullet:null,renderProgressbar:null,renderFraction:null,renderCustom:null,progressbarOpposite:!1,type:"bullets",dynamicBullets:!1,dynamicMainBullets:1,formatFractionCurrent:function(e){return e},formatFractionTotal:function(e){return e},bulletClass:"swiper-pagination-bullet",bulletActiveClass:"swiper-pagination-bullet-active",modifierClass:"swiper-pagination-",currentClass:"swiper-pagination-current",totalClass:"swiper-pagination-total",hiddenClass:"swiper-pagination-hidden",progressbarFillClass:"swiper-pagination-progressbar-fill",progressbarOppositeClass:"swiper-pagination-progressbar-opposite",clickableClass:"swiper-pagination-clickable",lockClass:"swiper-pagination-lock"}},create:function(){var e=this;te.extend(e,{pagination:{init:H.init.bind(e),render:H.render.bind(e),update:H.update.bind(e),destroy:H.destroy.bind(e),dynamicBulletIndex:0}})},on:{init:function(){this.pagination.init(),this.pagination.render(),this.pagination.update()},activeIndexChange:function(){this.params.loop?this.pagination.update():void 0===this.snapIndex&&this.pagination.update()},snapIndexChange:function(){this.params.loop||this.pagination.update()},slidesLengthChange:function(){this.params.loop&&(this.pagination.render(),this.pagination.update())},snapGridLengthChange:function(){this.params.loop||(this.pagination.render(),this.pagination.update())},destroy:function(){this.pagination.destroy()},click:function(e){var t=this;t.params.pagination.el&&t.params.pagination.hideOnClick&&0<t.pagination.$el.length&&!I(e.target).hasClass(t.params.pagination.bulletClass)&&(!0===t.pagination.$el.hasClass(t.params.pagination.hiddenClass)?t.emit("paginationShow",t):t.emit("paginationHide",t),t.pagination.$el.toggleClass(t.params.pagination.hiddenClass))}}},{name:"scrollbar",params:{scrollbar:{el:null,dragSize:"auto",hide:!1,draggable:!1,snapOnRelease:!0,lockClass:"swiper-scrollbar-lock",dragClass:"swiper-scrollbar-drag"}},create:function(){var e=this;te.extend(e,{scrollbar:{init:F.init.bind(e),destroy:F.destroy.bind(e),updateSize:F.updateSize.bind(e),setTranslate:F.setTranslate.bind(e),setTransition:F.setTransition.bind(e),enableDraggable:F.enableDraggable.bind(e),disableDraggable:F.disableDraggable.bind(e),setDragPosition:F.setDragPosition.bind(e),getPointerPosition:F.getPointerPosition.bind(e),onDragStart:F.onDragStart.bind(e),onDragMove:F.onDragMove.bind(e),onDragEnd:F.onDragEnd.bind(e),isTouched:!1,timeout:null,dragTimeout:null}})},on:{init:function(){this.scrollbar.init(),this.scrollbar.updateSize(),this.scrollbar.setTranslate()},update:function(){this.scrollbar.updateSize()},resize:function(){this.scrollbar.updateSize()},observerUpdate:function(){this.scrollbar.updateSize()},setTranslate:function(){this.scrollbar.setTranslate()},setTransition:function(e){this.scrollbar.setTransition(e)},destroy:function(){this.scrollbar.destroy()}}},{name:"parallax",params:{parallax:{enabled:!1}},create:function(){te.extend(this,{parallax:{setTransform:B.setTransform.bind(this),setTranslate:B.setTranslate.bind(this),setTransition:B.setTransition.bind(this)}})},on:{beforeInit:function(){this.params.parallax.enabled&&(this.params.watchSlidesProgress=!0,this.originalParams.watchSlidesProgress=!0)},init:function(){this.params.parallax.enabled&&this.parallax.setTranslate()},setTranslate:function(){this.params.parallax.enabled&&this.parallax.setTranslate()},setTransition:function(e){this.params.parallax.enabled&&this.parallax.setTransition(e)}}},{name:"zoom",params:{zoom:{enabled:!1,maxRatio:3,minRatio:1,toggle:!0,containerClass:"swiper-zoom-container",zoomedSlideClass:"swiper-slide-zoomed"}},create:function(){var a=this,t={enabled:!1,scale:1,currentScale:1,isScaling:!1,gesture:{$slideEl:void 0,slideWidth:void 0,slideHeight:void 0,$imageEl:void 0,$imageWrapEl:void 0,maxRatio:3},image:{isTouched:void 0,isMoved:void 0,currentX:void 0,currentY:void 0,minX:void 0,minY:void 0,maxX:void 0,maxY:void 0,width:void 0,height:void 0,startX:void 0,startY:void 0,touchesStart:{},touchesCurrent:{}},velocity:{x:void 0,y:void 0,prevPositionX:void 0,prevPositionY:void 0,prevTime:void 0}};"onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out".split(" ").forEach(function(e){t[e]=R[e].bind(a)}),te.extend(a,{zoom:t});var n=1;Object.defineProperty(a.zoom,"scale",{get:function(){return n},set:function(e){if(n!==e){var t=a.zoom.gesture.$imageEl?a.zoom.gesture.$imageEl[0]:void 0,i=a.zoom.gesture.$slideEl?a.zoom.gesture.$slideEl[0]:void 0;a.emit("zoomChange",e,t,i)}n=e}})},on:{init:function(){this.params.zoom.enabled&&this.zoom.enable()},destroy:function(){this.zoom.disable()},touchStart:function(e){this.zoom.enabled&&this.zoom.onTouchStart(e)},touchEnd:function(e){this.zoom.enabled&&this.zoom.onTouchEnd(e)},doubleTap:function(e){this.params.zoom.enabled&&this.zoom.enabled&&this.params.zoom.toggle&&this.zoom.toggle(e)},transitionEnd:function(){this.zoom.enabled&&this.params.zoom.enabled&&this.zoom.onTransitionEnd()}}},{name:"lazy",params:{lazy:{enabled:!1,loadPrevNext:!1,loadPrevNextAmount:1,loadOnTransitionStart:!1,elementClass:"swiper-lazy",loadingClass:"swiper-lazy-loading",loadedClass:"swiper-lazy-loaded",preloaderClass:"swiper-lazy-preloader"}},create:function(){te.extend(this,{lazy:{initialImageLoaded:!1,load:X.load.bind(this),loadInSlide:X.loadInSlide.bind(this)}})},on:{beforeInit:function(){this.params.lazy.enabled&&this.params.preloadImages&&(this.params.preloadImages=!1)},init:function(){this.params.lazy.enabled&&!this.params.loop&&0===this.params.initialSlide&&this.lazy.load()},scroll:function(){this.params.freeMode&&!this.params.freeModeSticky&&this.lazy.load()},resize:function(){this.params.lazy.enabled&&this.lazy.load()},scrollbarDragMove:function(){this.params.lazy.enabled&&this.lazy.load()},transitionStart:function(){var e=this;e.params.lazy.enabled&&(!e.params.lazy.loadOnTransitionStart&&(e.params.lazy.loadOnTransitionStart||e.lazy.initialImageLoaded)||e.lazy.load())},transitionEnd:function(){this.params.lazy.enabled&&!this.params.lazy.loadOnTransitionStart&&this.lazy.load()}}},{name:"controller",params:{controller:{control:void 0,inverse:!1,by:"slide"}},create:function(){var e=this;te.extend(e,{controller:{control:e.params.controller.control,getInterpolateFunction:Y.getInterpolateFunction.bind(e),setTranslate:Y.setTranslate.bind(e),setTransition:Y.setTransition.bind(e)}})},on:{update:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},resize:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},observerUpdate:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},setTranslate:function(e,t){this.controller.control&&this.controller.setTranslate(e,t)},setTransition:function(e,t){this.controller.control&&this.controller.setTransition(e,t)}}},{name:"a11y",params:{a11y:{enabled:!0,notificationClass:"swiper-notification",prevSlideMessage:"Previous slide",nextSlideMessage:"Next slide",firstSlideMessage:"This is the first slide",lastSlideMessage:"This is the last slide",paginationBulletMessage:"Go to slide {{index}}"}},create:function(){var t=this;te.extend(t,{a11y:{liveRegion:I('<span class="'+t.params.a11y.notificationClass+'" aria-live="assertive" aria-atomic="true"></span>')}}),Object.keys(j).forEach(function(e){t.a11y[e]=j[e].bind(t)})},on:{init:function(){this.params.a11y.enabled&&(this.a11y.init(),this.a11y.updateNavigation())},toEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},fromEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},paginationUpdate:function(){this.params.a11y.enabled&&this.a11y.updatePagination()},destroy:function(){this.params.a11y.enabled&&this.a11y.destroy()}}},{name:"history",params:{history:{enabled:!1,replaceState:!1,key:"slides"}},create:function(){var e=this;te.extend(e,{history:{init:V.init.bind(e),setHistory:V.setHistory.bind(e),setHistoryPopState:V.setHistoryPopState.bind(e),scrollToSlide:V.scrollToSlide.bind(e),destroy:V.destroy.bind(e)}})},on:{init:function(){this.params.history.enabled&&this.history.init()},destroy:function(){this.params.history.enabled&&this.history.destroy()},transitionEnd:function(){this.history.initialized&&this.history.setHistory(this.params.history.key,this.activeIndex)}}},{name:"hash-navigation",params:{hashNavigation:{enabled:!1,replaceState:!1,watchState:!1}},create:function(){var e=this;te.extend(e,{hashNavigation:{initialized:!1,init:N.init.bind(e),destroy:N.destroy.bind(e),setHash:N.setHash.bind(e),onHashCange:N.onHashCange.bind(e)}})},on:{init:function(){this.params.hashNavigation.enabled&&this.hashNavigation.init()},destroy:function(){this.params.hashNavigation.enabled&&this.hashNavigation.destroy()},transitionEnd:function(){this.hashNavigation.initialized&&this.hashNavigation.setHash()}}},{name:"autoplay",params:{autoplay:{enabled:!1,delay:3e3,waitForTransition:!0,disableOnInteraction:!0,stopOnLastSlide:!1,reverseDirection:!1}},create:function(){var t=this;te.extend(t,{autoplay:{running:!1,paused:!1,run:G.run.bind(t),start:G.start.bind(t),stop:G.stop.bind(t),pause:G.pause.bind(t),onTransitionEnd:function(e){t&&!t.destroyed&&t.$wrapperEl&&e.target===this&&(t.$wrapperEl[0].removeEventListener("transitionend",t.autoplay.onTransitionEnd),t.$wrapperEl[0].removeEventListener("webkitTransitionEnd",t.autoplay.onTransitionEnd),t.autoplay.paused=!1,t.autoplay.running?t.autoplay.run():t.autoplay.stop())}}})},on:{init:function(){this.params.autoplay.enabled&&this.autoplay.start()},beforeTransitionStart:function(e,t){this.autoplay.running&&(t||!this.params.autoplay.disableOnInteraction?this.autoplay.pause(e):this.autoplay.stop())},sliderFirstMove:function(){this.autoplay.running&&(this.params.autoplay.disableOnInteraction?this.autoplay.stop():this.autoplay.pause())},destroy:function(){this.autoplay.running&&this.autoplay.stop()}}},{name:"effect-fade",params:{fadeEffect:{crossFade:!1}},create:function(){te.extend(this,{fadeEffect:{setTranslate:q.setTranslate.bind(this),setTransition:q.setTransition.bind(this)}})},on:{beforeInit:function(){var e=this;if("fade"===e.params.effect){e.classNames.push(e.params.containerModifierClass+"fade");var t={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};te.extend(e.params,t),te.extend(e.originalParams,t)}},setTranslate:function(){"fade"===this.params.effect&&this.fadeEffect.setTranslate()},setTransition:function(e){"fade"===this.params.effect&&this.fadeEffect.setTransition(e)}}},{name:"effect-cube",params:{cubeEffect:{slideShadows:!0,shadow:!0,shadowOffset:20,shadowScale:.94}},create:function(){te.extend(this,{cubeEffect:{setTranslate:W.setTranslate.bind(this),setTransition:W.setTransition.bind(this)}})},on:{beforeInit:function(){var e=this;if("cube"===e.params.effect){e.classNames.push(e.params.containerModifierClass+"cube"),e.classNames.push(e.params.containerModifierClass+"3d");var t={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,resistanceRatio:0,spaceBetween:0,centeredSlides:!1,virtualTranslate:!0};te.extend(e.params,t),te.extend(e.originalParams,t)}},setTranslate:function(){"cube"===this.params.effect&&this.cubeEffect.setTranslate()},setTransition:function(e){"cube"===this.params.effect&&this.cubeEffect.setTransition(e)}}},{name:"effect-flip",params:{flipEffect:{slideShadows:!0,limitRotation:!0}},create:function(){te.extend(this,{flipEffect:{setTranslate:_.setTranslate.bind(this),setTransition:_.setTransition.bind(this)}})},on:{beforeInit:function(){var e=this;if("flip"===e.params.effect){e.classNames.push(e.params.containerModifierClass+"flip"),e.classNames.push(e.params.containerModifierClass+"3d");var t={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};te.extend(e.params,t),te.extend(e.originalParams,t)}},setTranslate:function(){"flip"===this.params.effect&&this.flipEffect.setTranslate()},setTransition:function(e){"flip"===this.params.effect&&this.flipEffect.setTransition(e)}}},{name:"effect-coverflow",params:{coverflowEffect:{rotate:50,stretch:0,depth:100,modifier:1,slideShadows:!0}},create:function(){te.extend(this,{coverflowEffect:{setTranslate:U.setTranslate.bind(this),setTransition:U.setTransition.bind(this)}})},on:{beforeInit:function(){var e=this;"coverflow"===e.params.effect&&(e.classNames.push(e.params.containerModifierClass+"coverflow"),e.classNames.push(e.params.containerModifierClass+"3d"),e.params.watchSlidesProgress=!0,e.originalParams.watchSlidesProgress=!0)},setTranslate:function(){"coverflow"===this.params.effect&&this.coverflowEffect.setTranslate()},setTransition:function(e){"coverflow"===this.params.effect&&this.coverflowEffect.setTransition(e)}}},{name:"thumbs",params:{thumbs:{swiper:null,slideThumbActiveClass:"swiper-slide-thumb-active",thumbsContainerClass:"swiper-container-thumbs"}},create:function(){te.extend(this,{thumbs:{swiper:null,init:K.init.bind(this),update:K.update.bind(this),onThumbClick:K.onThumbClick.bind(this)}})},on:{beforeInit:function(){var e=this.params.thumbs;e&&e.swiper&&(this.thumbs.init(),this.thumbs.update(!0))},slideChange:function(){this.thumbs.swiper&&this.thumbs.update()},update:function(){this.thumbs.swiper&&this.thumbs.update()},resize:function(){this.thumbs.swiper&&this.thumbs.update()},observerUpdate:function(){this.thumbs.swiper&&this.thumbs.update()},setTransition:function(e){var t=this.thumbs.swiper;t&&t.setTransition(e)},beforeDestroy:function(){var e=this.thumbs.swiper;e&&this.thumbs.swiperCreated&&e&&e.destroy()}}}];return void 0===S.use&&(S.use=S.Class.use,S.installModule=S.Class.installModule),S.use(Z),S});var $jscomp=$jscomp||{};$jscomp.scope={},$jscomp.findInternal=function(e,t,i){e instanceof String&&(e=String(e));for(var a=e.length,n=0;n<a;n++){var s=e[n];if(t.call(i,s,n,e))return{i:n,v:s}}return{i:-1,v:void 0}},$jscomp.ASSUME_ES5=!1,$jscomp.ASSUME_NO_NATIVE_MAP=!1,$jscomp.ASSUME_NO_NATIVE_SET=!1,$jscomp.SIMPLE_FROUND_POLYFILL=!1,$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,i){e!=Array.prototype&&e!=Object.prototype&&(e[t]=i.value)},$jscomp.getGlobal=function(e){return"undefined"!=typeof window&&window===e?e:"undefined"!=typeof global&&null!=global?global:e},$jscomp.global=$jscomp.getGlobal(this),$jscomp.polyfill=function(e,t,i,a){if(t){for(i=$jscomp.global,e=e.split("."),a=0;a<e.length-1;a++){var n=e[a];n in i||(i[n]={}),i=i[n]}(t=t(a=i[e=e[e.length-1]]))!=a&&null!=t&&$jscomp.defineProperty(i,e,{configurable:!0,writable:!0,value:t})}},$jscomp.polyfill("Array.prototype.find",function(e){return e||function(e,t){return $jscomp.findInternal(this,e,t).v}},"es6","es3"),function(e,t,i){"function"==typeof define&&define.amd?define(["jquery"],e):"object"==typeof exports&&"undefined"==typeof Meteor?module.exports=e(require("jquery")):e(t||i)}(function(r){function o(d,b,y){var w={invalid:[],getCaret:function(){try{var e=0,t=d.get(0),i=document.selection,a=t.selectionStart;if(i&&-1===navigator.appVersion.indexOf("MSIE 10")){var n=i.createRange();n.moveStart("character",-w.val().length),e=n.text.length}else!a&&"0"!==a||(e=a);return e}catch(e){}},setCaret:function(e){try{if(d.is(":focus")){var t=d.get(0);if(t.setSelectionRange)t.setSelectionRange(e,e);else{var i=t.createTextRange();i.collapse(!0),i.moveEnd("character",e),i.moveStart("character",e),i.select()}}}catch(e){}},events:function(){d.on("keydown.mask",function(e){d.data("mask-keycode",e.keyCode||e.which),d.data("mask-previus-value",d.val()),d.data("mask-previus-caret-pos",w.getCaret()),w.maskDigitPosMapOld=w.maskDigitPosMap}).on(r.jMaskGlobals.useInput?"input.mask":"keyup.mask",w.behaviour).on("paste.mask drop.mask",function(){setTimeout(function(){d.keydown().keyup()},100)}).on("change.mask",function(){d.data("changed",!0)}).on("blur.mask",function(){s===w.val()||d.data("changed")||d.trigger("change"),d.data("changed",!1)}).on("blur.mask",function(){s=w.val()}).on("focus.mask",function(e){!0===y.selectOnFocus&&r(e.target).select()}).on("focusout.mask",function(){y.clearIfNotMatch&&!a.test(w.val())&&w.val("")})},getRegexMask:function(){for(var e,t,i,a,n=[],s=0;s<b.length;s++)(e=x.translation[b.charAt(s)])?(t=e.pattern.toString().replace(/.{1}$|^.{1}/g,""),i=e.optional,(e=e.recursive)?(n.push(b.charAt(s)),a={digit:b.charAt(s),pattern:t}):n.push(i||e?t+"?":t)):n.push(b.charAt(s).replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&"));return n=n.join(""),a&&(n=n.replace(new RegExp("("+a.digit+"(.*"+a.digit+")?)"),"($1)?").replace(new RegExp(a.digit,"g"),a.pattern)),new RegExp(n)},destroyEvents:function(){d.off("input keydown keyup paste drop blur focusout ".split(" ").join(".mask "))},val:function(e){var t=d.is("input")?"val":"text";return t=0<arguments.length?(d[t]()!==e&&d[t](e),d):d[t]()},calculateCaretPosition:function(e){var t=w.getMasked(),i=w.getCaret();if(e!==t){var a=d.data("mask-previus-caret-pos")||0;t=t.length;var n,s=e.length,r=e=0,o=0,l=0;for(n=i;n<t&&w.maskDigitPosMap[n];n++)r++;for(n=i-1;0<=n&&w.maskDigitPosMap[n];n--)e++;for(n=i-1;0<=n;n--)w.maskDigitPosMap[n]&&o++;for(n=a-1;0<=n;n--)w.maskDigitPosMapOld[n]&&l++;s<i?i=10*t:i<=a&&a!==s?w.maskDigitPosMapOld[i]||(i=(a=i)-(l-o)-e,w.maskDigitPosMap[i]&&(i=a)):a<i&&(i=i+(o-l)+r)}return i},behaviour:function(e){e=e||window.event,w.invalid=[];var t=d.data("mask-keycode");if(-1===r.inArray(t,x.byPassKeys)){t=w.getMasked();var i=w.getCaret(),a=d.data("mask-previus-value")||"";return setTimeout(function(){w.setCaret(w.calculateCaretPosition(a))},r.jMaskGlobals.keyStrokeCompensation),w.val(t),w.setCaret(i),w.callbacks(e)}},getMasked:function(e,t){var i,a=[],n=void 0===t?w.val():t+"",s=0,r=b.length,o=0,l=n.length,d=1,c="push",p=-1,u=0;if(t=[],y.reverse){c="unshift",d=-1;var h=0;s=r-1,o=l-1;var f=function(){return-1<s&&-1<o}}else h=r-1,f=function(){return s<r&&o<l};for(;f();){var v=b.charAt(s),g=n.charAt(o),m=x.translation[v];m?(g.match(m.pattern)?(a[c](g),m.recursive&&(-1===p?p=s:s===h&&s!==p&&(s=p-d),h===p&&(s-=d)),s+=d):g===i?(u--,i=void 0):m.optional?(s+=d,o-=d):m.fallback?(a[c](m.fallback),s+=d,o-=d):w.invalid.push({p:o,v:g,e:m.pattern}),o+=d):(e||a[c](v),g===v?(t.push(o),o+=d):(i=v,t.push(o+u),u++),s+=d)}return e=b.charAt(h),r!==l+1||x.translation[e]||a.push(e),a=a.join(""),w.mapMaskdigitPositions(a,t,l),a},mapMaskdigitPositions:function(e,t,i){for(e=y.reverse?e.length-i:0,w.maskDigitPosMap={},i=0;i<t.length;i++)w.maskDigitPosMap[t[i]+e]=1},callbacks:function(e){function t(e,t,i){"function"==typeof y[e]&&t&&y[e].apply(this,i)}var i=w.val(),a=i!==s,n=[i,e,d,y];t("onChange",!0==a,n),t("onKeyPress",!0==a,n),t("onComplete",i.length===b.length,n),t("onInvalid",0<w.invalid.length,[i,e,d,w.invalid,y])}};d=r(d);var a,x=this,s=w.val();b="function"==typeof b?b(w.val(),void 0,d,y):b,x.mask=b,x.options=y,x.remove=function(){var e=w.getCaret();return x.options.placeholder&&d.removeAttr("placeholder"),d.data("mask-maxlength")&&d.removeAttr("maxlength"),w.destroyEvents(),w.val(x.getCleanVal()),w.setCaret(e),d},x.getCleanVal=function(){return w.getMasked(!0)},x.getMaskedVal=function(e){return w.getMasked(!1,e)},x.init=function(e){if(e=e||!1,y=y||{},x.clearIfNotMatch=r.jMaskGlobals.clearIfNotMatch,x.byPassKeys=r.jMaskGlobals.byPassKeys,x.translation=r.extend({},r.jMaskGlobals.translation,y.translation),x=r.extend(!0,{},x,y),a=w.getRegexMask(),e)w.events(),w.val(w.getMasked());else{y.placeholder&&d.attr("placeholder",y.placeholder),d.data("mask")&&d.attr("autocomplete","off");for(var t=!(e=0);e<b.length;e++){var i=x.translation[b.charAt(e)];if(i&&i.recursive){t=!1;break}}t&&d.attr("maxlength",b.length).data("mask-maxlength",!0),w.destroyEvents(),w.events(),e=w.getCaret(),w.val(w.getMasked()),w.setCaret(e)}},x.init(!d.is("input"))}r.maskWatchers={};function t(){var e=r(this),t={},i=e.attr("data-mask");if(e.attr("data-mask-reverse")&&(t.reverse=!0),e.attr("data-mask-clearifnotmatch")&&(t.clearIfNotMatch=!0),"true"===e.attr("data-mask-selectonfocus")&&(t.selectOnFocus=!0),l(e,i,t))return e.data("mask",new o(this,i,t))}var l=function(e,t,i){i=i||{};var a=r(e).data("mask"),n=JSON.stringify;e=r(e).val()||r(e).text();try{return"function"==typeof t&&(t=t(e)),"object"!=typeof a||n(a.options)!==n(i)||a.mask!==t}catch(e){}},e=function(e){var t=document.createElement("div"),i=(e="on"+e)in t;return i||(t.setAttribute(e,"return;"),i="function"==typeof t[e]),i};r.fn.mask=function(e,t){t=t||{};var i=this.selector,a=r.jMaskGlobals,n=a.watchInterval;a=t.watchInputs||a.watchInputs;function s(){if(l(this,e,t))return r(this).data("mask",new o(this,e,t))}return r(this).each(s),i&&""!==i&&a&&(clearInterval(r.maskWatchers[i]),r.maskWatchers[i]=setInterval(function(){r(document).find(i).each(s)},n)),this},r.fn.masked=function(e){return this.data("mask").getMaskedVal(e)},r.fn.unmask=function(){return clearInterval(r.maskWatchers[this.selector]),delete r.maskWatchers[this.selector],this.each(function(){var e=r(this).data("mask");e&&e.remove().removeData("mask")})},r.fn.cleanVal=function(){return this.data("mask").getCleanVal()},r.applyDataMask=function(e){((e=e||r.jMaskGlobals.maskElements)instanceof r?e:r(e)).filter(r.jMaskGlobals.dataMaskAttr).each(t)},e={maskElements:"input,td,span,div",dataMaskAttr:"*[data-mask]",dataMask:!0,watchInterval:300,watchInputs:!0,keyStrokeCompensation:10,useInput:!/Chrome\/[2-4][0-9]|SamsungBrowser/.test(window.navigator.userAgent)&&e("input"),watchDataMask:!1,byPassKeys:[9,16,17,18,36,37,38,39,40,91],translation:{0:{pattern:/\d/},9:{pattern:/\d/,optional:!0},"#":{pattern:/\d/,recursive:!0},A:{pattern:/[a-zA-Z0-9]/},S:{pattern:/[a-zA-Z]/}}},r.jMaskGlobals=r.jMaskGlobals||{},(e=r.jMaskGlobals=r.extend(!0,{},e,r.jMaskGlobals)).dataMask&&r.applyDataMask(),setInterval(function(){r.jMaskGlobals.watchDataMask&&r.applyDataMask()},e.watchInterval)},window.jQuery,window.Zepto),function(l,d,v,g){"use strict";function i(e,t){var i,a,n,s=[],r=0;e&&e.isDefaultPrevented()||(e.preventDefault(),t=t||{},e&&e.data&&(t=p(e.data.options,t)),i=t.$target||v(e.currentTarget).trigger("blur"),(n=v.fancybox.getInstance())&&n.$trigger&&n.$trigger.is(i)||(s=t.selector?v(t.selector):(a=i.attr("data-fancybox")||"")?(s=e.data?e.data.items:[]).length?s.filter('[data-fancybox="'+a+'"]'):v('[data-fancybox="'+a+'"]'):[i],(r=v(s).index(i))<0&&(r=0),(n=v.fancybox.open(s,t,r)).$trigger=i))}if(l.console=l.console||{info:function(e){}},v){if(v.fn.fancybox)return console.info("fancyBox already initialized");var e={closeExisting:!1,loop:!1,gutter:50,keyboard:!0,preventCaptionOverlap:!0,arrows:!0,infobar:!0,smallBtn:"auto",toolbar:"auto",buttons:["zoom","slideShow","thumbs","close"],idleTime:3,protect:!1,modal:!1,image:{preload:!1},ajax:{settings:{data:{fancybox:!0}}},iframe:{tpl:'<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" allowfullscreen allow="autoplay; fullscreen" src=""></iframe>',preload:!0,css:{},attr:{scrolling:"auto"}},video:{tpl:'<video class="fancybox-video" controls controlsList="nodownload" poster="{{poster}}"><source src="{{src}}" type="{{format}}" />Sorry, your browser doesn\'t support embedded videos, <a href="{{src}}">download</a> and watch with your favorite video player!</video>',format:"",autoStart:!0},defaultType:"image",animationEffect:"zoom",animationDuration:366,zoomOpacity:"auto",transitionEffect:"fade",transitionDuration:366,slideClass:"",baseClass:"",baseTpl:'<div class="fancybox-container" role="dialog" tabindex="-1"><div class="fancybox-bg"></div><div class="fancybox-inner"><div class="fancybox-infobar"><span data-fancybox-index></span>&nbsp;/&nbsp;<span data-fancybox-count></span></div><div class="fancybox-toolbar">{{buttons}}</div><div class="fancybox-navigation">{{arrows}}</div><div class="fancybox-stage"></div><div class="fancybox-caption"></div></div></div>',spinnerTpl:'<div class="fancybox-loading"></div>',errorTpl:'<div class="fancybox-error"><p>{{ERROR}}</p></div>',btnTpl:{download:'<a download data-fancybox-download class="fancybox-button fancybox-button--download" title="{{DOWNLOAD}}" href="javascript:;"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18.62 17.09V19H5.38v-1.91zm-2.97-6.96L17 11.45l-5 4.87-5-4.87 1.36-1.32 2.68 2.64V5h1.92v7.77z"/></svg></a>',zoom:'<button data-fancybox-zoom class="fancybox-button fancybox-button--zoom" title="{{ZOOM}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18.7 17.3l-3-3a5.9 5.9 0 0 0-.6-7.6 5.9 5.9 0 0 0-8.4 0 5.9 5.9 0 0 0 0 8.4 5.9 5.9 0 0 0 7.7.7l3 3a1 1 0 0 0 1.3 0c.4-.5.4-1 0-1.5zM8.1 13.8a4 4 0 0 1 0-5.7 4 4 0 0 1 5.7 0 4 4 0 0 1 0 5.7 4 4 0 0 1-5.7 0z"/></svg></button>',close:'<button data-fancybox-close class="fancybox-button fancybox-button--close" title="{{CLOSE}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 10.6L6.6 5.2 5.2 6.6l5.4 5.4-5.4 5.4 1.4 1.4 5.4-5.4 5.4 5.4 1.4-1.4-5.4-5.4 5.4-5.4-1.4-1.4-5.4 5.4z"/></svg></button>',arrowLeft:'<button data-fancybox-prev class="fancybox-button fancybox-button--arrow_left" title="{{PREV}}"><div><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M11.28 15.7l-1.34 1.37L5 12l4.94-5.07 1.34 1.38-2.68 2.72H19v1.94H8.6z"/></svg></div></button>',arrowRight:'<button data-fancybox-next class="fancybox-button fancybox-button--arrow_right" title="{{NEXT}}"><div><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M15.4 12.97l-2.68 2.72 1.34 1.38L19 12l-4.94-5.07-1.34 1.38 2.68 2.72H5v1.94z"/></svg></div></button>',smallBtn:'<button type="button" data-fancybox-close class="fancybox-button fancybox-close-small" title="{{CLOSE}}"><svg xmlns="http://www.w3.org/2000/svg" version="1" viewBox="0 0 24 24"><path d="M13 12l5-5-1-1-5 5-5-5-1 1 5 5-5 5 1 1 5-5 5 5 1-1z"/></svg></button>'},parentEl:"body",hideScrollbar:!0,autoFocus:!0,backFocus:!0,trapFocus:!0,fullScreen:{autoStart:!1},touch:{vertical:!0,momentum:!0},hash:null,media:{},slideShow:{autoStart:!1,speed:3e3},thumbs:{autoStart:!1,hideOnClose:!0,parentEl:".fancybox-container",axis:"y"},wheel:"auto",onInit:v.noop,beforeLoad:v.noop,afterLoad:v.noop,beforeShow:v.noop,afterShow:v.noop,beforeClose:v.noop,afterClose:v.noop,onActivate:v.noop,onDeactivate:v.noop,clickContent:function(e,t){return"image"===e.type&&"zoom"},clickSlide:"close",clickOutside:"close",dblclickContent:!1,dblclickSlide:!1,dblclickOutside:!1,mobile:{preventCaptionOverlap:!1,idleTime:!1,clickContent:function(e,t){return"image"===e.type&&"toggleControls"},clickSlide:function(e,t){return"image"===e.type?"toggleControls":"close"},dblclickContent:function(e,t){return"image"===e.type&&"zoom"},dblclickSlide:function(e,t){return"image"===e.type&&"zoom"}},lang:"en",i18n:{en:{CLOSE:"Close",NEXT:"Next",PREV:"Previous",ERROR:"The requested content cannot be loaded. <br/> Please try again later.",PLAY_START:"Start slideshow",PLAY_STOP:"Pause slideshow",FULL_SCREEN:"Full screen",THUMBS:"Thumbnails",DOWNLOAD:"Download",SHARE:"Share",ZOOM:"Zoom"},de:{CLOSE:"Schliessen",NEXT:"Weiter",PREV:"Zurück",ERROR:"Die angeforderten Daten konnten nicht geladen werden. <br/> Bitte versuchen Sie es später nochmal.",PLAY_START:"Diaschau starten",PLAY_STOP:"Diaschau beenden",FULL_SCREEN:"Vollbild",THUMBS:"Vorschaubilder",DOWNLOAD:"Herunterladen",SHARE:"Teilen",ZOOM:"Maßstab"}}},n=v(l),r=v(d),s=0,u=l.requestAnimationFrame||l.webkitRequestAnimationFrame||l.mozRequestAnimationFrame||l.oRequestAnimationFrame||function(e){return l.setTimeout(e,1e3/60)},t=l.cancelAnimationFrame||l.webkitCancelAnimationFrame||l.mozCancelAnimationFrame||l.oCancelAnimationFrame||function(e){l.clearTimeout(e)},c=function(){var e,t=d.createElement("fakeelement"),i={transition:"transitionend",OTransition:"oTransitionEnd",MozTransition:"transitionend",WebkitTransition:"webkitTransitionEnd"};for(e in i)if(t.style[e]!==g)return i[e];return"transitionend"}(),h=function(e){return e&&e.length&&e[0].offsetHeight},p=function(e,t){var i=v.extend(!0,{},e,t);return v.each(t,function(e,t){v.isArray(t)&&(i[e]=t)}),i},a=function(e,t,i){var a=this;a.opts=p({index:i},v.fancybox.defaults),v.isPlainObject(t)&&(a.opts=p(a.opts,t)),v.fancybox.isMobile&&(a.opts=p(a.opts,a.opts.mobile)),a.id=a.opts.id||++s,a.currIndex=parseInt(a.opts.index,10)||0,a.prevIndex=null,a.prevPos=null,a.currPos=0,a.firstRun=!0,a.group=[],a.slides={},a.addContent(e),a.group.length&&a.init()};v.extend(a.prototype,{init:function(){var t,i,a=this,n=a.group[a.currIndex].opts;n.closeExisting&&v.fancybox.close(!0),v("body").addClass("fancybox-active"),!v.fancybox.getInstance()&&!1!==n.hideScrollbar&&!v.fancybox.isMobile&&d.body.scrollHeight>l.innerHeight&&(v("head").append('<style id="fancybox-style-noscroll" type="text/css">.compensate-for-scrollbar{margin-right:'+(l.innerWidth-d.documentElement.clientWidth)+"px;}</style>"),v("body").addClass("compensate-for-scrollbar")),i="",v.each(n.buttons,function(e,t){i+=n.btnTpl[t]||""}),t=v(a.translate(a,n.baseTpl.replace("{{buttons}}",i).replace("{{arrows}}",n.btnTpl.arrowLeft+n.btnTpl.arrowRight))).attr("id","fancybox-container-"+a.id).addClass(n.baseClass).data("FancyBox",a).appendTo(n.parentEl),a.$refs={container:t},["bg","inner","infobar","toolbar","stage","caption","navigation"].forEach(function(e){a.$refs[e]=t.find(".fancybox-"+e)}),a.trigger("onInit"),a.activate(),a.jumpTo(a.currIndex)},translate:function(e,t){var a=e.opts.i18n[e.opts.lang]||e.opts.i18n.en;return t.replace(/\{\{(\w+)\}\}/g,function(e,t){var i=a[t];return i===g?e:i})},addContent:function(e){var t,d=this,i=v.makeArray(e);v.each(i,function(e,t){var i,a,n,s,r,o={},l={};v.isPlainObject(t)?l=(o=t).opts||t:"object"===v.type(t)&&v(t).length?(l=(i=v(t)).data()||{},(l=v.extend(!0,{},l,l.options)).$orig=i,o.src=d.opts.src||l.src||i.attr("href"),o.type||o.src||(o.type="inline",o.src=t)):o={type:"html",src:t+""},o.opts=v.extend(!0,{},d.opts,l),v.isArray(l.buttons)&&(o.opts.buttons=l.buttons),v.fancybox.isMobile&&o.opts.mobile&&(o.opts=p(o.opts,o.opts.mobile)),a=o.type||o.opts.type,s=o.src||"",!a&&s&&((n=s.match(/\.(mp4|mov|ogv|webm)((\?|#).*)?$/i))?(a="video",o.opts.video.format||(o.opts.video.format="video/"+("ogv"===n[1]?"ogg":n[1]))):s.match(/(^data:image\/[a-z0-9+\/=]*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\?|#).*)?$)/i)?a="image":s.match(/\.(pdf)((\?|#).*)?$/i)?(a="iframe",o=v.extend(!0,o,{contentType:"pdf",opts:{iframe:{preload:!1}}})):"#"===s.charAt(0)&&(a="inline")),a?o.type=a:d.trigger("objectNeedsType",o),o.contentType||(o.contentType=-1<v.inArray(o.type,["html","inline","ajax"])?"html":o.type),o.index=d.group.length,"auto"==o.opts.smallBtn&&(o.opts.smallBtn=-1<v.inArray(o.type,["html","inline","ajax"])),"auto"===o.opts.toolbar&&(o.opts.toolbar=!o.opts.smallBtn),o.$thumb=o.opts.$thumb||null,o.opts.$trigger&&o.index===d.opts.index&&(o.$thumb=o.opts.$trigger.find("img:first"),o.$thumb.length&&(o.opts.$orig=o.opts.$trigger)),o.$thumb&&o.$thumb.length||!o.opts.$orig||(o.$thumb=o.opts.$orig.find("img:first")),o.$thumb&&!o.$thumb.length&&(o.$thumb=null),o.thumb=o.opts.thumb||(o.$thumb?o.$thumb[0].src:null),"function"===v.type(o.opts.caption)&&(o.opts.caption=o.opts.caption.apply(t,[d,o])),"function"===v.type(d.opts.caption)&&(o.opts.caption=d.opts.caption.apply(t,[d,o])),o.opts.caption instanceof v||(o.opts.caption=o.opts.caption===g?"":o.opts.caption+""),"ajax"!==o.type||1<(r=s.split(/\s+/,2)).length&&(o.src=r.shift(),o.opts.filter=r.shift()),o.opts.modal&&(o.opts=v.extend(!0,o.opts,{trapFocus:!0,infobar:0,toolbar:0,smallBtn:0,keyboard:0,slideShow:0,fullScreen:0,thumbs:0,touch:0,clickContent:!1,clickSlide:!1,clickOutside:!1,dblclickContent:!1,dblclickSlide:!1,dblclickOutside:!1})),d.group.push(o)}),Object.keys(d.slides).length&&(d.updateControls(),(t=d.Thumbs)&&t.isActive&&(t.create(),t.focus()))},addEvents:function(){var a=this;a.removeEvents(),a.$refs.container.on("click.fb-close","[data-fancybox-close]",function(e){e.stopPropagation(),e.preventDefault(),a.close(e)}).on("touchstart.fb-prev click.fb-prev","[data-fancybox-prev]",function(e){e.stopPropagation(),e.preventDefault(),a.previous()}).on("touchstart.fb-next click.fb-next","[data-fancybox-next]",function(e){e.stopPropagation(),e.preventDefault(),a.next()}).on("click.fb","[data-fancybox-zoom]",function(e){a[a.isScaledDown()?"scaleToActual":"scaleToFit"]()}),n.on("orientationchange.fb resize.fb",function(e){e&&e.originalEvent&&"resize"===e.originalEvent.type?(a.requestId&&t(a.requestId),a.requestId=u(function(){a.update(e)})):(a.current&&"iframe"===a.current.type&&a.$refs.stage.hide(),setTimeout(function(){a.$refs.stage.show(),a.update(e)},v.fancybox.isMobile?600:250))}),r.on("keydown.fb",function(e){var t=(v.fancybox?v.fancybox.getInstance():null).current,i=e.keyCode||e.which;if(9!=i)return!t.opts.keyboard||e.ctrlKey||e.altKey||e.shiftKey||v(e.target).is("input")||v(e.target).is("textarea")?void 0:8===i||27===i?(e.preventDefault(),void a.close(e)):37===i||38===i?(e.preventDefault(),void a.previous()):39===i||40===i?(e.preventDefault(),void a.next()):void a.trigger("afterKeydown",e,i);t.opts.trapFocus&&a.focus(e)}),a.group[a.currIndex].opts.idleTime&&(a.idleSecondsCounter=0,r.on("mousemove.fb-idle mouseleave.fb-idle mousedown.fb-idle touchstart.fb-idle touchmove.fb-idle scroll.fb-idle keydown.fb-idle",function(e){a.idleSecondsCounter=0,a.isIdle&&a.showControls(),a.isIdle=!1}),a.idleInterval=l.setInterval(function(){a.idleSecondsCounter++,a.idleSecondsCounter>=a.group[a.currIndex].opts.idleTime&&!a.isDragging&&(a.isIdle=!0,a.idleSecondsCounter=0,a.hideControls())},1e3))},removeEvents:function(){n.off("orientationchange.fb resize.fb"),r.off("keydown.fb .fb-idle"),this.$refs.container.off(".fb-close .fb-prev .fb-next"),this.idleInterval&&(l.clearInterval(this.idleInterval),this.idleInterval=null)},previous:function(e){return this.jumpTo(this.currPos-1,e)},next:function(e){return this.jumpTo(this.currPos+1,e)},jumpTo:function(e,a){var t,i,n,s,r,o,l,d,c,p=this,u=p.group.length;if(!(p.isDragging||p.isClosing||p.isAnimating&&p.firstRun)){if(e=parseInt(e,10),!(n=p.current?p.current.opts.loop:p.opts.loop)&&(e<0||u<=e))return!1;if(t=p.firstRun=!Object.keys(p.slides).length,r=p.current,p.prevIndex=p.currIndex,p.prevPos=p.currPos,s=p.createSlide(e),1<u&&((n||s.index<u-1)&&p.createSlide(e+1),(n||0<s.index)&&p.createSlide(e-1)),p.current=s,p.currIndex=s.index,p.currPos=s.pos,p.trigger("beforeShow",t),p.updateControls(),s.forcedDuration=g,v.isNumeric(a)?s.forcedDuration=a:a=s.opts[t?"animationDuration":"transitionDuration"],a=parseInt(a,10),i=p.isMoved(s),s.$slide.addClass("fancybox-slide--current"),t)return s.opts.animationEffect&&a&&p.$refs.container.css("transition-duration",a+"ms"),p.$refs.container.addClass("fancybox-is-open").trigger("focus"),p.loadSlide(s),void p.preload("image");o=v.fancybox.getTranslate(r.$slide),l=v.fancybox.getTranslate(p.$refs.stage),v.each(p.slides,function(e,t){v.fancybox.stop(t.$slide,!0)}),r.pos!==s.pos&&(r.isComplete=!1),r.$slide.removeClass("fancybox-slide--complete fancybox-slide--current"),i?(c=o.left-(r.pos*o.width+r.pos*r.opts.gutter),v.each(p.slides,function(e,t){t.$slide.removeClass("fancybox-animated").removeClass(function(e,t){return(t.match(/(^|\s)fancybox-fx-\S+/g)||[]).join(" ")});var i=t.pos*o.width+t.pos*t.opts.gutter;v.fancybox.setTranslate(t.$slide,{top:0,left:i-l.left+c}),t.pos!==s.pos&&t.$slide.addClass("fancybox-slide--"+(t.pos>s.pos?"next":"previous")),h(t.$slide),v.fancybox.animate(t.$slide,{top:0,left:(t.pos-s.pos)*o.width+(t.pos-s.pos)*t.opts.gutter},a,function(){t.$slide.css({transform:"",opacity:""}).removeClass("fancybox-slide--next fancybox-slide--previous"),t.pos===p.currPos&&p.complete()})})):a&&s.opts.transitionEffect&&(d="fancybox-animated fancybox-fx-"+s.opts.transitionEffect,r.$slide.addClass("fancybox-slide--"+(r.pos>s.pos?"next":"previous")),v.fancybox.animate(r.$slide,d,a,function(){r.$slide.removeClass(d).removeClass("fancybox-slide--next fancybox-slide--previous")},!1)),s.isLoaded?p.revealContent(s):p.loadSlide(s),p.preload("image")}},createSlide:function(e){var t,i,a=this;return i=(i=e%a.group.length)<0?a.group.length+i:i,!a.slides[e]&&a.group[i]&&(t=v('<div class="fancybox-slide"></div>').appendTo(a.$refs.stage),a.slides[e]=v.extend(!0,{},a.group[i],{pos:e,$slide:t,isLoaded:!1}),a.updateSlide(a.slides[e])),a.slides[e]},scaleToActual:function(e,t,i){var a,n,s,r,o,l=this,d=l.current,c=d.$content,p=v.fancybox.getTranslate(d.$slide).width,u=v.fancybox.getTranslate(d.$slide).height,h=d.width,f=d.height;l.isAnimating||l.isMoved()||!c||"image"!=d.type||!d.isLoaded||d.hasError||(l.isAnimating=!0,v.fancybox.stop(c),e=e===g?.5*p:e,t=t===g?.5*u:t,(a=v.fancybox.getTranslate(c)).top-=v.fancybox.getTranslate(d.$slide).top,a.left-=v.fancybox.getTranslate(d.$slide).left,r=h/a.width,o=f/a.height,n=.5*p-.5*h,s=.5*u-.5*f,p<h&&(0<(n=a.left*r-(e*r-e))&&(n=0),n<p-h&&(n=p-h)),u<f&&(0<(s=a.top*o-(t*o-t))&&(s=0),s<u-f&&(s=u-f)),l.updateCursor(h,f),v.fancybox.animate(c,{top:s,left:n,scaleX:r,scaleY:o},i||330,function(){l.isAnimating=!1}),l.SlideShow&&l.SlideShow.isActive&&l.SlideShow.stop())},scaleToFit:function(e){var t,i=this,a=i.current,n=a.$content;i.isAnimating||i.isMoved()||!n||"image"!=a.type||!a.isLoaded||a.hasError||(i.isAnimating=!0,v.fancybox.stop(n),t=i.getFitPos(a),i.updateCursor(t.width,t.height),v.fancybox.animate(n,{top:t.top,left:t.left,scaleX:t.width/n.width(),scaleY:t.height/n.height()},e||330,function(){i.isAnimating=!1}))},getFitPos:function(e){var t,i,a,n,s=e.$content,r=e.$slide,o=e.width||e.opts.width,l=e.height||e.opts.height,d={};return!!(e.isLoaded&&s&&s.length)&&(t=v.fancybox.getTranslate(this.$refs.stage).width,i=v.fancybox.getTranslate(this.$refs.stage).height,t-=parseFloat(r.css("paddingLeft"))+parseFloat(r.css("paddingRight"))+parseFloat(s.css("marginLeft"))+parseFloat(s.css("marginRight")),i-=parseFloat(r.css("paddingTop"))+parseFloat(r.css("paddingBottom"))+parseFloat(s.css("marginTop"))+parseFloat(s.css("marginBottom")),o&&l||(o=t,l=i),t-.5<(o*=a=Math.min(1,t/o,i/l))&&(o=t),i-.5<(l*=a)&&(l=i),"image"===e.type?(d.top=Math.floor(.5*(i-l))+parseFloat(r.css("paddingTop")),d.left=Math.floor(.5*(t-o))+parseFloat(r.css("paddingLeft"))):"video"===e.contentType&&(o/(n=e.opts.width&&e.opts.height?o/l:e.opts.ratio||16/9)<l?l=o/n:l*n<o&&(o=l*n)),d.width=o,d.height=l,d)},update:function(i){var a=this;v.each(a.slides,function(e,t){a.updateSlide(t,i)})},updateSlide:function(e,t){var i=this,a=e&&e.$content,n=e.width||e.opts.width,s=e.height||e.opts.height,r=e.$slide;i.adjustCaption(e),a&&(n||s||"video"===e.contentType)&&!e.hasError&&(v.fancybox.stop(a),v.fancybox.setTranslate(a,i.getFitPos(e)),e.pos===i.currPos&&(i.isAnimating=!1,i.updateCursor())),i.adjustLayout(e),r.length&&(r.trigger("refresh"),e.pos===i.currPos&&i.$refs.toolbar.add(i.$refs.navigation.find(".fancybox-button--arrow_right")).toggleClass("compensate-for-scrollbar",r.get(0).scrollHeight>r.get(0).clientHeight)),i.trigger("onUpdate",e,t)},centerSlide:function(e){var t=this,i=t.current,a=i.$slide;!t.isClosing&&i&&(a.siblings().css({transform:"",opacity:""}),a.parent().children().removeClass("fancybox-slide--previous fancybox-slide--next"),v.fancybox.animate(a,{top:0,left:0,opacity:1},e===g?0:e,function(){a.css({transform:"",opacity:""}),i.isComplete||t.complete()},!1))},isMoved:function(e){var t,i,a=e||this.current;return!!a&&(i=v.fancybox.getTranslate(this.$refs.stage),t=v.fancybox.getTranslate(a.$slide),!a.$slide.hasClass("fancybox-animated")&&(.5<Math.abs(t.top-i.top)||.5<Math.abs(t.left-i.left)))},updateCursor:function(e,t){var i,a,n=this,s=n.current,r=n.$refs.container;s&&!n.isClosing&&n.Guestures&&(r.removeClass("fancybox-is-zoomable fancybox-can-zoomIn fancybox-can-zoomOut fancybox-can-swipe fancybox-can-pan"),a=!!(i=n.canPan(e,t))||n.isZoomable(),r.toggleClass("fancybox-is-zoomable",a),v("[data-fancybox-zoom]").prop("disabled",!a),i?r.addClass("fancybox-can-pan"):a&&("zoom"===s.opts.clickContent||v.isFunction(s.opts.clickContent)&&"zoom"==s.opts.clickContent(s))?r.addClass("fancybox-can-zoomIn"):s.opts.touch&&(s.opts.touch.vertical||1<n.group.length)&&"video"!==s.contentType&&r.addClass("fancybox-can-swipe"))},isZoomable:function(){var e,t=this.current;if(t&&!this.isClosing&&"image"===t.type&&!t.hasError){if(!t.isLoaded)return!0;if((e=this.getFitPos(t))&&(t.width>e.width||t.height>e.height))return!0}return!1},isScaledDown:function(e,t){var i=!1,a=this.current,n=a.$content;return e!==g&&t!==g?i=e<a.width&&t<a.height:n&&(i=(i=v.fancybox.getTranslate(n)).width<a.width&&i.height<a.height),i},canPan:function(e,t){var i=this.current,a=null,n=!1;return"image"===i.type&&(i.isComplete||e&&t)&&!i.hasError&&(n=this.getFitPos(i),e!==g&&t!==g?a={width:e,height:t}:i.isComplete&&(a=v.fancybox.getTranslate(i.$content)),a&&n&&(n=1.5<Math.abs(a.width-n.width)||1.5<Math.abs(a.height-n.height))),n},loadSlide:function(i){var e,t,a,n=this;if(!i.isLoading&&!i.isLoaded){if(!(i.isLoading=!0)===n.trigger("beforeLoad",i))return i.isLoading=!1;switch(e=i.type,(t=i.$slide).off("refresh").trigger("onReset").addClass(i.opts.slideClass),e){case"image":n.setImage(i);break;case"iframe":n.setIframe(i);break;case"html":n.setContent(i,i.src||i.content);break;case"video":n.setContent(i,i.opts.video.tpl.replace(/\{\{src\}\}/gi,i.src).replace("{{format}}",i.opts.videoFormat||i.opts.video.format||"").replace("{{poster}}",i.thumb||""));break;case"inline":v(i.src).length?n.setContent(i,v(i.src)):n.setError(i);break;case"ajax":n.showLoading(i),a=v.ajax(v.extend({},i.opts.ajax.settings,{url:i.src,success:function(e,t){"success"===t&&n.setContent(i,e)},error:function(e,t){e&&"abort"!==t&&n.setError(i)}})),t.one("onReset",function(){a.abort()});break;default:n.setError(i)}return!0}},setImage:function(t){var e,i=this;setTimeout(function(){var e=t.$image;i.isClosing||!t.isLoading||e&&e.length&&e[0].complete||t.hasError||i.showLoading(t)},50),i.checkSrcset(t),t.$content=v('<div class="fancybox-content"></div>').addClass("fancybox-is-hidden").appendTo(t.$slide.addClass("fancybox-slide--image")),!1!==t.opts.preload&&t.opts.width&&t.opts.height&&t.thumb&&(t.width=t.opts.width,t.height=t.opts.height,(e=d.createElement("img")).onerror=function(){v(this).remove(),t.$ghost=null},e.onload=function(){i.afterLoad(t)},t.$ghost=v(e).addClass("fancybox-image").appendTo(t.$content).attr("src",t.thumb)),i.setBigImage(t)},checkSrcset:function(e){var t,i,a,n,s=e.opts.srcset||e.opts.image.srcset;if(s){a=l.devicePixelRatio||1,n=l.innerWidth*a,(i=s.split(",").map(function(e){var a={};return e.trim().split(/\s+/).forEach(function(e,t){var i=parseInt(e.substring(0,e.length-1),10);return 0===t?a.url=e:void(i&&(a.value=i,a.postfix=e[e.length-1]))}),a})).sort(function(e,t){return e.value-t.value});for(var r=0;r<i.length;r++){var o=i[r];if("w"===o.postfix&&o.value>=n||"x"===o.postfix&&o.value>=a){t=o;break}}!t&&i.length&&(t=i[i.length-1]),t&&(e.src=t.url,e.width&&e.height&&"w"==t.postfix&&(e.height=e.width/e.height*t.value,e.width=t.value),e.opts.srcset=s)}},setBigImage:function(t){var i=this,e=d.createElement("img"),a=v(e);t.$image=a.one("error",function(){i.setError(t)}).one("load",function(){var e;t.$ghost||(i.resolveImageSlideSize(t,this.naturalWidth,this.naturalHeight),i.afterLoad(t)),i.isClosing||(t.opts.srcset&&((e=t.opts.sizes)&&"auto"!==e||(e=(1<t.width/t.height&&1<n.width()/n.height()?"100":Math.round(t.width/t.height*100))+"vw"),a.attr("sizes",e).attr("srcset",t.opts.srcset)),t.$ghost&&setTimeout(function(){t.$ghost&&!i.isClosing&&t.$ghost.hide()},Math.min(300,Math.max(1e3,t.height/1600))),i.hideLoading(t))}).addClass("fancybox-image").attr("src",t.src).appendTo(t.$content),(e.complete||"complete"==e.readyState)&&a.naturalWidth&&a.naturalHeight?a.trigger("load"):e.error&&a.trigger("error")},resolveImageSlideSize:function(e,t,i){var a=parseInt(e.opts.width,10),n=parseInt(e.opts.height,10);e.width=t,e.height=i,0<a&&(e.width=a,e.height=Math.floor(a*i/t)),0<n&&(e.width=Math.floor(n*t/i),e.height=n)},setIframe:function(n){var s,t=this,r=n.opts.iframe,o=n.$slide;v.fancybox.isMobile&&(r.css.overflow="scroll"),n.$content=v('<div class="fancybox-content'+(r.preload?" fancybox-is-hidden":"")+'"></div>').css(r.css).appendTo(o),o.addClass("fancybox-slide--"+n.contentType),n.$iframe=s=v(r.tpl.replace(/\{rnd\}/g,(new Date).getTime())).attr(r.attr).appendTo(n.$content),r.preload?(t.showLoading(n),s.on("load.fb error.fb",function(e){this.isReady=1,n.$slide.trigger("refresh"),t.afterLoad(n)}),o.on("refresh.fb",function(){var e,t=n.$content,i=r.css.width,a=r.css.height;if(1===s[0].isReady){try{e=s.contents().find("body")}catch(e){}e&&e.length&&e.children().length&&(o.css("overflow","visible"),t.css({width:"100%","max-width":"100%",height:"9999px"}),i===g&&(i=Math.ceil(Math.max(e[0].clientWidth,e.outerWidth(!0)))),t.css("width",i||"").css("max-width",""),a===g&&(a=Math.ceil(Math.max(e[0].clientHeight,e.outerHeight(!0)))),t.css("height",a||""),o.css("overflow","auto")),t.removeClass("fancybox-is-hidden")}})):t.afterLoad(n),s.attr("src",n.src),o.one("onReset",function(){try{v(this).find("iframe").hide().unbind().attr("src","//about:blank")}catch(e){}v(this).off("refresh.fb").empty(),n.isLoaded=!1,n.isRevealed=!1})},setContent:function(e,t){this.isClosing||(this.hideLoading(e),e.$content&&v.fancybox.stop(e.$content),e.$slide.empty(),function(e){return e&&e.hasOwnProperty&&e instanceof v}(t)&&t.parent().length?((t.hasClass("fancybox-content")||t.parent().hasClass("fancybox-content"))&&t.parents(".fancybox-slide").trigger("onReset"),e.$placeholder=v("<div>").hide().insertAfter(t),t.css("display","inline-block")):e.hasError||("string"===v.type(t)&&(t=v("<div>").append(v.trim(t)).contents()),e.opts.filter&&(t=v("<div>").html(t).find(e.opts.filter))),e.$slide.one("onReset",function(){v(this).find("video,audio").trigger("pause"),e.$placeholder&&(e.$placeholder.after(t.removeClass("fancybox-content").hide()).remove(),e.$placeholder=null),e.$smallBtn&&(e.$smallBtn.remove(),e.$smallBtn=null),e.hasError||(v(this).empty(),e.isLoaded=!1,e.isRevealed=!1)}),v(t).appendTo(e.$slide),v(t).is("video,audio")&&(v(t).addClass("fancybox-video"),v(t).wrap("<div></div>"),e.contentType="video",e.opts.width=e.opts.width||v(t).attr("width"),e.opts.height=e.opts.height||v(t).attr("height")),e.$content=e.$slide.children().filter("div,form,main,video,audio,article,.fancybox-content").first(),e.$content.siblings().hide(),e.$content.length||(e.$content=e.$slide.wrapInner("<div></div>").children().first()),e.$content.addClass("fancybox-content"),e.$slide.addClass("fancybox-slide--"+e.contentType),this.afterLoad(e))},setError:function(e){e.hasError=!0,e.$slide.trigger("onReset").removeClass("fancybox-slide--"+e.contentType).addClass("fancybox-slide--error"),e.contentType="html",this.setContent(e,this.translate(e,e.opts.errorTpl)),e.pos===this.currPos&&(this.isAnimating=!1)},showLoading:function(e){(e=e||this.current)&&!e.$spinner&&(e.$spinner=v(this.translate(this,this.opts.spinnerTpl)).appendTo(e.$slide).hide().fadeIn("fast"))},hideLoading:function(e){(e=e||this.current)&&e.$spinner&&(e.$spinner.stop().remove(),delete e.$spinner)},afterLoad:function(e){var t=this;t.isClosing||(e.isLoading=!1,e.isLoaded=!0,t.trigger("afterLoad",e),t.hideLoading(e),!e.opts.smallBtn||e.$smallBtn&&e.$smallBtn.length||(e.$smallBtn=v(t.translate(e,e.opts.btnTpl.smallBtn)).appendTo(e.$content)),e.opts.protect&&e.$content&&!e.hasError&&(e.$content.on("contextmenu.fb",function(e){return 2==e.button&&e.preventDefault(),!0}),"image"===e.type&&v('<div class="fancybox-spaceball"></div>').appendTo(e.$content)),t.adjustCaption(e),t.adjustLayout(e),e.pos===t.currPos&&t.updateCursor(),t.revealContent(e))},adjustCaption:function(e){var t=this,i=e||t.current,a=i.opts.caption,n=t.$refs.caption,s=!1;i.opts.preventCaptionOverlap&&a&&a.length&&(i.pos!==t.currPos?((n=n.clone().empty().appendTo(n.parent())).html(a),s=n.outerHeight(!0),n.empty().remove()):t.$caption&&(s=t.$caption.outerHeight(!0)),i.$slide.css("padding-bottom",s||""))},adjustLayout:function(e){var t,i,a,n,s=e||this.current;s.isLoaded&&!0!==s.opts.disableLayoutFix&&(s.$content.css("margin-bottom",""),s.$content.outerHeight()>s.$slide.height()+.5&&(a=s.$slide[0].style["padding-bottom"],n=s.$slide.css("padding-bottom"),0<parseFloat(n)&&(t=s.$slide[0].scrollHeight,s.$slide.css("padding-bottom",0),Math.abs(t-s.$slide[0].scrollHeight)<1&&(i=n),s.$slide.css("padding-bottom",a))),s.$content.css("margin-bottom",i))},revealContent:function(e){var t,i,a,n,s=this,r=e.$slide,o=!1,l=!1,d=s.isMoved(e),c=e.isRevealed;return e.isRevealed=!0,t=e.opts[s.firstRun?"animationEffect":"transitionEffect"],a=e.opts[s.firstRun?"animationDuration":"transitionDuration"],a=parseInt(e.forcedDuration===g?a:e.forcedDuration,10),!d&&e.pos===s.currPos&&a||(t=!1),"zoom"===t&&(e.pos===s.currPos&&a&&"image"===e.type&&!e.hasError&&(l=s.getThumbPos(e))?o=s.getFitPos(e):t="fade"),"zoom"===t?(s.isAnimating=!0,o.scaleX=o.width/l.width,o.scaleY=o.height/l.height,"auto"==(n=e.opts.zoomOpacity)&&(n=.1<Math.abs(e.width/e.height-l.width/l.height)),n&&(l.opacity=.1,o.opacity=1),v.fancybox.setTranslate(e.$content.removeClass("fancybox-is-hidden"),l),h(e.$content),void v.fancybox.animate(e.$content,o,a,function(){s.isAnimating=!1,s.complete()})):(s.updateSlide(e),t?(v.fancybox.stop(r),i="fancybox-slide--"+(e.pos>=s.prevPos?"next":"previous")+" fancybox-animated fancybox-fx-"+t,r.addClass(i).removeClass("fancybox-slide--current"),e.$content.removeClass("fancybox-is-hidden"),h(r),"image"!==e.type&&e.$content.hide().show(0),void v.fancybox.animate(r,"fancybox-slide--current",a,function(){r.removeClass(i).css({transform:"",opacity:""}),e.pos===s.currPos&&s.complete()},!0)):(e.$content.removeClass("fancybox-is-hidden"),c||!d||"image"!==e.type||e.hasError||e.$content.hide().fadeIn("fast"),void(e.pos===s.currPos&&s.complete())))},getThumbPos:function(e){var t,i,a,n,s,r=!1,o=e.$thumb;return!(!o||!function(e){var t,i;return!(!e||e.ownerDocument!==d)&&(v(".fancybox-container").css("pointer-events","none"),t={x:e.getBoundingClientRect().left+e.offsetWidth/2,y:e.getBoundingClientRect().top+e.offsetHeight/2},i=d.elementFromPoint(t.x,t.y)===e,v(".fancybox-container").css("pointer-events",""),i)}(o[0]))&&(t=v.fancybox.getTranslate(o),i=parseFloat(o.css("border-top-width")||0),a=parseFloat(o.css("border-right-width")||0),n=parseFloat(o.css("border-bottom-width")||0),s=parseFloat(o.css("border-left-width")||0),r={top:t.top+i,left:t.left+s,width:t.width-a-s,height:t.height-i-n,scaleX:1,scaleY:1},0<t.width&&0<t.height&&r)},complete:function(){var e,i=this,t=i.current,a={};!i.isMoved()&&t.isLoaded&&(t.isComplete||(t.isComplete=!0,t.$slide.siblings().trigger("onReset"),i.preload("inline"),h(t.$slide),t.$slide.addClass("fancybox-slide--complete"),v.each(i.slides,function(e,t){t.pos>=i.currPos-1&&t.pos<=i.currPos+1?a[t.pos]=t:t&&(v.fancybox.stop(t.$slide),t.$slide.off().remove())}),i.slides=a),i.isAnimating=!1,i.updateCursor(),i.trigger("afterShow"),t.opts.video.autoStart&&t.$slide.find("video,audio").filter(":visible:first").trigger("play").one("ended",function(){this.webkitExitFullscreen&&this.webkitExitFullscreen(),i.next()}),t.opts.autoFocus&&"html"===t.contentType&&((e=t.$content.find("input[autofocus]:enabled:visible:first")).length?e.trigger("focus"):i.focus(null,!0)),t.$slide.scrollTop(0).scrollLeft(0))},preload:function(e){var t,i,a=this;a.group.length<2||(i=a.slides[a.currPos+1],(t=a.slides[a.currPos-1])&&t.type===e&&a.loadSlide(t),i&&i.type===e&&a.loadSlide(i))},focus:function(e,t){var i,a,n=this,s=["a[href]","area[href]",'input:not([disabled]):not([type="hidden"]):not([aria-hidden])',"select:not([disabled]):not([aria-hidden])","textarea:not([disabled]):not([aria-hidden])","button:not([disabled]):not([aria-hidden])","iframe","object","embed","[contenteditable]",'[tabindex]:not([tabindex^="-"])'].join(",");n.isClosing||((i=(i=!e&&n.current&&n.current.isComplete?n.current.$slide.find("*:visible"+(t?":not(.fancybox-close-small)":"")):n.$refs.container.find("*:visible")).filter(s).filter(function(){return"hidden"!==v(this).css("visibility")&&!v(this).hasClass("disabled")})).length?(a=i.index(d.activeElement),e&&e.shiftKey?(a<0||0==a)&&(e.preventDefault(),i.eq(i.length-1).trigger("focus")):(a<0||a==i.length-1)&&(e&&e.preventDefault(),i.eq(0).trigger("focus"))):n.$refs.container.trigger("focus"))},activate:function(){var t=this;v(".fancybox-container").each(function(){var e=v(this).data("FancyBox");e&&e.id!==t.id&&!e.isClosing&&(e.trigger("onDeactivate"),e.removeEvents(),e.isVisible=!1)}),t.isVisible=!0,(t.current||t.isIdle)&&(t.update(),t.updateControls()),t.trigger("onActivate"),t.addEvents()},close:function(e,t){function i(){c.cleanUp(e)}var a,n,s,r,o,l,d,c=this,p=c.current;return!c.isClosing&&(!(c.isClosing=!0)===c.trigger("beforeClose",e)?(c.isClosing=!1,u(function(){c.update()}),!1):(c.removeEvents(),s=p.$content,a=p.opts.animationEffect,n=v.isNumeric(t)?t:a?p.opts.animationDuration:0,p.$slide.removeClass("fancybox-slide--complete fancybox-slide--next fancybox-slide--previous fancybox-animated"),!0!==e?v.fancybox.stop(p.$slide):a=!1,p.$slide.siblings().trigger("onReset").remove(),n&&c.$refs.container.removeClass("fancybox-is-open").addClass("fancybox-is-closing").css("transition-duration",n+"ms"),c.hideLoading(p),c.hideControls(!0),c.updateCursor(),"zoom"!==a||s&&n&&"image"===p.type&&!c.isMoved()&&!p.hasError&&(d=c.getThumbPos(p))||(a="fade"),"zoom"===a?(v.fancybox.stop(s),l={top:(r=v.fancybox.getTranslate(s)).top,left:r.left,scaleX:r.width/d.width,scaleY:r.height/d.height,width:d.width,height:d.height},"auto"==(o=p.opts.zoomOpacity)&&(o=.1<Math.abs(p.width/p.height-d.width/d.height)),o&&(d.opacity=0),v.fancybox.setTranslate(s,l),h(s),v.fancybox.animate(s,d,n,i)):a&&n?v.fancybox.animate(p.$slide.addClass("fancybox-slide--previous").removeClass("fancybox-slide--current"),"fancybox-animated fancybox-fx-"+a,n,i):!0===e?setTimeout(i,n):i(),!0))},cleanUp:function(e){var t,i,a,n=this,s=n.current.opts.$orig;n.current.$slide.trigger("onReset"),n.$refs.container.empty().remove(),n.trigger("afterClose",e),n.current.opts.backFocus&&(s&&s.length&&s.is(":visible")||(s=n.$trigger),s&&s.length&&(i=l.scrollX,a=l.scrollY,s.trigger("focus"),v("html, body").scrollTop(a).scrollLeft(i))),n.current=null,(t=v.fancybox.getInstance())?t.activate():(v("body").removeClass("fancybox-active compensate-for-scrollbar"),v("#fancybox-style-noscroll").remove())},trigger:function(e,t){var i,a=Array.prototype.slice.call(arguments,1),n=this,s=t&&t.opts?t:n.current;return s?a.unshift(s):s=n,a.unshift(n),v.isFunction(s.opts[e])&&(i=s.opts[e].apply(s,a)),!1===i?i:void("afterClose"!==e&&n.$refs?n.$refs.container.trigger(e+".fb",a):r.trigger(e+".fb",a))},updateControls:function(){var e=this,t=e.current,i=t.index,a=e.$refs.container,n=e.$refs.caption,s=t.opts.caption;t.$slide.trigger("refresh"),e.$caption=s&&s.length?n.html(s):null,e.hasHiddenControls||e.isIdle||e.showControls(),a.find("[data-fancybox-count]").html(e.group.length),a.find("[data-fancybox-index]").html(i+1),a.find("[data-fancybox-prev]").prop("disabled",!t.opts.loop&&i<=0),a.find("[data-fancybox-next]").prop("disabled",!t.opts.loop&&i>=e.group.length-1),"image"===t.type?a.find("[data-fancybox-zoom]").show().end().find("[data-fancybox-download]").attr("href",t.opts.image.src||t.src).show():t.opts.toolbar&&a.find("[data-fancybox-download],[data-fancybox-zoom]").hide(),v(d.activeElement).is(":hidden,[disabled]")&&e.$refs.container.trigger("focus")},hideControls:function(e){var t=["infobar","toolbar","nav"];!e&&this.current.opts.preventCaptionOverlap||t.push("caption"),this.$refs.container.removeClass(t.map(function(e){return"fancybox-show-"+e}).join(" ")),this.hasHiddenControls=!0},showControls:function(){var e=this,t=e.current?e.current.opts:e.opts,i=e.$refs.container;e.hasHiddenControls=!1,e.idleSecondsCounter=0,i.toggleClass("fancybox-show-toolbar",!(!t.toolbar||!t.buttons)).toggleClass("fancybox-show-infobar",!!(t.infobar&&1<e.group.length)).toggleClass("fancybox-show-caption",!!e.$caption).toggleClass("fancybox-show-nav",!!(t.arrows&&1<e.group.length)).toggleClass("fancybox-is-modal",!!t.modal)},toggleControls:function(){this.hasHiddenControls?this.showControls():this.hideControls()}}),v.fancybox={version:"3.5.2",defaults:e,getInstance:function(e){var t=v('.fancybox-container:not(".fancybox-is-closing"):last').data("FancyBox"),i=Array.prototype.slice.call(arguments,1);return t instanceof a&&("string"===v.type(e)?t[e].apply(t,i):"function"===v.type(e)&&e.apply(t,i),t)},open:function(e,t,i){return new a(e,t,i)},close:function(e){var t=this.getInstance();t&&(t.close(),!0===e&&this.close(e))},destroy:function(){this.close(!0),r.add("body").off("click.fb-start","**")},isMobile:/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),use3d:(b=d.createElement("div"),l.getComputedStyle&&l.getComputedStyle(b)&&l.getComputedStyle(b).getPropertyValue("transform")&&!(d.documentMode&&d.documentMode<11)),getTranslate:function(e){var t;return!(!e||!e.length)&&{top:(t=e[0].getBoundingClientRect()).top||0,left:t.left||0,width:t.width,height:t.height,opacity:parseFloat(e.css("opacity"))}},setTranslate:function(e,t){var i="",a={};if(e&&t)return t.left===g&&t.top===g||(i=(t.left===g?e.position().left:t.left)+"px, "+(t.top===g?e.position().top:t.top)+"px",i=this.use3d?"translate3d("+i+", 0px)":"translate("+i+")"),t.scaleX!==g&&t.scaleY!==g?i+=" scale("+t.scaleX+", "+t.scaleY+")":t.scaleX!==g&&(i+=" scaleX("+t.scaleX+")"),i.length&&(a.transform=i),t.opacity!==g&&(a.opacity=t.opacity),t.width!==g&&(a.width=t.width),t.height!==g&&(a.height=t.height),e.css(a)},animate:function(t,i,a,n,s){var r,o=this;v.isFunction(a)&&(n=a,a=null),o.stop(t),r=o.getTranslate(t),t.on(c,function(e){e&&e.originalEvent&&(!t.is(e.originalEvent.target)||"z-index"==e.originalEvent.propertyName)||(o.stop(t),v.isNumeric(a)&&t.css("transition-duration",""),v.isPlainObject(i)?i.scaleX!==g&&i.scaleY!==g&&o.setTranslate(t,{top:i.top,left:i.left,width:r.width*i.scaleX,height:r.height*i.scaleY,scaleX:1,scaleY:1}):!0!==s&&t.removeClass(i),v.isFunction(n)&&n(e))}),v.isNumeric(a)&&t.css("transition-duration",a+"ms"),v.isPlainObject(i)?(i.scaleX!==g&&i.scaleY!==g&&(delete i.width,delete i.height,t.parent().hasClass("fancybox-slide--image")&&t.parent().addClass("fancybox-is-scaling")),v.fancybox.setTranslate(t,i)):t.addClass(i),t.data("timer",setTimeout(function(){t.trigger(c)},a+33))},stop:function(e,t){e&&e.length&&(clearTimeout(e.data("timer")),t&&e.trigger(c),e.off(c).css("transition-duration",""),e.parent().removeClass("fancybox-is-scaling"))}},v.fn.fancybox=function(e){var t;return(t=(e=e||{}).selector||!1)?v("body").off("click.fb-start",t).on("click.fb-start",t,{options:e},i):this.off("click.fb-start").on("click.fb-start",{items:this,options:e},i),this},r.on("click.fb-start","[data-fancybox]",i),r.on("click.fb-start","[data-fancybox-trigger]",function(e){v('[data-fancybox="'+v(this).attr("data-fancybox-trigger")+'"]').eq(v(this).attr("data-fancybox-index")||0).trigger("click.fb-start",{$trigger:v(this)})}),o=".fancybox-button",f="fancybox-focus",m=null,r.on("mousedown mouseup focus blur",o,function(e){switch(e.type){case"mousedown":m=v(this);break;case"mouseup":m=null;break;case"focusin":v(o).removeClass(f),v(this).is(m)||v(this).is("[disabled]")||v(this).addClass(f);break;case"focusout":v(o).removeClass(f)}})}var o,f,m,b}(window,document,jQuery),function(h){"use strict";function f(i,e,t){if(i)return t=t||"","object"===h.type(t)&&(t=h.param(t,!0)),h.each(e,function(e,t){i=i.replace("$"+e,t||"")}),t.length&&(i+=(0<i.indexOf("?")?"&":"?")+t),i}var a={youtube:{matcher:/(youtube\.com|youtu\.be|youtube\-nocookie\.com)\/(watch\?(.*&)?v=|v\/|u\/|embed\/?)?(videoseries\?list=(.*)|[\w-]{11}|\?listType=(.*)&list=(.*))(.*)/i,params:{autoplay:1,autohide:1,fs:1,rel:0,hd:1,wmode:"transparent",enablejsapi:1,html5:1},paramPlace:8,type:"iframe",url:"//www.youtube-nocookie.com/embed/$4",thumb:"//img.youtube.com/vi/$4/hqdefault.jpg"},vimeo:{matcher:/^.+vimeo.com\/(.*\/)?([\d]+)(.*)?/,params:{autoplay:1,hd:1,show_title:1,show_byline:1,show_portrait:0,fullscreen:1},paramPlace:3,type:"iframe",url:"//player.vimeo.com/video/$2"},instagram:{matcher:/(instagr\.am|instagram\.com)\/p\/([a-zA-Z0-9_\-]+)\/?/i,type:"image",url:"//$1/p/$2/media/?size=l"},gmap_place:{matcher:/(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(((maps\/(place\/(.*)\/)?\@(.*),(\d+.?\d+?)z))|(\?ll=))(.*)?/i,type:"iframe",url:function(e){return"//maps.google."+e[2]+"/?ll="+(e[9]?e[9]+"&z="+Math.floor(e[10])+(e[12]?e[12].replace(/^\//,"&"):""):e[12]+"").replace(/\?/,"&")+"&output="+(e[12]&&0<e[12].indexOf("layer=c")?"svembed":"embed")}},gmap_search:{matcher:/(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(maps\/search\/)(.*)/i,type:"iframe",url:function(e){return"//maps.google."+e[2]+"/maps?q="+e[5].replace("query=","q=").replace("api=1","")+"&output=embed"}}};h(document).on("objectNeedsType.fb",function(e,t,n){var i,s,r,o,l,d,c,p=n.src||"",u=!1;i=h.extend(!0,{},a,n.opts.media),h.each(i,function(e,t){if(r=p.match(t.matcher)){if(u=t.type,c=e,d={},t.paramPlace&&r[t.paramPlace]){"?"==(l=r[t.paramPlace])[0]&&(l=l.substring(1)),l=l.split("&");for(var i=0;i<l.length;++i){var a=l[i].split("=",2);2==a.length&&(d[a[0]]=decodeURIComponent(a[1].replace(/\+/g," ")))}}return o=h.extend(!0,{},t.params,n.opts[e],d),p="function"===h.type(t.url)?t.url.call(this,r,o,n):f(t.url,r,o),s="function"===h.type(t.thumb)?t.thumb.call(this,r,o,n):f(t.thumb,r),"youtube"===e?p=p.replace(/&t=((\d+)m)?(\d+)s/,function(e,t,i,a){return"&start="+((i?60*parseInt(i,10):0)+parseInt(a,10))}):"vimeo"===e&&(p=p.replace("&%23","#")),!1}}),u?(n.opts.thumb||n.opts.$thumb&&n.opts.$thumb.length||(n.opts.thumb=s),"iframe"===u&&(n.opts=h.extend(!0,n.opts,{iframe:{preload:!1,attr:{scrolling:"no"}}})),h.extend(n,{type:u,src:p,origSrc:n.src,contentSource:c,contentType:"image"===u?"image":"gmap_place"==c||"gmap_search"==c?"map":"video"})):p&&(n.type=n.opts.defaultType)});var n={youtube:{src:"https://www.youtube.com/iframe_api",class:"YT",loading:!1,loaded:!1},vimeo:{src:"https://player.vimeo.com/api/player.js",class:"Vimeo",loading:!1,loaded:!1},load:function(e){var t,i=this;return this[e].loaded?void setTimeout(function(){i.done(e)}):void(this[e].loading||(this[e].loading=!0,(t=document.createElement("script")).type="text/javascript",t.src=this[e].src,"youtube"===e?window.onYouTubeIframeAPIReady=function(){i[e].loaded=!0,i.done(e)}:t.onload=function(){i[e].loaded=!0,i.done(e)},document.body.appendChild(t)))},done:function(e){var t,i;"youtube"===e&&delete window.onYouTubeIframeAPIReady,(t=h.fancybox.getInstance())&&(i=t.current.$content.find("iframe"),"youtube"===e&&void 0!==YT&&YT?new YT.Player(i.attr("id"),{events:{onStateChange:function(e){0==e.data&&t.next()}}}):"vimeo"===e&&void 0!==Vimeo&&Vimeo&&new Vimeo.Player(i).on("ended",function(){t.next()}))}};h(document).on({"afterShow.fb":function(e,t,i){1<t.group.length&&("youtube"===i.contentSource||"vimeo"===i.contentSource)&&n.load(i.contentSource)}})}(jQuery),function(v,l,g){"use strict";function c(e){var t=[];for(var i in e=(e=e.originalEvent||e||v.e).touches&&e.touches.length?e.touches:e.changedTouches&&e.changedTouches.length?e.changedTouches:[e])e[i].pageX?t.push({x:e[i].pageX,y:e[i].pageY}):e[i].clientX&&t.push({x:e[i].clientX,y:e[i].clientY});return t}function m(e,t,i){return t&&e?"x"===i?e.x-t.x:"y"===i?e.y-t.y:Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2)):0}function d(e){if(e.is('a,area,button,[role="button"],input,label,select,summary,textarea,video,audio,iframe')||g.isFunction(e.get(0).onclick)||e.data("selectable"))return!0;for(var t=0,i=e[0].attributes,a=i.length;t<a;t++)if("data-fancybox-"===i[t].nodeName.substr(0,14))return!0;return!1}function p(e){for(var t=!1;(i=e.get(0),void 0,a=v.getComputedStyle(i)["overflow-y"],n=v.getComputedStyle(i)["overflow-x"],s=("scroll"===a||"auto"===a)&&i.scrollHeight>i.clientHeight,r=("scroll"===n||"auto"===n)&&i.scrollWidth>i.clientWidth,!(t=s||r))&&((e=e.parent()).length&&!e.hasClass("fancybox-stage")&&!e.is("body")););var i,a,n,s,r;return t}function i(e){var t=this;t.instance=e,t.$bg=e.$refs.bg,t.$stage=e.$refs.stage,t.$container=e.$refs.container,t.destroy(),t.$container.on("touchstart.fb.touch mousedown.fb.touch",g.proxy(t,"ontouchstart"))}var b=v.requestAnimationFrame||v.webkitRequestAnimationFrame||v.mozRequestAnimationFrame||v.oRequestAnimationFrame||function(e){return v.setTimeout(e,1e3/60)},y=v.cancelAnimationFrame||v.webkitCancelAnimationFrame||v.mozCancelAnimationFrame||v.oCancelAnimationFrame||function(e){v.clearTimeout(e)};i.prototype.destroy=function(){var e=this;e.$container.off(".fb.touch"),g(l).off(".fb.touch"),e.requestId&&(y(e.requestId),e.requestId=null),e.tapped&&(clearTimeout(e.tapped),e.tapped=null)},i.prototype.ontouchstart=function(e){var t=this,i=g(e.target),a=t.instance,n=a.current,s=n.$slide,r=n.$content,o="touchstart"==e.type;if(o&&t.$container.off("mousedown.fb.touch"),(!e.originalEvent||2!=e.originalEvent.button)&&s.length&&i.length&&!d(i)&&!d(i.parent())&&(i.is("img")||!(e.originalEvent.clientX>i[0].clientWidth+i.offset().left))){if(!n||a.isAnimating||n.$slide.hasClass("fancybox-animated"))return e.stopPropagation(),void e.preventDefault();t.realPoints=t.startPoints=c(e),t.startPoints.length&&(n.touch&&e.stopPropagation(),t.startEvent=e,t.canTap=!0,t.$target=i,t.$content=r,t.opts=n.opts.touch,t.isPanning=!1,t.isSwiping=!1,t.isZooming=!1,t.isScrolling=!1,t.canPan=a.canPan(),t.startTime=(new Date).getTime(),t.distanceX=t.distanceY=t.distance=0,t.canvasWidth=Math.round(s[0].clientWidth),t.canvasHeight=Math.round(s[0].clientHeight),t.contentLastPos=null,t.contentStartPos=g.fancybox.getTranslate(t.$content)||{top:0,left:0},t.sliderStartPos=g.fancybox.getTranslate(s),t.stagePos=g.fancybox.getTranslate(a.$refs.stage),t.sliderStartPos.top-=t.stagePos.top,t.sliderStartPos.left-=t.stagePos.left,t.contentStartPos.top-=t.stagePos.top,t.contentStartPos.left-=t.stagePos.left,g(l).off(".fb.touch").on(o?"touchend.fb.touch touchcancel.fb.touch":"mouseup.fb.touch mouseleave.fb.touch",g.proxy(t,"ontouchend")).on(o?"touchmove.fb.touch":"mousemove.fb.touch",g.proxy(t,"ontouchmove")),g.fancybox.isMobile&&l.addEventListener("scroll",t.onscroll,!0),((t.opts||t.canPan)&&(i.is(t.$stage)||t.$stage.find(i).length)||(i.is(".fancybox-image")&&e.preventDefault(),g.fancybox.isMobile&&i.hasClass("fancybox-caption")))&&(t.isScrollable=p(i)||p(i.parent()),g.fancybox.isMobile&&t.isScrollable||e.preventDefault(),1!==t.startPoints.length&&!n.hasError||(t.canPan?(g.fancybox.stop(t.$content),t.isPanning=!0):t.isSwiping=!0,t.$container.addClass("fancybox-is-grabbing")),2===t.startPoints.length&&"image"===n.type&&(n.isLoaded||n.$ghost)&&(t.canTap=!1,t.isSwiping=!1,t.isPanning=!1,t.isZooming=!0,g.fancybox.stop(t.$content),t.centerPointStartX=.5*(t.startPoints[0].x+t.startPoints[1].x)-g(v).scrollLeft(),t.centerPointStartY=.5*(t.startPoints[0].y+t.startPoints[1].y)-g(v).scrollTop(),t.percentageOfImageAtPinchPointX=(t.centerPointStartX-t.contentStartPos.left)/t.contentStartPos.width,t.percentageOfImageAtPinchPointY=(t.centerPointStartY-t.contentStartPos.top)/t.contentStartPos.height,t.startDistanceBetweenFingers=m(t.startPoints[0],t.startPoints[1]))))}},i.prototype.onscroll=function(e){this.isScrolling=!0,l.removeEventListener("scroll",this.onscroll,!0)},i.prototype.ontouchmove=function(e){var t=this;return void 0!==e.originalEvent.buttons&&0===e.originalEvent.buttons?void t.ontouchend(e):t.isScrolling?void(t.canTap=!1):(t.newPoints=c(e),void((t.opts||t.canPan)&&t.newPoints.length&&t.newPoints.length&&(t.isSwiping&&!0===t.isSwiping||e.preventDefault(),t.distanceX=m(t.newPoints[0],t.startPoints[0],"x"),t.distanceY=m(t.newPoints[0],t.startPoints[0],"y"),t.distance=m(t.newPoints[0],t.startPoints[0]),0<t.distance&&(t.isSwiping?t.onSwipe(e):t.isPanning?t.onPan():t.isZooming&&t.onZoom()))))},i.prototype.onSwipe=function(e){var t,n=this,s=n.instance,i=n.isSwiping,a=n.sliderStartPos.left||0;if(!0!==i)"x"==i&&(0<n.distanceX&&(n.instance.group.length<2||0===n.instance.current.index&&!n.instance.current.opts.loop)?a+=Math.pow(n.distanceX,.8):n.distanceX<0&&(n.instance.group.length<2||n.instance.current.index===n.instance.group.length-1&&!n.instance.current.opts.loop)?a-=Math.pow(-n.distanceX,.8):a+=n.distanceX),n.sliderLastPos={top:"x"==i?0:n.sliderStartPos.top+n.distanceY,left:a},n.requestId&&(y(n.requestId),n.requestId=null),n.requestId=b(function(){n.sliderLastPos&&(g.each(n.instance.slides,function(e,t){var i=t.pos-n.instance.currPos;g.fancybox.setTranslate(t.$slide,{top:n.sliderLastPos.top,left:n.sliderLastPos.left+i*n.canvasWidth+i*t.opts.gutter})}),n.$container.addClass("fancybox-is-sliding"))});else if(10<Math.abs(n.distance)){if(n.canTap=!1,s.group.length<2&&n.opts.vertical?n.isSwiping="y":s.isDragging||!1===n.opts.vertical||"auto"===n.opts.vertical&&800<g(v).width()?n.isSwiping="x":(t=Math.abs(180*Math.atan2(n.distanceY,n.distanceX)/Math.PI),n.isSwiping=45<t&&t<135?"y":"x"),"y"===n.isSwiping&&g.fancybox.isMobile&&n.isScrollable)return void(n.isScrolling=!0);s.isDragging=n.isSwiping,n.startPoints=n.newPoints,g.each(s.slides,function(e,t){var i,a;g.fancybox.stop(t.$slide),i=g.fancybox.getTranslate(t.$slide),a=g.fancybox.getTranslate(s.$refs.stage),t.$slide.css({transform:"",opacity:"","transition-duration":""}).removeClass("fancybox-animated").removeClass(function(e,t){return(t.match(/(^|\s)fancybox-fx-\S+/g)||[]).join(" ")}),t.pos===s.current.pos&&(n.sliderStartPos.top=i.top-a.top,n.sliderStartPos.left=i.left-a.left),g.fancybox.setTranslate(t.$slide,{top:i.top-a.top,left:i.left-a.left})}),s.SlideShow&&s.SlideShow.isActive&&s.SlideShow.stop()}},i.prototype.onPan=function(){var e=this;return m(e.newPoints[0],e.realPoints[0])<(g.fancybox.isMobile?10:5)?void(e.startPoints=e.newPoints):(e.canTap=!1,e.contentLastPos=e.limitMovement(),e.requestId&&y(e.requestId),void(e.requestId=b(function(){g.fancybox.setTranslate(e.$content,e.contentLastPos)})))},i.prototype.limitMovement=function(){var e,t,i,a,n,s,r=this,o=r.canvasWidth,l=r.canvasHeight,d=r.distanceX,c=r.distanceY,p=r.contentStartPos,u=p.left,h=p.top,f=p.width,v=p.height;return n=o<f?u+d:u,s=h+c,e=Math.max(0,.5*o-.5*f),t=Math.max(0,.5*l-.5*v),i=Math.min(o-f,.5*o-.5*f),a=Math.min(l-v,.5*l-.5*v),0<d&&e<n&&(n=e-1+Math.pow(-e+u+d,.8)||0),d<0&&n<i&&(n=i+1-Math.pow(i-u-d,.8)||0),0<c&&t<s&&(s=t-1+Math.pow(-t+h+c,.8)||0),c<0&&s<a&&(s=a+1-Math.pow(a-h-c,.8)||0),{top:s,left:n}},i.prototype.limitPosition=function(e,t,i,a){var n=this.canvasWidth,s=this.canvasHeight;return e=n<i?(e=0<e?0:e)<n-i?n-i:e:Math.max(0,n/2-i/2),{top:t=s<a?(t=0<t?0:t)<s-a?s-a:t:Math.max(0,s/2-a/2),left:e}},i.prototype.onZoom=function(){var e=this,t=e.contentStartPos,i=t.width,a=t.height,n=t.left,s=t.top,r=m(e.newPoints[0],e.newPoints[1])/e.startDistanceBetweenFingers,o=Math.floor(i*r),l=Math.floor(a*r),d=(i-o)*e.percentageOfImageAtPinchPointX,c=(a-l)*e.percentageOfImageAtPinchPointY,p=(e.newPoints[0].x+e.newPoints[1].x)/2-g(v).scrollLeft(),u=(e.newPoints[0].y+e.newPoints[1].y)/2-g(v).scrollTop(),h=p-e.centerPointStartX,f={top:s+(c+(u-e.centerPointStartY)),left:n+(d+h),scaleX:r,scaleY:r};e.canTap=!1,e.newWidth=o,e.newHeight=l,e.contentLastPos=f,e.requestId&&y(e.requestId),e.requestId=b(function(){g.fancybox.setTranslate(e.$content,e.contentLastPos)})},i.prototype.ontouchend=function(e){var t=this,i=t.isSwiping,a=t.isPanning,n=t.isZooming,s=t.isScrolling;return t.endPoints=c(e),t.dMs=Math.max((new Date).getTime()-t.startTime,1),t.$container.removeClass("fancybox-is-grabbing"),g(l).off(".fb.touch"),l.removeEventListener("scroll",t.onscroll,!0),t.requestId&&(y(t.requestId),t.requestId=null),t.isSwiping=!1,t.isPanning=!1,t.isZooming=!1,t.isScrolling=!1,t.instance.isDragging=!1,t.canTap?t.onTap(e):(t.speed=100,t.velocityX=t.distanceX/t.dMs*.5,t.velocityY=t.distanceY/t.dMs*.5,void(a?t.endPanning():n?t.endZooming():t.endSwiping(i,s)))},i.prototype.endSwiping=function(e,t){var i=this,a=!1,n=i.instance.group.length,s=Math.abs(i.distanceX),r="x"==e&&1<n&&(130<i.dMs&&10<s||50<s);i.sliderLastPos=null,"y"==e&&!t&&50<Math.abs(i.distanceY)?(g.fancybox.animate(i.instance.current.$slide,{top:i.sliderStartPos.top+i.distanceY+150*i.velocityY,opacity:0},200),a=i.instance.close(!0,250)):r&&0<i.distanceX?a=i.instance.previous(300):r&&i.distanceX<0&&(a=i.instance.next(300)),!1!==a||"x"!=e&&"y"!=e||i.instance.centerSlide(200),i.$container.removeClass("fancybox-is-sliding")},i.prototype.endPanning=function(){var e,t,i,a=this;a.contentLastPos&&(t=!1===a.opts.momentum||350<a.dMs?(e=a.contentLastPos.left,a.contentLastPos.top):(e=a.contentLastPos.left+500*a.velocityX,a.contentLastPos.top+500*a.velocityY),(i=a.limitPosition(e,t,a.contentStartPos.width,a.contentStartPos.height)).width=a.contentStartPos.width,i.height=a.contentStartPos.height,g.fancybox.animate(a.$content,i,330))},i.prototype.endZooming=function(){var e,t,i,a,n=this,s=n.instance.current,r=n.newWidth,o=n.newHeight;n.contentLastPos&&(e=n.contentLastPos.left,a={top:t=n.contentLastPos.top,left:e,width:r,height:o,scaleX:1,scaleY:1},g.fancybox.setTranslate(n.$content,a),r<n.canvasWidth&&o<n.canvasHeight?n.instance.scaleToFit(150):r>s.width||o>s.height?n.instance.scaleToActual(n.centerPointStartX,n.centerPointStartY,150):(i=n.limitPosition(e,t,r,o),g.fancybox.animate(n.$content,i,150)))},i.prototype.onTap=function(i){function e(e){var t=r.opts[e];if(g.isFunction(t)&&(t=t.apply(s,[r,i])),t)switch(t){case"close":s.close(a.startEvent);break;case"toggleControls":s.toggleControls();break;case"next":s.next();break;case"nextOrClose":1<s.group.length?s.next():s.close(a.startEvent);break;case"zoom":"image"==r.type&&(r.isLoaded||r.$ghost)&&(s.canPan()?s.scaleToFit():s.isScaledDown()?s.scaleToActual(l,d):s.group.length<2&&s.close(a.startEvent))}}var t,a=this,n=g(i.target),s=a.instance,r=s.current,o=i&&c(i)||a.startPoints,l=o[0]?o[0].x-g(v).scrollLeft()-a.stagePos.left:0,d=o[0]?o[0].y-g(v).scrollTop()-a.stagePos.top:0;if((!i.originalEvent||2!=i.originalEvent.button)&&(n.is("img")||!(l>n[0].clientWidth+n.offset().left))){if(n.is(".fancybox-bg,.fancybox-inner,.fancybox-outer,.fancybox-container"))t="Outside";else if(n.is(".fancybox-slide"))t="Slide";else{if(!s.current.$content||!s.current.$content.find(n).addBack().filter(n).length)return;t="Content"}if(a.tapped){if(clearTimeout(a.tapped),a.tapped=null,50<Math.abs(l-a.tapX)||50<Math.abs(d-a.tapY))return this;e("dblclick"+t)}else a.tapX=l,a.tapY=d,r.opts["dblclick"+t]&&r.opts["dblclick"+t]!==r.opts["click"+t]?a.tapped=setTimeout(function(){a.tapped=null,s.isAnimating||e("click"+t)},500):e("click"+t);return this}},g(l).on("onActivate.fb",function(e,t){t&&!t.Guestures&&(t.Guestures=new i(t))}).on("beforeClose.fb",function(e,t){t&&t.Guestures&&t.Guestures.destroy()})}(window,document,jQuery),function(r,o){"use strict";o.extend(!0,o.fancybox.defaults,{btnTpl:{slideShow:'<button data-fancybox-play class="fancybox-button fancybox-button--play" title="{{PLAY_START}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M6.5 5.4v13.2l11-6.6z"/></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.33 5.75h2.2v12.5h-2.2V5.75zm5.15 0h2.2v12.5h-2.2V5.75z"/></svg></button>'},slideShow:{autoStart:!1,speed:3e3,progress:!0}});function i(e){this.instance=e,this.init()}o.extend(i.prototype,{timer:null,isActive:!1,$button:null,init:function(){var e=this,t=e.instance,i=t.group[t.currIndex].opts.slideShow;e.$button=t.$refs.toolbar.find("[data-fancybox-play]").on("click",function(){e.toggle()}),t.group.length<2||!i?e.$button.hide():i.progress&&(e.$progress=o('<div class="fancybox-progress"></div>').appendTo(t.$refs.inner))},set:function(e){var t=this,i=t.instance,a=i.current;a&&(!0===e||a.opts.loop||i.currIndex<i.group.length-1)?t.isActive&&"video"!==a.contentType&&(t.$progress&&o.fancybox.animate(t.$progress.show(),{scaleX:1},a.opts.slideShow.speed),t.timer=setTimeout(function(){i.current.opts.loop||i.current.index!=i.group.length-1?i.next():i.jumpTo(0)},a.opts.slideShow.speed)):(t.stop(),i.idleSecondsCounter=0,i.showControls())},clear:function(){clearTimeout(this.timer),this.timer=null,this.$progress&&this.$progress.removeAttr("style").hide()},start:function(){var e=this,t=e.instance.current;t&&(e.$button.attr("title",(t.opts.i18n[t.opts.lang]||t.opts.i18n.en).PLAY_STOP).removeClass("fancybox-button--play").addClass("fancybox-button--pause"),e.isActive=!0,t.isComplete&&e.set(!0),e.instance.trigger("onSlideShowChange",!0))},stop:function(){var e=this,t=e.instance.current;e.clear(),e.$button.attr("title",(t.opts.i18n[t.opts.lang]||t.opts.i18n.en).PLAY_START).removeClass("fancybox-button--pause").addClass("fancybox-button--play"),e.isActive=!1,e.instance.trigger("onSlideShowChange",!1),e.$progress&&e.$progress.removeAttr("style").hide()},toggle:function(){this.isActive?this.stop():this.start()}}),o(r).on({"onInit.fb":function(e,t){t&&!t.SlideShow&&(t.SlideShow=new i(t))},"beforeShow.fb":function(e,t,i,a){var n=t&&t.SlideShow;a?n&&i.opts.slideShow.autoStart&&n.start():n&&n.isActive&&n.clear()},"afterShow.fb":function(e,t,i){var a=t&&t.SlideShow;a&&a.isActive&&a.set()},"afterKeydown.fb":function(e,t,i,a,n){var s=t&&t.SlideShow;!s||!i.opts.slideShow||80!==n&&32!==n||o(r.activeElement).is("button,a,input")||(a.preventDefault(),s.toggle())},"beforeClose.fb onDeactivate.fb":function(e,t){var i=t&&t.SlideShow;i&&i.stop()}}),o(r).on("visibilitychange",function(){var e=o.fancybox.getInstance(),t=e&&e.SlideShow;t&&t.isActive&&(r.hidden?t.clear():t.set())})}(document,jQuery),function(s,i){"use strict";var a=function(){for(var e=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"],["webkitRequestFullScreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitCancelFullScreen","webkitfullscreenchange","webkitfullscreenerror"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError"]],t={},i=0;i<e.length;i++){var a=e[i];if(a&&a[1]in s){for(var n=0;n<a.length;n++)t[e[0][n]]=a[n];return t}}return!1}();if(a){var n={request:function(e){(e=e||s.documentElement)[a.requestFullscreen](e.ALLOW_KEYBOARD_INPUT)},exit:function(){s[a.exitFullscreen]()},toggle:function(e){e=e||s.documentElement,this.isFullscreen()?this.exit():this.request(e)},isFullscreen:function(){return Boolean(s[a.fullscreenElement])},enabled:function(){return Boolean(s[a.fullscreenEnabled])}};i.extend(!0,i.fancybox.defaults,{btnTpl:{fullScreen:'<button data-fancybox-fullscreen class="fancybox-button fancybox-button--fsenter" title="{{FULL_SCREEN}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"/></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5 16h3v3h2v-5H5zm3-8H5v2h5V5H8zm6 11h2v-3h3v-2h-5zm2-11V5h-2v5h5V8z"/></svg></button>'},fullScreen:{autoStart:!1}}),i(s).on(a.fullscreenchange,function(){var e=n.isFullscreen(),t=i.fancybox.getInstance();t&&(t.current&&"image"===t.current.type&&t.isAnimating&&(t.current.$content.css("transition","none"),t.isAnimating=!1,t.update(!0,!0,0)),t.trigger("onFullscreenChange",e),t.$refs.container.toggleClass("fancybox-is-fullscreen",e),t.$refs.toolbar.find("[data-fancybox-fullscreen]").toggleClass("fancybox-button--fsenter",!e).toggleClass("fancybox-button--fsexit",e))})}i(s).on({"onInit.fb":function(e,t){return a?void(t&&t.group[t.currIndex].opts.fullScreen?(t.$refs.container.on("click.fb-fullscreen","[data-fancybox-fullscreen]",function(e){e.stopPropagation(),e.preventDefault(),n.toggle()}),t.opts.fullScreen&&!0===t.opts.fullScreen.autoStart&&n.request(),t.FullScreen=n):t&&t.$refs.toolbar.find("[data-fancybox-fullscreen]").hide()):void t.$refs.toolbar.find("[data-fancybox-fullscreen]").remove()},"afterKeydown.fb":function(e,t,i,a,n){t&&t.FullScreen&&70===n&&(a.preventDefault(),t.FullScreen.toggle())},"beforeClose.fb":function(e,t){t&&t.FullScreen&&t.$refs.container.hasClass("fancybox-is-fullscreen")&&n.exit()}})}(document,jQuery),function(e,s){"use strict";var r="fancybox-thumbs",o=r+"-active";s.fancybox.defaults=s.extend(!0,{btnTpl:{thumbs:'<button data-fancybox-thumbs class="fancybox-button fancybox-button--thumbs" title="{{THUMBS}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14.59 14.59h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76H5.65V5.65z"/></svg></button>'},thumbs:{autoStart:!1,hideOnClose:!0,parentEl:".fancybox-container",axis:"y"}},s.fancybox.defaults);function a(e){this.init(e)}s.extend(a.prototype,{$button:null,$grid:null,$list:null,isVisible:!1,isActive:!1,init:function(e){var t=this,i=e.group,a=0;t.instance=e,t.opts=i[e.currIndex].opts.thumbs,(e.Thumbs=t).$button=e.$refs.toolbar.find("[data-fancybox-thumbs]");for(var n=0,s=i.length;n<s&&(i[n].thumb&&a++,!(1<a));n++);1<a&&t.opts?(t.$button.removeAttr("style").on("click",function(){t.toggle()}),t.isActive=!0):t.$button.hide()},create:function(){var i,e=this,t=e.instance,a=e.opts.parentEl,n=[];e.$grid||(e.$grid=s('<div class="'+r+" "+r+"-"+e.opts.axis+'"></div>').appendTo(t.$refs.container.find(a).addBack().filter(a)),e.$grid.on("click","a",function(){t.jumpTo(s(this).attr("data-index"))})),e.$list||(e.$list=s('<div class="'+r+'__list">').appendTo(e.$grid)),s.each(t.group,function(e,t){(i=t.thumb)||"image"!==t.type||(i=t.src),n.push('<a href="javascript:;" tabindex="0" data-index="'+e+'"'+(i&&i.length?' style="background-image:url('+i+')"':'class="fancybox-thumbs-missing"')+"></a>")}),e.$list[0].innerHTML=n.join(""),"x"===e.opts.axis&&e.$list.width(parseInt(e.$grid.css("padding-right"),10)+t.group.length*e.$list.children().eq(0).outerWidth(!0))},focus:function(e){var t,i,a=this,n=a.$list,s=a.$grid;a.instance.current&&(i=(t=n.children().removeClass(o).filter('[data-index="'+a.instance.current.index+'"]').addClass(o)).position(),"y"===a.opts.axis&&(i.top<0||i.top>n.height()-t.outerHeight())?n.stop().animate({scrollTop:n.scrollTop()+i.top},e):"x"===a.opts.axis&&(i.left<s.scrollLeft()||i.left>s.scrollLeft()+(s.width()-t.outerWidth()))&&n.parent().stop().animate({scrollLeft:i.left},e))},update:function(){var e=this;e.instance.$refs.container.toggleClass("fancybox-show-thumbs",this.isVisible),e.isVisible?(e.$grid||e.create(),e.instance.trigger("onThumbsShow"),e.focus(0)):e.$grid&&e.instance.trigger("onThumbsHide"),e.instance.update()},hide:function(){this.isVisible=!1,this.update()},show:function(){this.isVisible=!0,this.update()},toggle:function(){this.isVisible=!this.isVisible,this.update()}}),s(e).on({"onInit.fb":function(e,t){var i;!t||t.Thumbs||(i=new a(t)).isActive&&!0===i.opts.autoStart&&i.show()},"beforeShow.fb":function(e,t,i,a){var n=t&&t.Thumbs;n&&n.isVisible&&n.focus(a?0:250)},"afterKeydown.fb":function(e,t,i,a,n){var s=t&&t.Thumbs;s&&s.isActive&&71===n&&(a.preventDefault(),s.toggle())},"beforeClose.fb":function(e,t){var i=t&&t.Thumbs;i&&i.isVisible&&!1!==i.opts.hideOnClose&&i.$grid.hide()}})}(document,jQuery),function(e,n){"use strict";n.extend(!0,n.fancybox.defaults,{btnTpl:{share:'<button data-fancybox-share class="fancybox-button fancybox-button--share" title="{{SHARE}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M2.55 19c1.4-8.4 9.1-9.8 11.9-9.8V5l7 7-7 6.3v-3.5c-2.8 0-10.5 2.1-11.9 4.2z"/></svg></button>'},share:{url:function(e,t){return!e.currentHash&&"inline"!==t.type&&"html"!==t.type&&(t.origSrc||t.src)||window.location},tpl:'<div class="fancybox-share"><h1>{{SHARE}}</h1><p><a class="fancybox-share__button fancybox-share__button--fb" href="https://www.facebook.com/sharer/sharer.php?u={{url}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m287 456v-299c0-21 6-35 35-35h38v-63c-7-1-29-3-55-3-54 0-91 33-91 94v306m143-254h-205v72h196" /></svg><span>Facebook</span></a><a class="fancybox-share__button fancybox-share__button--tw" href="https://twitter.com/intent/tweet?url={{url}}&text={{descr}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m456 133c-14 7-31 11-47 13 17-10 30-27 37-46-15 10-34 16-52 20-61-62-157-7-141 75-68-3-129-35-169-85-22 37-11 86 26 109-13 0-26-4-37-9 0 39 28 72 65 80-12 3-25 4-37 2 10 33 41 57 77 57-42 30-77 38-122 34 170 111 378-32 359-208 16-11 30-25 41-42z" /></svg><span>Twitter</span></a><a class="fancybox-share__button fancybox-share__button--pt" href="https://www.pinterest.com/pin/create/button/?url={{url}}&description={{descr}}&media={{media}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m265 56c-109 0-164 78-164 144 0 39 15 74 47 87 5 2 10 0 12-5l4-19c2-6 1-8-3-13-9-11-15-25-15-45 0-58 43-110 113-110 62 0 96 38 96 88 0 67-30 122-73 122-24 0-42-19-36-44 6-29 20-60 20-81 0-19-10-35-31-35-25 0-44 26-44 60 0 21 7 36 7 36l-30 125c-8 37-1 83 0 87 0 3 4 4 5 2 2-3 32-39 42-75l16-64c8 16 31 29 56 29 74 0 124-67 124-157 0-69-58-132-146-132z" fill="#fff"/></svg><span>Pinterest</span></a></p><p><input class="fancybox-share__input" type="text" value="{{url_raw}}" onclick="select()" /></p></div>'}}),n(e).on("click","[data-fancybox-share]",function(){var e,t,i=n.fancybox.getInstance(),a=i.current||null;a&&("function"===n.type(a.opts.share.url)&&(e=a.opts.share.url.apply(a,[i,a])),t=a.opts.share.tpl.replace(/\{\{media\}\}/g,"image"===a.type?encodeURIComponent(a.src):"").replace(/\{\{url\}\}/g,encodeURIComponent(e)).replace(/\{\{url_raw\}\}/g,function(e){var t={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;","`":"&#x60;","=":"&#x3D;"};return String(e).replace(/[&<>"'`=\/]/g,function(e){return t[e]})}(e)).replace(/\{\{descr\}\}/g,i.$caption?encodeURIComponent(i.$caption.text()):""),n.fancybox.open({src:i.translate(i,t),type:"html",opts:{touch:!1,animationEffect:!1,afterLoad:function(e,t){i.$refs.container.one("beforeClose.fb",function(){e.close(null,0)}),t.$content.find(".fancybox-share__button").click(function(){return window.open(this.href,"Share","width=550, height=450"),!1})},mobile:{autoFocus:!1}}}))})}(document,jQuery),function(s,r,n){"use strict";function o(){var e=s.location.hash.substr(1),t=e.split("-"),i=1<t.length&&/^\+?\d+$/.test(t[t.length-1])&&parseInt(t.pop(-1),10)||1;return{hash:e,index:i<1?1:i,gallery:t.join("-")}}function t(e){""!==e.gallery&&n("[data-fancybox='"+n.escapeSelector(e.gallery)+"']").eq(e.index-1).focus().trigger("click.fb-start")}function l(e){var t,i;return!!e&&(""!==(i=(t=e.current?e.current.opts:e.opts).hash||(t.$orig?t.$orig.data("fancybox")||t.$orig.data("fancybox-trigger"):""))&&i)}n.escapeSelector||(n.escapeSelector=function(e){return(e+"").replace(/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g,function(e,t){return t?"\0"===e?"�":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e})}),n(function(){!1!==n.fancybox.defaults.hash&&(n(r).on({"onInit.fb":function(e,t){var i,a;!1!==t.group[t.currIndex].opts.hash&&(i=o(),(a=l(t))&&i.gallery&&a==i.gallery&&(t.currIndex=i.index-1))},"beforeShow.fb":function(e,t,i,a){var n;!i||!1===i.opts.hash||(n=l(t))&&(t.currentHash=n+(1<t.group.length?"-"+(i.index+1):""),s.location.hash!=="#"+t.currentHash&&(a&&!t.origHash&&(t.origHash=s.location.hash),t.hashTimer&&clearTimeout(t.hashTimer),t.hashTimer=setTimeout(function(){"replaceState"in s.history?(s.history[a?"pushState":"replaceState"]({},r.title,s.location.pathname+s.location.search+"#"+t.currentHash),a&&(t.hasCreatedHistory=!0)):s.location.hash=t.currentHash,t.hashTimer=null},300)))},"beforeClose.fb":function(e,t,i){!1!==i.opts.hash&&(clearTimeout(t.hashTimer),t.currentHash&&t.hasCreatedHistory?s.history.back():t.currentHash&&("replaceState"in s.history?s.history.replaceState({},r.title,s.location.pathname+s.location.search+(t.origHash||"")):s.location.hash=t.origHash),t.currentHash=null)}}),n(s).on("hashchange.fb",function(){var e=o(),a=null;n.each(n(".fancybox-container").get().reverse(),function(e,t){var i=n(t).data("FancyBox");if(i&&i.currentHash)return a=i,!1}),a?a.currentHash===e.gallery+"-"+e.index||1===e.index&&a.currentHash==e.gallery||(a.currentHash=null,a.close()):""!==e.gallery&&t(e)}),setTimeout(function(){n.fancybox.getInstance()||t(o())},50))})}(window,document,jQuery),function(e,t){"use strict";var n=(new Date).getTime();t(e).on({"onInit.fb":function(e,a,t){a.$refs.stage.on("mousewheel DOMMouseScroll wheel MozMousePixelScroll",function(e){var t=a.current,i=(new Date).getTime();a.group.length<2||!1===t.opts.wheel||"auto"===t.opts.wheel&&"image"!==t.type||(e.preventDefault(),e.stopPropagation(),t.$slide.hasClass("fancybox-animated")||(e=e.originalEvent||e,i-n<250||(n=i,a[(-e.deltaY||-e.deltaX||e.wheelDelta||-e.detail)<0?"next":"previous"]())))})}})}(document,jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
